// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
Object {
  "@aws-cdk_cloud-assembly-schema.ArtifactManifest.md": "# struct ArtifactManifest  <a id=\\"aws-cdk-cloud-assembly-schema-artifactmanifest\\"></a>


A manifest for a single artifact within the cloud assembly.



Name | Type | Description 
-----|------|-------------
**type** | <code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code> | The type of artifact.
**dependencies**? | <code>Array<string></code> | IDs of artifacts that must be deployed before this artifact.<br/>__*Default*__: no dependencies.
**environment**? | <code>string</code> | The environment into which this artifact is deployed.<br/>__*Default*__: no envrionment.
**metadata**? | <code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code> | Associated metadata.<br/>__*Default*__: no metadata.
**properties**? | <code>Map<string, any></code> | The set of properties for this artifact (depends on type).<br/>__*Default*__: no properties.
",
  "@aws-cdk_cloud-assembly-schema.ArtifactMetadataEntryType.md": "# enum ArtifactMetadataEntryType  <a id=\\"aws-cdk-cloud-assembly-schema-artifactmetadataentrytype\\"></a>

Type of artifact metadata entry.

Name | Description
-----|-----
**ASSET** |Asset in metadata.
**INFO** |Metadata key used to print INFO-level messages by the toolkit when an app is syntheized.
**WARN** |Metadata key used to print WARNING-level messages by the toolkit when an app is syntheized.
**ERROR** |Metadata key used to print ERROR-level messages by the toolkit when an app is syntheized.
**LOGICAL_ID** |Represents the CloudFormation logical ID of a resource at a certain path.
**STACK_TAGS** |Represents tags of a stack.",
  "@aws-cdk_cloud-assembly-schema.ArtifactType.md": "# enum ArtifactType  <a id=\\"aws-cdk-cloud-assembly-schema-artifacttype\\"></a>

Type of cloud artifact.

Name | Description
-----|-----
**NONE** |Stub required because of JSII.
**AWS_CLOUDFORMATION_STACK** |The artifact is an AWS CloudFormation stack.
**CDK_TREE** |The artifact contains the CDK application's construct tree.",
  "@aws-cdk_cloud-assembly-schema.AssemblyManifest.md": "# struct AssemblyManifest  <a id=\\"aws-cdk-cloud-assembly-schema-assemblymanifest\\"></a>

__Obtainable from__: [Manifest](./@aws-cdk_cloud-assembly-schema.Manifest.md).[load](./@aws-cdk_cloud-assembly-schema.Manifest.md#aws-cdk-cloud-assembly-schema-manifest-load)()

A manifest which describes the cloud assembly.



Name | Type | Description 
-----|------|-------------
**version** | <code>string</code> | Protocol version.
**artifacts**? | <code>Map<string, [ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)></code> | The set of artifacts in this assembly.<br/>__*Default*__: no artifacts.
**missing**? | <code>Array<[MissingContext](./@aws-cdk_cloud-assembly-schema.MissingContext.md)></code> | Missing context information.<br/>__*Default*__: no missing context.
**runtime**? | <code>[RuntimeInfo](./@aws-cdk_cloud-assembly-schema.RuntimeInfo.md)</code> | Runtime information.<br/>__*Default*__: no info.
",
  "@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md": "# struct ContainerImageAssetMetadataEntry  <a id=\\"aws-cdk-cloud-assembly-schema-containerimageassetmetadataentry\\"></a>


Metadata Entry spec for container images.



Name | Type | Description 
-----|------|-------------
**id** | <code>string</code> | Logical identifier for the asset.
**packaging** | <code>string</code> | Type of asset.
**path** | <code>string</code> | Path on disk to the asset.
**sourceHash** | <code>string</code> | The hash of the asset source.
**buildArgs**? | <code>Map<string, string></code> | Build args to pass to the \`docker build\` command.<br/>__*Default*__: no build args are passed
**file**? | <code>string</code> | Path to the Dockerfile (relative to the directory).<br/>__*Default*__: no file is passed
**imageNameParameter**?⚠️ | <code>string</code> | ECR Repository name and repo digest (separated by \\"@sha256:\\") where this image is stored.<br/>__*Default*__: undefined If not specified, \`repositoryName\` and \`imageTag\` are required because otherwise how will the stack know where to find the asset, ha?
**imageTag**? | <code>string</code> | The docker image tag to use for tagging pushed images.<br/>__*Default*__: this parameter is REQUIRED after 1.21.0
**repositoryName**? | <code>string</code> | ECR repository name, if omitted a default name based on the asset's ID is used instead.<br/>__*Default*__: this parameter is REQUIRED after 1.21.0
**target**? | <code>string</code> | Docker target to build to.<br/>__*Default*__: no build target
",
  "@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md": "# struct FileAssetMetadataEntry  <a id=\\"aws-cdk-cloud-assembly-schema-fileassetmetadataentry\\"></a>


Metadata Entry spec for files.



Name | Type | Description 
-----|------|-------------
**artifactHashParameter** | <code>string</code> | The name of the parameter where the hash of the bundled asset should be passed in.
**id** | <code>string</code> | Logical identifier for the asset.
**packaging** | <code>string</code> | Requested packaging style.
**path** | <code>string</code> | Path on disk to the asset.
**s3BucketParameter** | <code>string</code> | Name of parameter where S3 bucket should be passed in.
**s3KeyParameter** | <code>string</code> | Name of parameter where S3 key should be passed in.
**sourceHash** | <code>string</code> | The hash of the asset source.
",
  "@aws-cdk_cloud-assembly-schema.Manifest.md": "# class Manifest  <a id=\\"aws-cdk-cloud-assembly-schema-manifest\\"></a>

Protocol utility class.


## Methods


### *static* load(filePath) <a id=\\"aws-cdk-cloud-assembly-schema-manifest-load\\"></a>

Load manifest from file.

\`\`\`ts
static load(filePath: string): AssemblyManifest
\`\`\`

* **filePath** (<code>string</code>)  - path to the manifest file.

__Returns__:
* <code>[AssemblyManifest](./@aws-cdk_cloud-assembly-schema.AssemblyManifest.md)</code>

### *static* save(manifest, filePath) <a id=\\"aws-cdk-cloud-assembly-schema-manifest-save\\"></a>

Save manifest to file.

\`\`\`ts
static save(manifest: AssemblyManifest, filePath: string): void
\`\`\`

* **manifest** (<code>[AssemblyManifest](./@aws-cdk_cloud-assembly-schema.AssemblyManifest.md)</code>)  - manifest.
* **filePath** (<code>string</code>)  *No description*




### *static* version() <a id=\\"aws-cdk-cloud-assembly-schema-manifest-version\\"></a>

Fetch the current schema version number.

\`\`\`ts
static version(): string
\`\`\`


__Returns__:
* <code>string</code>
",
  "@aws-cdk_cloud-assembly-schema.MetadataEntry.md": "# struct MetadataEntry  <a id=\\"aws-cdk-cloud-assembly-schema-metadataentry\\"></a>


A metadata entry in a cloud assembly artifact.



Name | Type | Description 
-----|------|-------------
**type** | <code>string</code> | The type of the metadata entry.
**data**? | <code>string &#124; [FileAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md) &#124; [ContainerImageAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md) &#124; Array<[Tag](./@aws-cdk_cloud-assembly-schema.Tag.md)></code> | The data.<br/>__*Default*__: no data.
**trace**? | <code>Array<string></code> | A stack trace for when the entry was created.<br/>__*Default*__: no trace.
",
  "@aws-cdk_cloud-assembly-schema.MissingContext.md": "# struct MissingContext  <a id=\\"aws-cdk-cloud-assembly-schema-missingcontext\\"></a>


Represents a missing piece of context.



Name | Type | Description 
-----|------|-------------
**key** | <code>string</code> | The missing context key.
**props** | <code>Map<string, any></code> | A set of provider-specific options.
**provider** | <code>string</code> | The provider from which we expect this context key to be obtained.
",
  "@aws-cdk_cloud-assembly-schema.RuntimeInfo.md": "# struct RuntimeInfo  <a id=\\"aws-cdk-cloud-assembly-schema-runtimeinfo\\"></a>


Information about the application's runtime components.



Name | Type | Description 
-----|------|-------------
**libraries** | <code>Map<string, string></code> | The list of libraries loaded in the application, associated with their versions.
",
  "@aws-cdk_cloud-assembly-schema.Tag.md": "# struct Tag  <a id=\\"aws-cdk-cloud-assembly-schema-tag\\"></a>


Metadata Entry spec for stack tag.



Name | Type | Description 
-----|------|-------------
**key** | <code>string</code> | Tag key.
**value** | <code>string</code> | Tag value.
",
  "@aws-cdk_cloud-assembly-schema.md": "## Cloud Assembly Schema
<!--BEGIN STABILITY BANNER-->
---

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.

## Cloud Assembly

The *Cloud Assembly* is the output of the synthesis operation. It is produced as part of the
[\`cdk synth\`](https://github.com/aws/aws-cdk/tree/master/packages/aws-cdk#cdk-synthesize)
command, or the [\`app.synth()\`](https://github.com/aws/aws-cdk/blob/master/packages/@aws-cdk/core/lib/app.ts#L135) method invocation.

Its essentially a set of files and directories, one of which is the \`manifest.json\` file. It defines the set of instructions that are
needed in order to deploy the assembly directory.

> For example, when \`cdk deploy\` is executed, the CLI reads this file and performs its instructions:
> - Build container images.
> - Upload assets.
> - Deploy CloudFormation templates.

Therefore, the assembly is how the CDK class library and CDK CLI (or any other consumer) communicate. To ensure compatibility
between the assembly and its consumers, we treat the manifest file as a well defined, versioned schema.

## Schema

This module contains the typescript structs that comprise the \`manifest.json\` file, as well as the
generated [*json-schema*](./schema/cloud-assembly.schema.json).

## Versioning

The schema version is specified in the [\`cloud-assembly.version.json\`](./schema/cloud-assembly.schema.json) file, under the \`version\` property.
It follows semantic versioning, but with a small twist.

When we add instructions to the assembly, they are reflected in the manifest file and the *json-schema* accordingly.
Every such instruction, is crucial for ensuring the correct deployment behavior. This means that to properly deploy a cloud assembly,
consumers must be aware of every such instruction modification.

For this reason, every change to the schema, even though it might not strictly break validation of the *json-schema* format,
is considered \`major\` version bump.

## How to consume

If you'd like to consume the [schema file](./schema/cloud-assembly.schema.json) in order to do validations on \`manifest.json\` files,
simply download it from this repo and run it against standard *json-schema* validators, such as [jsonschema](https://www.npmjs.com/package/jsonschema).

Consumers must take into account the \`major\` version of the schema they are consuming. They should reject cloud assemblies
with a \`major\` version that is higher than what they expect. While schema validation might pass on such assemblies, the deployment integrity
cannot be guaranteed because some instructions will be ignored.

> For example, if your consumer was built when the schema version was 2.0.0, you should reject deploying cloud assemblies with a
> manifest version of 3.0.0.

## Contributing

See [Contribution Guide](./CONTRIBUTING.md)
## API Reference

**Classes**

Name|Description
----|-----------
[Manifest](./@aws-cdk_cloud-assembly-schema.Manifest.md)|Protocol utility class.


**Structs**

Name|Description
----|-----------
[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)|A manifest for a single artifact within the cloud assembly.
[AssemblyManifest](./@aws-cdk_cloud-assembly-schema.AssemblyManifest.md)|A manifest which describes the cloud assembly.
[ContainerImageAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md)|Metadata Entry spec for container images.
[FileAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md)|Metadata Entry spec for files.
[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)|A metadata entry in a cloud assembly artifact.
[MissingContext](./@aws-cdk_cloud-assembly-schema.MissingContext.md)|Represents a missing piece of context.
[RuntimeInfo](./@aws-cdk_cloud-assembly-schema.RuntimeInfo.md)|Information about the application's runtime components.
[Tag](./@aws-cdk_cloud-assembly-schema.Tag.md)|Metadata Entry spec for stack tag.


**Enums**

Name|Description
----|-----------
[ArtifactMetadataEntryType](./@aws-cdk_cloud-assembly-schema.ArtifactMetadataEntryType.md)|Type of artifact metadata entry.
[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)|Type of cloud artifact.
",
  "@aws-cdk_core.App.md": "# class App  <a id=\\"aws-cdk-core-app\\"></a>

A construct which represents an entire CDK app. This construct is normally the root of the construct tree.

You would normally define an \`App\` instance in your program's entrypoint,
then define constructs where the app is used as the parent scope.

After all the child constructs are defined within the app, you should call
\`app.synth()\` which will emit a \\"cloud assembly\\" from this app into the
directory specified by \`outdir\`. Cloud assemblies includes artifacts such as
CloudFormation templates and assets that are needed to deploy this app into
the AWS cloud.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [Construct](./@aws-cdk_core.Construct.md)

## Initializer


Initializes a CDK application.

\`\`\`ts
new App(props?: AppProps)
\`\`\`

* **props** (<code>[AppProps](./@aws-cdk_core.AppProps.md)</code>)  initialization properties.
  * **autoSynth** (<code>boolean</code>)  Automatically call \`synth()\` before the program exits. __*Default*__: true if running via CDK CLI (\`CDK_OUTDIR\` is set), \`false\` otherwise
  * **context** (<code>Map<string, string></code>)  Additional context values for the application. __*Default*__: no additional context
  * **outdir** (<code>string</code>)  The output directory into which to emit synthesized artifacts. __*Default*__: If this value is _not_ set, considers the environment variable \`CDK_OUTDIR\`.   If \`CDK_OUTDIR\` is not defined, uses a temp directory.
  * **runtimeInfo** (<code>boolean</code>)  Include runtime versioning information in cloud assembly manifest. __*Default*__: true runtime info is included unless \`aws:cdk:disable-runtime-info\` is set in the context.
  * **stackTraces** (<code>boolean</code>)  Include construct creation stack trace in the \`aws:cdk:trace\` metadata key of all constructs. __*Default*__: true stack traces are included unless \`aws:cdk:disable-stack-trace\` is set in the context.
  * **treeMetadata** (<code>boolean</code>)  Include construct tree metadata as part of the Cloud Assembly. __*Default*__: true


## Methods


### synth() <a id=\\"aws-cdk-core-app-synth\\"></a>

Synthesizes a cloud assembly for this app.

Emits it to the directory
specified by \`outdir\`.

\`\`\`ts
synth(): CloudAssembly
\`\`\`


__Returns__:
* <code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>

### protected prepare() <a id=\\"aws-cdk-core-app-prepare\\"></a>

Perform final modifications before synthesis.

This method can be implemented by derived constructs in order to perform
final changes before synthesis. prepare() will be called after child
constructs have been prepared.

This is an advanced framework feature. Only use this if you
understand the implications.

\`\`\`ts
protected prepare(): void
\`\`\`





### *static* isApp(obj) <a id=\\"aws-cdk-core-app-isapp\\"></a>

Checks if an object is an instance of the \`App\` class.

\`\`\`ts
static isApp(obj: any): boolean
\`\`\`

* **obj** (<code>any</code>)  The object to evaluate.

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.AppProps.md": "# struct AppProps  <a id=\\"aws-cdk-core-appprops\\"></a>


Initialization props for apps.



Name | Type | Description 
-----|------|-------------
**autoSynth**? | <code>boolean</code> | Automatically call \`synth()\` before the program exits.<br/>__*Default*__: true if running via CDK CLI (\`CDK_OUTDIR\` is set), \`false\` otherwise
**context**? | <code>Map<string, string></code> | Additional context values for the application.<br/>__*Default*__: no additional context
**outdir**? | <code>string</code> | The output directory into which to emit synthesized artifacts.<br/>__*Default*__: If this value is _not_ set, considers the environment variable \`CDK_OUTDIR\`.   If \`CDK_OUTDIR\` is not defined, uses a temp directory.
**runtimeInfo**? | <code>boolean</code> | Include runtime versioning information in cloud assembly manifest.<br/>__*Default*__: true runtime info is included unless \`aws:cdk:disable-runtime-info\` is set in the context.
**stackTraces**? | <code>boolean</code> | Include construct creation stack trace in the \`aws:cdk:trace\` metadata key of all constructs.<br/>__*Default*__: true stack traces are included unless \`aws:cdk:disable-stack-trace\` is set in the context.
**treeMetadata**? | <code>boolean</code> | Include construct tree metadata as part of the Cloud Assembly.<br/>__*Default*__: true
",
  "@aws-cdk_core.Arn.md": "# class Arn  <a id=\\"aws-cdk-core-arn\\"></a>




## Methods


### *static* format(components, stack) <a id=\\"aws-cdk-core-arn-format\\"></a>

Creates an ARN from components.

If \`partition\`, \`region\` or \`account\` are not specified, the stack's
partition, region and account will be used.

If any component is the empty string, an empty string will be inserted
into the generated ARN at the location that component corresponds to.

The ARN will be formatted as follows:

   arn:{partition}:{service}:{region}:{account}:{resource}{sep}{resource-name}

The required ARN pieces that are omitted will be taken from the stack that
the 'scope' is attached to. If all ARN pieces are supplied, the supplied scope
can be 'undefined'.

\`\`\`ts
static format(components: ArnComponents, stack: Stack): string
\`\`\`

* **components** (<code>[ArnComponents](./@aws-cdk_core.ArnComponents.md)</code>)  *No description*
* **stack** (<code>[Stack](./@aws-cdk_core.Stack.md)</code>)  *No description*

__Returns__:
* <code>string</code>

### *static* parse(arn, sepIfToken?, hasName?) <a id=\\"aws-cdk-core-arn-parse\\"></a>

Given an ARN, parses it and returns components.

If the ARN is a concrete string, it will be parsed and validated. The
separator (\`sep\`) will be set to '/' if the 6th component includes a '/',
in which case, \`resource\` will be set to the value before the '/' and
\`resourceName\` will be the rest. In case there is no '/', \`resource\` will
be set to the 6th components and \`resourceName\` will be set to the rest
of the string.

If the ARN includes tokens (or is a token), the ARN cannot be validated,
since we don't have the actual value yet at the time of this function
call. You will have to know the separator and the type of ARN. The
resulting \`ArnComponents\` object will contain tokens for the
subexpressions of the ARN, not string literals. In this case this
function cannot properly parse the complete final resourceName (path) out
of ARNs that use '/' to both separate the 'resource' from the
'resourceName' AND to subdivide the resourceName further. For example, in
S3 ARNs:

    arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png

After parsing the resourceName will not contain
'path/to/exampleobject.png' but simply 'path'. This is a limitation
because there is no slicing functionality in CloudFormation templates.

\`\`\`ts
static parse(arn: string, sepIfToken?: string, hasName?: boolean): ArnComponents
\`\`\`

* **arn** (<code>string</code>)  The ARN to parse.
* **sepIfToken** (<code>string</code>)  The separator used to separate resource from resourceName.
* **hasName** (<code>boolean</code>)  Whether there is a name component in the ARN at all.

__Returns__:
* <code>[ArnComponents](./@aws-cdk_core.ArnComponents.md)</code>
",
  "@aws-cdk_core.ArnComponents.md": "# struct ArnComponents  <a id=\\"aws-cdk-core-arncomponents\\"></a>

__Obtainable from__: [Arn](./@aws-cdk_core.Arn.md).[parse](./@aws-cdk_core.Arn.md#aws-cdk-core-arn-parse)(), [Stack](./@aws-cdk_core.Stack.md).[parseArn](./@aws-cdk_core.Stack.md#aws-cdk-core-stack-parsearn)()





Name | Type | Description 
-----|------|-------------
**resource** | <code>string</code> | Resource type (e.g. \\"table\\", \\"autoScalingGroup\\", \\"certificate\\"). For some resource types, e.g. S3 buckets, this field defines the bucket name.
**service** | <code>string</code> | The service namespace that identifies the AWS product (for example, 's3', 'iam', 'codepipline').
**account**? | <code>string</code> | The ID of the AWS account that owns the resource, without the hyphens.<br/>__*Default*__: The account the stack is deployed to.
**partition**? | <code>string</code> | The partition that the resource is in.<br/>__*Default*__: The AWS partition the stack is deployed to.
**region**? | <code>string</code> | The region the resource resides in.<br/>__*Default*__: The region the stack is deployed to.
**resourceName**? | <code>string</code> | Resource name or path within the resource (i.e. S3 bucket object key) or a wildcard such as \`\`\\"*\\"\`\`. This is service-dependent.<br/>__*Optional*__
**sep**? | <code>string</code> | Separator between resource type and the resource.<br/>__*Default*__: '/'
",
  "@aws-cdk_core.Aws.md": "# class Aws  <a id=\\"aws-cdk-core-aws\\"></a>

Accessor for pseudo parameters.

Since pseudo parameters need to be anchored to a stack somewhere in the
construct tree, this class takes an scope parameter; the pseudo parameter
values can be obtained as properties from an scoped object.



## Properties


Name | Type | Description 
-----|------|-------------
*static* **ACCOUNT_ID** | <code>string</code> | <span></span>
*static* **NOTIFICATION_ARNS** | <code>Array<string></code> | <span></span>
*static* **NO_VALUE** | <code>string</code> | <span></span>
*static* **PARTITION** | <code>string</code> | <span></span>
*static* **REGION** | <code>string</code> | <span></span>
*static* **STACK_ID** | <code>string</code> | <span></span>
*static* **STACK_NAME** | <code>string</code> | <span></span>
*static* **URL_SUFFIX** | <code>string</code> | <span></span>
",
  "@aws-cdk_core.CfnAutoScalingReplacingUpdate.md": "# struct CfnAutoScalingReplacingUpdate  <a id=\\"aws-cdk-core-cfnautoscalingreplacingupdate\\"></a>


Specifies whether an Auto Scaling group and the instances it contains are replaced during an update.

During replacement,
AWS CloudFormation retains the old group until it finishes creating the new one. If the update fails, AWS CloudFormation
can roll back to the old Auto Scaling group and delete the new Auto Scaling group.

While AWS CloudFormation creates the new group, it doesn't detach or attach any instances. After successfully creating
the new Auto Scaling group, AWS CloudFormation deletes the old Auto Scaling group during the cleanup process.

When you set the WillReplace parameter, remember to specify a matching CreationPolicy. If the minimum number of
instances (specified by the MinSuccessfulInstancesPercent property) don't signal success within the Timeout period
(specified in the CreationPolicy policy), the replacement update fails and AWS CloudFormation rolls back to the old
Auto Scaling group.



Name | Type | Description 
-----|------|-------------
**willReplace**? | <code>boolean</code> | __*Optional*__
",
  "@aws-cdk_core.CfnAutoScalingRollingUpdate.md": "# struct CfnAutoScalingRollingUpdate  <a id=\\"aws-cdk-core-cfnautoscalingrollingupdate\\"></a>


To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group, use the AutoScalingRollingUpdate policy.

Rolling updates enable you to specify whether AWS CloudFormation updates instances that are in an Auto Scaling
group in batches or all at once.



Name | Type | Description 
-----|------|-------------
**maxBatchSize**? | <code>number</code> | Specifies the maximum number of instances that AWS CloudFormation updates.<br/>__*Optional*__
**minInstancesInService**? | <code>number</code> | Specifies the minimum number of instances that must be in service within the Auto Scaling group while AWS CloudFormation updates old instances.<br/>__*Optional*__
**minSuccessfulInstancesPercent**? | <code>number</code> | Specifies the percentage of instances in an Auto Scaling rolling update that must signal success for an update to succeed.<br/>__*Optional*__
**pauseTime**? | <code>string</code> | The amount of time that AWS CloudFormation pauses after making a change to a batch of instances to give those instances time to start software applications.<br/>__*Optional*__
**suspendProcesses**? | <code>Array<string></code> | Specifies the Auto Scaling processes to suspend during a stack update.<br/>__*Optional*__
**waitOnResourceSignals**? | <code>boolean</code> | Specifies whether the Auto Scaling group waits on signals from new instances during an update.<br/>__*Optional*__
",
  "@aws-cdk_core.CfnAutoScalingScheduledAction.md": "# struct CfnAutoScalingScheduledAction  <a id=\\"aws-cdk-core-cfnautoscalingscheduledaction\\"></a>


With scheduled actions, the group size properties of an Auto Scaling group can change at any time.

When you update a
stack with an Auto Scaling group and scheduled action, AWS CloudFormation always sets the group size property values of
your Auto Scaling group to the values that are defined in the AWS::AutoScaling::AutoScalingGroup resource of your template,
even if a scheduled action is in effect.

If you do not want AWS CloudFormation to change any of the group size property values when you have a scheduled action in
effect, use the AutoScalingScheduledAction update policy to prevent AWS CloudFormation from changing the MinSize, MaxSize,
or DesiredCapacity properties unless you have modified these values in your template.\\\\



Name | Type | Description 
-----|------|-------------
**ignoreUnmodifiedGroupSizeProperties**? | <code>boolean</code> | __*Optional*__
",
  "@aws-cdk_core.CfnCodeDeployLambdaAliasUpdate.md": "# struct CfnCodeDeployLambdaAliasUpdate  <a id=\\"aws-cdk-core-cfncodedeploylambdaaliasupdate\\"></a>


To perform an AWS CodeDeploy deployment when the version changes on an AWS::Lambda::Alias resource, use the CodeDeployLambdaAliasUpdate update policy.



Name | Type | Description 
-----|------|-------------
**applicationName** | <code>string</code> | The name of the AWS CodeDeploy application.
**deploymentGroupName** | <code>string</code> | The name of the AWS CodeDeploy deployment group.
**afterAllowTrafficHook**? | <code>string</code> | The name of the Lambda function to run after traffic routing completes.<br/>__*Optional*__
**beforeAllowTrafficHook**? | <code>string</code> | The name of the Lambda function to run before traffic routing starts.<br/>__*Optional*__
",
  "@aws-cdk_core.CfnCondition.md": "# class CfnCondition  <a id=\\"aws-cdk-core-cfncondition\\"></a>

Represents a CloudFormation condition, for resources which must be conditionally created and the determination must be made at deploy time.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md), [ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md), [IResolvable](./@aws-cdk_core.IResolvable.md), [IResolvable](./@aws-cdk_core.IResolvable.md)
__Extends__: [CfnElement](./@aws-cdk_core.CfnElement.md)

## Initializer


Build a new condition.

The condition must be constructed with a condition token,
that the condition is based on.

\`\`\`ts
new CfnCondition(scope: Construct, id: string, props?: CfnConditionProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnConditionProps](./@aws-cdk_core.CfnConditionProps.md)</code>)  *No description*
  * **expression** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  The expression that the condition will evaluate. __*Default*__: None.



## Properties


Name | Type | Description 
-----|------|-------------
**expression**? | <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code> | The condition statement.<br/>__*Optional*__

## Methods


### resolve(_context) <a id=\\"aws-cdk-core-cfncondition-resolve\\"></a>

Synthesizes the condition.

\`\`\`ts
resolve(_context: IResolveContext): any
\`\`\`

* **_context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.CfnConditionProps.md": "# struct CfnConditionProps  <a id=\\"aws-cdk-core-cfnconditionprops\\"></a>






Name | Type | Description 
-----|------|-------------
**expression**? | <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code> | The expression that the condition will evaluate.<br/>__*Default*__: None.
",
  "@aws-cdk_core.CfnCreationPolicy.md": "# struct CfnCreationPolicy  <a id=\\"aws-cdk-core-cfncreationpolicy\\"></a>


Associate the CreationPolicy attribute with a resource to prevent its status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.

To signal a
resource, you can use the cfn-signal helper script or SignalResource API. AWS CloudFormation publishes valid signals
to the stack events so that you track the number of signals sent.

The creation policy is invoked only when AWS CloudFormation creates the associated resource. Currently, the only
AWS CloudFormation resources that support creation policies are AWS::AutoScaling::AutoScalingGroup, AWS::EC2::Instance,
and AWS::CloudFormation::WaitCondition.

Use the CreationPolicy attribute when you want to wait on resource configuration actions before stack creation proceeds.
For example, if you install and configure software applications on an EC2 instance, you might want those applications to
be running before proceeding. In such cases, you can add a CreationPolicy attribute to the instance, and then send a success
signal to the instance after the applications are installed and configured. For a detailed example, see Deploying Applications
on Amazon EC2 with AWS CloudFormation.



Name | Type | Description 
-----|------|-------------
**autoScalingCreationPolicy**? | <code>[CfnResourceAutoScalingCreationPolicy](./@aws-cdk_core.CfnResourceAutoScalingCreationPolicy.md)</code> | For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed.<br/>__*Optional*__
**resourceSignal**? | <code>[CfnResourceSignal](./@aws-cdk_core.CfnResourceSignal.md)</code> | When AWS CloudFormation creates the associated resource, configures the number of required success signals and the length of time that AWS CloudFormation waits for those signals.<br/>__*Optional*__
",
  "@aws-cdk_core.CfnDeletionPolicy.md": "# enum CfnDeletionPolicy  <a id=\\"aws-cdk-core-cfndeletionpolicy\\"></a>

With the DeletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted.

You specify a DeletionPolicy attribute for each resource that you want to control. If a resource has no DeletionPolicy
attribute, AWS CloudFormation deletes the resource by default. Note that this capability also applies to update operations
that lead to resources being removed.

Name | Description
-----|-----
**DELETE** |AWS CloudFormation deletes the resource and all its content if applicable during stack deletion.
**RETAIN** |AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted.
**SNAPSHOT** |For resources that support snapshots (AWS::EC2::Volume, AWS::ElastiCache::CacheCluster, AWS::ElastiCache::ReplicationGroup, AWS::RDS::DBInstance, AWS::RDS::DBCluster, and AWS::Redshift::Cluster), AWS CloudFormation creates a snapshot for the resource before deleting it.",
  "@aws-cdk_core.CfnDynamicReference.md": "# class CfnDynamicReference  <a id=\\"aws-cdk-core-cfndynamicreference\\"></a>

References a dynamically retrieved value.

This is a Construct so that subclasses will (eventually) be able to attach
metadata to themselves without having to change call signatures.

__Implements__: [IResolvable](./@aws-cdk_core.IResolvable.md)
__Extends__: [Intrinsic](./@aws-cdk_core.Intrinsic.md)

## Initializer




\`\`\`ts
new CfnDynamicReference(service: CfnDynamicReferenceService, key: string)
\`\`\`

* **service** (<code>[CfnDynamicReferenceService](./@aws-cdk_core.CfnDynamicReferenceService.md)</code>)  *No description*
* **key** (<code>string</code>)  *No description*

",
  "@aws-cdk_core.CfnDynamicReferenceProps.md": "# struct CfnDynamicReferenceProps  <a id=\\"aws-cdk-core-cfndynamicreferenceprops\\"></a>


Properties for a Dynamic Reference.



Name | Type | Description 
-----|------|-------------
**referenceKey** | <code>string</code> | The reference key of the dynamic reference.
**service** | <code>[CfnDynamicReferenceService](./@aws-cdk_core.CfnDynamicReferenceService.md)</code> | The service to retrieve the dynamic reference from.
",
  "@aws-cdk_core.CfnDynamicReferenceService.md": "# enum CfnDynamicReferenceService  <a id=\\"aws-cdk-core-cfndynamicreferenceservice\\"></a>

The service to retrieve the dynamic reference from.

Name | Description
-----|-----
**SSM** |Plaintext value stored in AWS Systems Manager Parameter Store.
**SSM_SECURE** |Secure string stored in AWS Systems Manager Parameter Store.
**SECRETS_MANAGER** |Secret stored in AWS Secrets Manager.",
  "@aws-cdk_core.CfnElement.md": "# class CfnElement  <a id=\\"aws-cdk-core-cfnelement\\"></a>

An element of a CloudFormation stack.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [Construct](./@aws-cdk_core.Construct.md)
__Implemented by__: [CfnCondition](./@aws-cdk_core.CfnCondition.md), [CfnInclude](./@aws-cdk_core.CfnInclude.md), [CfnMapping](./@aws-cdk_core.CfnMapping.md), [CfnOutput](./@aws-cdk_core.CfnOutput.md), [CfnParameter](./@aws-cdk_core.CfnParameter.md), [CfnResource](./@aws-cdk_core.CfnResource.md), [CfnRule](./@aws-cdk_core.CfnRule.md)

## Initializer


Creates an entity and binds it to a tree.

Note that the root of the tree must be a Stack object (not just any Root).

\`\`\`ts
new CfnElement(scope: Construct, id: string)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct.
* **id** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**creationStack** | <code>Array<string></code> | <span></span>
**logicalId** | <code>string</code> | The logical ID for this CloudFormation stack element.
**stack** | <code>[Stack](./@aws-cdk_core.Stack.md)</code> | The stack in which this element is defined.

## Methods


### overrideLogicalId(newLogicalId) <a id=\\"aws-cdk-core-cfnelement-overridelogicalid\\"></a>

Overrides the auto-generated logical ID with a specific ID.

\`\`\`ts
overrideLogicalId(newLogicalId: string): void
\`\`\`

* **newLogicalId** (<code>string</code>)  The new logical ID to use for this stack element.




### *static* isCfnElement(x) <a id=\\"aws-cdk-core-cfnelement-iscfnelement\\"></a>

Returns \`true\` if a construct is a stack element (i.e. part of the synthesized cloudformation template).

Uses duck-typing instead of \`instanceof\` to allow stack elements from different
versions of this library to be included in the same stack.

\`\`\`ts
static isCfnElement(x: any): boolean
\`\`\`

* **x** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.CfnInclude.md": "# class CfnInclude  <a id=\\"aws-cdk-core-cfninclude\\"></a>

Includes a CloudFormation template into a stack.

All elements of the template will be merged into
the current stack, together with any elements created programmatically.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnElement](./@aws-cdk_core.CfnElement.md)

## Initializer


Creates an adopted template construct.

The template will be incorporated into the stack as-is with no changes at all.
This means that logical IDs of entities within this template may conflict with logical IDs of entities that are part of the
stack.

\`\`\`ts
new CfnInclude(scope: Construct, id: string, props: CfnIncludeProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct of this template.
* **id** (<code>string</code>)  The ID of this construct.
* **props** (<code>[CfnIncludeProps](./@aws-cdk_core.CfnIncludeProps.md)</code>)  Initialization properties.
  * **template** (<code>json</code>)  The CloudFormation template to include in the stack (as is). 



## Properties


Name | Type | Description 
-----|------|-------------
**template** | <code>json</code> | The included template.
",
  "@aws-cdk_core.CfnIncludeProps.md": "# struct CfnIncludeProps  <a id=\\"aws-cdk-core-cfnincludeprops\\"></a>






Name | Type | Description 
-----|------|-------------
**template** | <code>json</code> | The CloudFormation template to include in the stack (as is).
",
  "@aws-cdk_core.CfnMapping.md": "# class CfnMapping  <a id=\\"aws-cdk-core-cfnmapping\\"></a>

Represents a CloudFormation mapping.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnRefElement](./@aws-cdk_core.CfnRefElement.md)

## Initializer




\`\`\`ts
new CfnMapping(scope: Construct, id: string, props?: CfnMappingProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnMappingProps](./@aws-cdk_core.CfnMappingProps.md)</code>)  *No description*
  * **mapping** (<code>Map<string, Map<string, any>></code>)  Mapping of key to a set of corresponding set of named values. __*Default*__: No mapping.


## Methods


### findInMap(key1, key2) <a id=\\"aws-cdk-core-cfnmapping-findinmap\\"></a>



\`\`\`ts
findInMap(key1: string, key2: string): string
\`\`\`

* **key1** (<code>string</code>)  *No description*
* **key2** (<code>string</code>)  *No description*

__Returns__:
* <code>string</code>

### setValue(key1, key2, value) <a id=\\"aws-cdk-core-cfnmapping-setvalue\\"></a>

Sets a value in the map based on the two keys.

\`\`\`ts
setValue(key1: string, key2: string, value: any): void
\`\`\`

* **key1** (<code>string</code>)  *No description*
* **key2** (<code>string</code>)  *No description*
* **value** (<code>any</code>)  *No description*



",
  "@aws-cdk_core.CfnMappingProps.md": "# struct CfnMappingProps  <a id=\\"aws-cdk-core-cfnmappingprops\\"></a>






Name | Type | Description 
-----|------|-------------
**mapping**? | <code>Map<string, Map<string, any>></code> | Mapping of key to a set of corresponding set of named values.<br/>__*Default*__: No mapping.
",
  "@aws-cdk_core.CfnOutput.md": "# class CfnOutput  <a id=\\"aws-cdk-core-cfnoutput\\"></a>



__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnElement](./@aws-cdk_core.CfnElement.md)

## Initializer


Creates an CfnOutput value for this stack.

\`\`\`ts
new CfnOutput(scope: Construct, id: string, props: CfnOutputProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct.
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnOutputProps](./@aws-cdk_core.CfnOutputProps.md)</code>)  CfnOutput properties.
  * **value** (<code>string</code>)  The value of the property returned by the aws cloudformation describe-stacks command. 
  * **condition** (<code>[CfnCondition](./@aws-cdk_core.CfnCondition.md)</code>)  A condition to associate with this output value. __*Default*__: No condition is associated with the output.
  * **description** (<code>string</code>)  A String type that describes the output value. __*Default*__: No description.
  * **exportName** (<code>string</code>)  The name used to export the value of this output across stacks. __*Default*__: the output is not exported

",
  "@aws-cdk_core.CfnOutputProps.md": "# struct CfnOutputProps  <a id=\\"aws-cdk-core-cfnoutputprops\\"></a>






Name | Type | Description 
-----|------|-------------
**value** | <code>string</code> | The value of the property returned by the aws cloudformation describe-stacks command.
**condition**? | <code>[CfnCondition](./@aws-cdk_core.CfnCondition.md)</code> | A condition to associate with this output value.<br/>__*Default*__: No condition is associated with the output.
**description**? | <code>string</code> | A String type that describes the output value.<br/>__*Default*__: No description.
**exportName**? | <code>string</code> | The name used to export the value of this output across stacks.<br/>__*Default*__: the output is not exported
",
  "@aws-cdk_core.CfnParameter.md": "# class CfnParameter  <a id=\\"aws-cdk-core-cfnparameter\\"></a>

A CloudFormation parameter.

Use the optional Parameters section to customize your templates.
Parameters enable you to input custom values to your template each time you create or
update a stack.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnElement](./@aws-cdk_core.CfnElement.md)

## Initializer


Creates a parameter construct.

Note that the name (logical ID) of the parameter will derive from it's \`coname\` and location
within the stack. Therefore, it is recommended that parameters are defined at the stack level.

\`\`\`ts
new CfnParameter(scope: Construct, id: string, props?: CfnParameterProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct.
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnParameterProps](./@aws-cdk_core.CfnParameterProps.md)</code>)  The parameter properties.
  * **allowedPattern** (<code>string</code>)  A regular expression that represents the patterns to allow for String types. __*Default*__: No constraints on patterns allowed for parameter.
  * **allowedValues** (<code>Array<string></code>)  An array containing the list of values allowed for the parameter. __*Default*__: No constraints on values allowed for parameter.
  * **constraintDescription** (<code>string</code>)  A string that explains a constraint when the constraint is violated. __*Default*__: No description with customized error message when user specifies invalid values.
  * **default** (<code>any</code>)  A value of the appropriate type for the template to use if no value is specified when a stack is created. __*Default*__: No default value for parameter.
  * **description** (<code>string</code>)  A string of up to 4000 characters that describes the parameter. __*Default*__: No description for the parameter.
  * **maxLength** (<code>number</code>)  An integer value that determines the largest number of characters you want to allow for String types. __*Default*__: None.
  * **maxValue** (<code>number</code>)  A numeric value that determines the largest numeric value you want to allow for Number types. __*Default*__: None.
  * **minLength** (<code>number</code>)  An integer value that determines the smallest number of characters you want to allow for String types. __*Default*__: None.
  * **minValue** (<code>number</code>)  A numeric value that determines the smallest numeric value you want to allow for Number types. __*Default*__: None.
  * **noEcho** (<code>boolean</code>)  Whether to mask the parameter value when anyone makes a call that describes the stack. __*Default*__: Parameter values are not masked.
  * **type** (<code>string</code>)  The data type for the parameter (DataType). __*Default*__: String



## Properties


Name | Type | Description 
-----|------|-------------
**noEcho** | <code>boolean</code> | Indicates if this parameter is configured with \\"NoEcho\\" enabled.
**value** | <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code> | The parameter value as a Token.
**valueAsList** | <code>Array<string></code> | The parameter value, if it represents a string list.
**valueAsNumber** | <code>number</code> | The parameter value, if it represents a number.
**valueAsString** | <code>string</code> | The parameter value, if it represents a string.

## Methods


### resolve(_context) <a id=\\"aws-cdk-core-cfnparameter-resolve\\"></a>



\`\`\`ts
resolve(_context: IResolveContext): any
\`\`\`

* **_context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.CfnParameterProps.md": "# struct CfnParameterProps  <a id=\\"aws-cdk-core-cfnparameterprops\\"></a>






Name | Type | Description 
-----|------|-------------
**allowedPattern**? | <code>string</code> | A regular expression that represents the patterns to allow for String types.<br/>__*Default*__: No constraints on patterns allowed for parameter.
**allowedValues**? | <code>Array<string></code> | An array containing the list of values allowed for the parameter.<br/>__*Default*__: No constraints on values allowed for parameter.
**constraintDescription**? | <code>string</code> | A string that explains a constraint when the constraint is violated.<br/>__*Default*__: No description with customized error message when user specifies invalid values.
**default**? | <code>any</code> | A value of the appropriate type for the template to use if no value is specified when a stack is created.<br/>__*Default*__: No default value for parameter.
**description**? | <code>string</code> | A string of up to 4000 characters that describes the parameter.<br/>__*Default*__: No description for the parameter.
**maxLength**? | <code>number</code> | An integer value that determines the largest number of characters you want to allow for String types.<br/>__*Default*__: None.
**maxValue**? | <code>number</code> | A numeric value that determines the largest numeric value you want to allow for Number types.<br/>__*Default*__: None.
**minLength**? | <code>number</code> | An integer value that determines the smallest number of characters you want to allow for String types.<br/>__*Default*__: None.
**minValue**? | <code>number</code> | A numeric value that determines the smallest numeric value you want to allow for Number types.<br/>__*Default*__: None.
**noEcho**? | <code>boolean</code> | Whether to mask the parameter value when anyone makes a call that describes the stack.<br/>__*Default*__: Parameter values are not masked.
**type**? | <code>string</code> | The data type for the parameter (DataType).<br/>__*Default*__: String
",
  "@aws-cdk_core.CfnRefElement.md": "# class CfnRefElement  <a id=\\"aws-cdk-core-cfnrefelement\\"></a>

Base class for referenceable CloudFormation constructs which are not Resources.

These constructs are things like Conditions and Parameters, can be
referenced by taking the \`.ref\` attribute.

Resource constructs do not inherit from CfnRefElement because they have their
own, more specific types returned from the .ref attribute. Also, some
resources aren't referenceable at all (such as BucketPolicies or GatewayAttachments).

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnElement](./@aws-cdk_core.CfnElement.md)
__Implemented by__: [CfnMapping](./@aws-cdk_core.CfnMapping.md), [CfnResource](./@aws-cdk_core.CfnResource.md), [CfnRule](./@aws-cdk_core.CfnRule.md)

## Initializer


Creates an entity and binds it to a tree.

Note that the root of the tree must be a Stack object (not just any Root).

\`\`\`ts
new CfnRefElement(scope: Construct, id: string)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct.
* **id** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**ref** | <code>string</code> | Return a string that will be resolved to a CloudFormation \`{ Ref }\` for this element.
",
  "@aws-cdk_core.CfnResource.md": "# class CfnResource  <a id=\\"aws-cdk-core-cfnresource\\"></a>

Represents a CloudFormation resource.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnRefElement](./@aws-cdk_core.CfnRefElement.md)

## Initializer


Creates a resource construct.

\`\`\`ts
new CfnResource(scope: Construct, id: string, props: CfnResourceProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnResourceProps](./@aws-cdk_core.CfnResourceProps.md)</code>)  *No description*
  * **type** (<code>string</code>)  CloudFormation resource type (e.g. \`AWS::S3::Bucket\`). 
  * **properties** (<code>Map<string, any></code>)  Resource properties. __*Default*__: No resource properties.



## Properties


Name | Type | Description 
-----|------|-------------
**cfnOptions** | <code>[ICfnResourceOptions](./@aws-cdk_core.ICfnResourceOptions.md)</code> | Options for this resource, such as condition, update policy etc.
**cfnProperties** | <code>Map<string, any></code> | <span></span>
**cfnResourceType** | <code>string</code> | AWS resource type.
**updatedProperites** | <code>Map<string, any></code> | Return properties modified after initiation.

## Methods


### addDeletionOverride(path) <a id=\\"aws-cdk-core-cfnresource-adddeletionoverride\\"></a>

Syntactic sugar for \`addOverride(path, undefined)\`.

\`\`\`ts
addDeletionOverride(path: string): void
\`\`\`

* **path** (<code>string</code>)  The path of the value to delete.




### addDependsOn(target) <a id=\\"aws-cdk-core-cfnresource-adddependson\\"></a>

Indicates that this resource depends on another resource and cannot be provisioned unless the other resource has been successfully provisioned.

This can be used for resources across stacks (or nested stack) boundaries
and the dependency will automatically be transferred to the relevant scope.

\`\`\`ts
addDependsOn(target: CfnResource): void
\`\`\`

* **target** (<code>[CfnResource](./@aws-cdk_core.CfnResource.md)</code>)  *No description*




### addOverride(path, value) <a id=\\"aws-cdk-core-cfnresource-addoverride\\"></a>

Adds an override to the synthesized CloudFormation resource.

To add a
property override, either use \`addPropertyOverride\` or prefix \`path\` with
\\"Properties.\\" (i.e. \`Properties.TopicName\`).

If the override is nested, separate each nested level using a dot (.) in the path parameter.
If there is an array as part of the nesting, specify the index in the path.

For example,
\`\`\`typescript
addOverride('Properties.GlobalSecondaryIndexes.0.Projection.NonKeyAttributes', ['myattribute'])
addOverride('Properties.GlobalSecondaryIndexes.1.ProjectionType', 'INCLUDE')
\`\`\`
would add the overrides
\`\`\`json
\\"Properties\\": {
   \\"GlobalSecondaryIndexes\\": [
     {
       \\"Projection\\": {
         \\"NonKeyAttributes\\": [ \\"myattribute\\" ]
         ...
       }
       ...
     },
     {
       \\"ProjectionType\\": \\"INCLUDE\\"
       ...
     },
   ]
   ...
}
\`\`\`

\`\`\`ts
addOverride(path: string, value: any): void
\`\`\`

* **path** (<code>string</code>)  - The path of the property, you can use dot notation to override values in complex types.
* **value** (<code>any</code>)  - The value.




### addPropertyDeletionOverride(propertyPath) <a id=\\"aws-cdk-core-cfnresource-addpropertydeletionoverride\\"></a>

Adds an override that deletes the value of a property from the resource definition.

\`\`\`ts
addPropertyDeletionOverride(propertyPath: string): void
\`\`\`

* **propertyPath** (<code>string</code>)  The path to the property.




### addPropertyOverride(propertyPath, value) <a id=\\"aws-cdk-core-cfnresource-addpropertyoverride\\"></a>

Adds an override to a resource property.

Syntactic sugar for \`addOverride(\\"Properties.<...>\\", value)\`.

\`\`\`ts
addPropertyOverride(propertyPath: string, value: any): void
\`\`\`

* **propertyPath** (<code>string</code>)  The path of the property.
* **value** (<code>any</code>)  The value.




### applyRemovalPolicy(policy?, options?) <a id=\\"aws-cdk-core-cfnresource-applyremovalpolicy\\"></a>

Sets the deletion policy of the resource based on the removal policy specified.

\`\`\`ts
applyRemovalPolicy(policy?: RemovalPolicy, options?: RemovalPolicyOptions): void
\`\`\`

* **policy** (<code>[RemovalPolicy](./@aws-cdk_core.RemovalPolicy.md)</code>)  *No description*
* **options** (<code>[RemovalPolicyOptions](./@aws-cdk_core.RemovalPolicyOptions.md)</code>)  *No description*
  * **applyToUpdateReplacePolicy** (<code>boolean</code>)  Apply the same deletion policy to the resource's \\"UpdateReplacePolicy\\". __*Default*__: true
  * **default** (<code>[RemovalPolicy](./@aws-cdk_core.RemovalPolicy.md)</code>)  The default policy to apply in case the removal policy is not defined. __*Default*__: Default value is resource specific. To determine the default value for a resoure, please consult that specific resource's documentation.




### getAtt(attributeName) <a id=\\"aws-cdk-core-cfnresource-getatt\\"></a>

Returns a token for an runtime attribute of this resource.

Ideally, use generated attribute accessors (e.g. \`resource.arn\`), but this can be used for future compatibility
in case there is no generated attribute.

\`\`\`ts
getAtt(attributeName: string): Reference
\`\`\`

* **attributeName** (<code>string</code>)  The name of the attribute.

__Returns__:
* <code>[Reference](./@aws-cdk_core.Reference.md)</code>

### toString() <a id=\\"aws-cdk-core-cfnresource-tostring\\"></a>

Returns a string representation of this construct.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>

### protected renderProperties(props) <a id=\\"aws-cdk-core-cfnresource-renderproperties\\"></a>



\`\`\`ts
protected renderProperties(props: Map<string, any>): Map<string, any>
\`\`\`

* **props** (<code>Map<string, any></code>)  *No description*

__Returns__:
* <code>Map<string, any></code>

### protected validateProperties(_properties) <a id=\\"aws-cdk-core-cfnresource-validateproperties\\"></a>



\`\`\`ts
protected validateProperties(_properties: any): void
\`\`\`

* **_properties** (<code>any</code>)  *No description*




### *static* isCfnResource(construct) <a id=\\"aws-cdk-core-cfnresource-iscfnresource\\"></a>

Check whether the given construct is a CfnResource.

\`\`\`ts
static isCfnResource(construct: IConstruct): boolean
\`\`\`

* **construct** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.CfnResourceAutoScalingCreationPolicy.md": "# struct CfnResourceAutoScalingCreationPolicy  <a id=\\"aws-cdk-core-cfnresourceautoscalingcreationpolicy\\"></a>


For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed.



Name | Type | Description 
-----|------|-------------
**minSuccessfulInstancesPercent**? | <code>number</code> | Specifies the percentage of instances in an Auto Scaling replacement update that must signal success for the update to succeed.<br/>__*Optional*__
",
  "@aws-cdk_core.CfnResourceProps.md": "# struct CfnResourceProps  <a id=\\"aws-cdk-core-cfnresourceprops\\"></a>






Name | Type | Description 
-----|------|-------------
**type** | <code>string</code> | CloudFormation resource type (e.g. \`AWS::S3::Bucket\`).
**properties**? | <code>Map<string, any></code> | Resource properties.<br/>__*Default*__: No resource properties.
",
  "@aws-cdk_core.CfnResourceSignal.md": "# struct CfnResourceSignal  <a id=\\"aws-cdk-core-cfnresourcesignal\\"></a>


When AWS CloudFormation creates the associated resource, configures the number of required success signals and the length of time that AWS CloudFormation waits for those signals.



Name | Type | Description 
-----|------|-------------
**count**? | <code>number</code> | The number of success signals AWS CloudFormation must receive before it sets the resource status as CREATE_COMPLETE.<br/>__*Optional*__
**timeout**? | <code>string</code> | The length of time that AWS CloudFormation waits for the number of signals that was specified in the Count property.<br/>__*Optional*__
",
  "@aws-cdk_core.CfnRule.md": "# class CfnRule  <a id=\\"aws-cdk-core-cfnrule\\"></a>

The Rules that define template constraints in an AWS Service Catalog portfolio describe when end users can use the template and which values they can specify for parameters that are declared in the AWS CloudFormation template used to create the product they are attempting to use.

Rules
are useful for preventing end users from inadvertently specifying an incorrect value.
For example, you can add a rule to verify whether end users specified a valid subnet in a
given VPC or used m1.small instance types for test environments. AWS CloudFormation uses
rules to validate parameter values before it creates the resources for the product.

A rule can include a RuleCondition property and must include an Assertions property.
For each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.
You define a rule condition and assertions by using rule-specific intrinsic functions.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [CfnRefElement](./@aws-cdk_core.CfnRefElement.md)

## Initializer


Creates and adds a rule.

\`\`\`ts
new CfnRule(scope: Construct, id: string, props?: CfnRuleProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  The parent construct.
* **id** (<code>string</code>)  *No description*
* **props** (<code>[CfnRuleProps](./@aws-cdk_core.CfnRuleProps.md)</code>)  The rule props.
  * **assertions** (<code>Array<[CfnRuleAssertion](./@aws-cdk_core.CfnRuleAssertion.md)></code>)  Assertions which define the rule. __*Default*__: No assertions for the rule.
  * **ruleCondition** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  If the rule condition evaluates to false, the rule doesn't take effect. __*Default*__: Rule's assertions will always take effect.


## Methods


### addAssertion(condition, description) <a id=\\"aws-cdk-core-cfnrule-addassertion\\"></a>

Adds an assertion to the rule.

\`\`\`ts
addAssertion(condition: ICfnConditionExpression, description: string): void
\`\`\`

* **condition** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  The expression to evaluation.
* **description** (<code>string</code>)  The description of the assertion.



",
  "@aws-cdk_core.CfnRuleAssertion.md": "# struct CfnRuleAssertion  <a id=\\"aws-cdk-core-cfnruleassertion\\"></a>


A rule assertion.



Name | Type | Description 
-----|------|-------------
**assert** | <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code> | The assertion.
**assertDescription** | <code>string</code> | The assertion description.
",
  "@aws-cdk_core.CfnRuleProps.md": "# struct CfnRuleProps  <a id=\\"aws-cdk-core-cfnruleprops\\"></a>


A rule can include a RuleCondition property and must include an Assertions property.

For each rule, you can define only one rule condition; you can define one or more asserts within the Assertions property.
You define a rule condition and assertions by using rule-specific intrinsic functions.

You can use the following rule-specific intrinsic functions to define rule conditions and assertions:

  Fn::And
  Fn::Contains
  Fn::EachMemberEquals
  Fn::EachMemberIn
  Fn::Equals
  Fn::If
  Fn::Not
  Fn::Or
  Fn::RefAll
  Fn::ValueOf
  Fn::ValueOfAll

https://docs.aws.amazon.com/servicecatalog/latest/adminguide/reference-template_constraint_rules.html



Name | Type | Description 
-----|------|-------------
**assertions**? | <code>Array<[CfnRuleAssertion](./@aws-cdk_core.CfnRuleAssertion.md)></code> | Assertions which define the rule.<br/>__*Default*__: No assertions for the rule.
**ruleCondition**? | <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code> | If the rule condition evaluates to false, the rule doesn't take effect.<br/>__*Default*__: Rule's assertions will always take effect.
",
  "@aws-cdk_core.CfnTag.md": "# struct CfnTag  <a id=\\"aws-cdk-core-cfntag\\"></a>






Name | Type | Description 
-----|------|-------------
**key** | <code>string</code> | <span></span>
**value** | <code>string</code> | <span></span>
",
  "@aws-cdk_core.CfnUpdatePolicy.md": "# struct CfnUpdatePolicy  <a id=\\"aws-cdk-core-cfnupdatepolicy\\"></a>


Use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource.

AWS CloudFormation invokes one of three update policies depending on the type of change you make or whether a
scheduled action is associated with the Auto Scaling group.



Name | Type | Description 
-----|------|-------------
**autoScalingReplacingUpdate**? | <code>[CfnAutoScalingReplacingUpdate](./@aws-cdk_core.CfnAutoScalingReplacingUpdate.md)</code> | Specifies whether an Auto Scaling group and the instances it contains are replaced during an update.<br/>__*Optional*__
**autoScalingRollingUpdate**? | <code>[CfnAutoScalingRollingUpdate](./@aws-cdk_core.CfnAutoScalingRollingUpdate.md)</code> | To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group, use the AutoScalingRollingUpdate policy.<br/>__*Optional*__
**autoScalingScheduledAction**? | <code>[CfnAutoScalingScheduledAction](./@aws-cdk_core.CfnAutoScalingScheduledAction.md)</code> | To specify how AWS CloudFormation handles updates for the MinSize, MaxSize, and DesiredCapacity properties when the AWS::AutoScaling::AutoScalingGroup resource has an associated scheduled action, use the AutoScalingScheduledAction policy.<br/>__*Optional*__
**codeDeployLambdaAliasUpdate**? | <code>[CfnCodeDeployLambdaAliasUpdate](./@aws-cdk_core.CfnCodeDeployLambdaAliasUpdate.md)</code> | To perform an AWS CodeDeploy deployment when the version changes on an AWS::Lambda::Alias resource, use the CodeDeployLambdaAliasUpdate update policy.<br/>__*Optional*__
**enableVersionUpgrade**? | <code>boolean</code> | To upgrade an Amazon ES domain to a new version of Elasticsearch rather than replacing the entire AWS::Elasticsearch::Domain resource, use the EnableVersionUpgrade update policy.<br/>__*Optional*__
**useOnlineResharding**? | <code>boolean</code> | To modify a replication group's shards by adding or removing shards, rather than replacing the entire AWS::ElastiCache::ReplicationGroup resource, use the UseOnlineResharding update policy.<br/>__*Optional*__
",
  "@aws-cdk_core.ConcreteDependable.md": "# class ConcreteDependable 🔹 <a id=\\"aws-cdk-core-concretedependable\\"></a>

A set of constructs to be used as a dependable.

This class can be used when a set of constructs which are disjoint in the
construct tree needs to be combined to be used as a single dependable.

__Implements__: [IDependable](./@aws-cdk_core.IDependable.md)

## Initializer




\`\`\`ts
new ConcreteDependable()
\`\`\`



## Methods


### add(construct)🔹 <a id=\\"aws-cdk-core-concretedependable-add\\"></a>

Add a construct to the dependency roots.

\`\`\`ts
add(construct: IConstruct): void
\`\`\`

* **construct** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*



",
  "@aws-cdk_core.Construct.md": "# class Construct  <a id=\\"aws-cdk-core-construct\\"></a>

Represents the building block of the construct graph.

All constructs besides the root construct must be created within the scope of
another construct.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md)
__Extends__: [Construct](./constructs.Construct.md)

## Initializer




\`\`\`ts
new Construct(scope: Construct, id: string)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**node** | <code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code> | The construct tree node associated with this construct.

## Methods


### protected onPrepare() <a id=\\"aws-cdk-core-construct-onprepare\\"></a>

Perform final modifications before synthesis.

This method can be implemented by derived constructs in order to perform
final changes before synthesis. prepare() will be called after child
constructs have been prepared.

This is an advanced framework feature. Only use this if you
understand the implications.

\`\`\`ts
protected onPrepare(): void
\`\`\`





### protected onSynthesize(session) <a id=\\"aws-cdk-core-construct-onsynthesize\\"></a>

Allows this construct to emit artifacts into the cloud assembly during synthesis.

This method is usually implemented by framework-level constructs such as \`Stack\` and \`Asset\`
as they participate in synthesizing the cloud assembly.

\`\`\`ts
protected onSynthesize(session: ISynthesisSession): void
\`\`\`

* **session** (<code>[ISynthesisSession](./constructs.ISynthesisSession.md)</code>)  The synthesis session.




### protected onValidate() <a id=\\"aws-cdk-core-construct-onvalidate\\"></a>

Validate the current construct.

This method can be implemented by derived constructs in order to perform
validation logic. It is called on all constructs before synthesis.

\`\`\`ts
protected onValidate(): Array<string>
\`\`\`


__Returns__:
* <code>Array<string></code>

### protected prepare() <a id=\\"aws-cdk-core-construct-prepare\\"></a>

Perform final modifications before synthesis.

This method can be implemented by derived constructs in order to perform
final changes before synthesis. prepare() will be called after child
constructs have been prepared.

This is an advanced framework feature. Only use this if you
understand the implications.

\`\`\`ts
protected prepare(): void
\`\`\`





### protected synthesize(session) <a id=\\"aws-cdk-core-construct-synthesize\\"></a>

Allows this construct to emit artifacts into the cloud assembly during synthesis.

This method is usually implemented by framework-level constructs such as \`Stack\` and \`Asset\`
as they participate in synthesizing the cloud assembly.

\`\`\`ts
protected synthesize(session: ISynthesisSession): void
\`\`\`

* **session** (<code>[ISynthesisSession](./@aws-cdk_core.ISynthesisSession.md)</code>)  The synthesis session.




### protected validate() <a id=\\"aws-cdk-core-construct-validate\\"></a>

Validate the current construct.

This method can be implemented by derived constructs in order to perform
validation logic. It is called on all constructs before synthesis.

\`\`\`ts
protected validate(): Array<string>
\`\`\`


__Returns__:
* <code>Array<string></code>

### *static* isConstruct(x) <a id=\\"aws-cdk-core-construct-isconstruct\\"></a>

Return whether the given object is a Construct.

\`\`\`ts
static isConstruct(x: any): boolean
\`\`\`

* **x** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.ConstructNode.md": "# class ConstructNode  <a id=\\"aws-cdk-core-constructnode\\"></a>

Represents the construct node in the scope tree.


## Initializer




\`\`\`ts
new ConstructNode(host: Construct, scope: IConstruct, id: string)
\`\`\`

* **host** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **scope** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**children** | <code>Array<[IConstruct](./@aws-cdk_core.IConstruct.md)></code> | All direct children of this construct.
**dependencies** | <code>Array<[Dependency](./@aws-cdk_core.Dependency.md)></code> | Return all dependencies registered on this node or any of its children.
**id** | <code>string</code> | The id of this construct within the current scope.
**locked** | <code>boolean</code> | Returns true if this construct or the scopes in which it is defined are locked.
**metadata** | <code>Array<[MetadataEntry](./@aws-cdk_cx-api.MetadataEntry.md)></code> | An immutable array of metadata objects associated with this construct.
**path** | <code>string</code> | The full, absolute path of this construct in the tree.
**root** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | <span></span>
**scopes** | <code>Array<[IConstruct](./@aws-cdk_core.IConstruct.md)></code> | All parent scopes of this construct.
**uniqueId** | <code>string</code> | A tree-global unique alphanumeric identifier for this construct.
**defaultChild**? | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | Returns the child construct that has the id \`Default\` or \`Resource\\"\`.<br/>__*Optional*__
**scope**? | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | Returns the scope in which this construct is defined.<br/>__*Optional*__
*static* **PATH_SEP** | <code>string</code> | Separator used to delimit construct path components.

## Methods


### addDependency(...dependencies) <a id=\\"aws-cdk-core-constructnode-adddependency\\"></a>

Add an ordering dependency on another Construct.

All constructs in the dependency's scope will be deployed before any
construct in this construct's scope.

\`\`\`ts
addDependency(...dependencies: IDependable[]): void
\`\`\`

* **dependencies** (<code>[IDependable](./@aws-cdk_core.IDependable.md)</code>)  *No description*




### addError(message) <a id=\\"aws-cdk-core-constructnode-adderror\\"></a>

Adds an { \\"error\\": <message> } metadata entry to this construct.

The toolkit will fail synthesis when errors are reported.

\`\`\`ts
addError(message: string): void
\`\`\`

* **message** (<code>string</code>)  The error message.




### addInfo(message) <a id=\\"aws-cdk-core-constructnode-addinfo\\"></a>

Adds a { \\"info\\": <message> } metadata entry to this construct.

The toolkit will display the info message when apps are synthesized.

\`\`\`ts
addInfo(message: string): void
\`\`\`

* **message** (<code>string</code>)  The info message.




### addMetadata(type, data, fromFunction?) <a id=\\"aws-cdk-core-constructnode-addmetadata\\"></a>

Adds a metadata entry to this construct.

Entries are arbitrary values and will also include a stack trace to allow tracing back to
the code location for when the entry was added. It can be used, for example, to include source
mapping in CloudFormation templates to improve diagnostics.

\`\`\`ts
addMetadata(type: string, data: any, fromFunction?: any): void
\`\`\`

* **type** (<code>string</code>)  a string denoting the type of metadata.
* **data** (<code>any</code>)  the value of the metadata (can be a Token).
* **fromFunction** (<code>any</code>)  a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata).




### addWarning(message) <a id=\\"aws-cdk-core-constructnode-addwarning\\"></a>

Adds a { \\"warning\\": <message> } metadata entry to this construct.

The toolkit will display the warning when an app is synthesized, or fail
if run in --strict mode.

\`\`\`ts
addWarning(message: string): void
\`\`\`

* **message** (<code>string</code>)  The warning message.




### applyAspect(aspect) <a id=\\"aws-cdk-core-constructnode-applyaspect\\"></a>

Applies the aspect to this Constructs node.

\`\`\`ts
applyAspect(aspect: IAspect): void
\`\`\`

* **aspect** (<code>[IAspect](./@aws-cdk_core.IAspect.md)</code>)  *No description*




### findAll(order?) <a id=\\"aws-cdk-core-constructnode-findall\\"></a>

Return this construct and all of its children in the given order.

\`\`\`ts
findAll(order?: ConstructOrder): Array<IConstruct>
\`\`\`

* **order** (<code>[ConstructOrder](./@aws-cdk_core.ConstructOrder.md)</code>)  *No description*

__Returns__:
* <code>Array<[IConstruct](./@aws-cdk_core.IConstruct.md)></code>

### findChild(id) <a id=\\"aws-cdk-core-constructnode-findchild\\"></a>

Return a direct child by id.

Throws an error if the child is not found.

\`\`\`ts
findChild(id: string): IConstruct
\`\`\`

* **id** (<code>string</code>)  Identifier of direct child.

__Returns__:
* <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>

### setContext(key, value) <a id=\\"aws-cdk-core-constructnode-setcontext\\"></a>

This can be used to set contextual values.

Context must be set before any children are added, since children may consult context info during construction.
If the key already exists, it will be overridden.

\`\`\`ts
setContext(key: string, value: any): void
\`\`\`

* **key** (<code>string</code>)  The context key.
* **value** (<code>any</code>)  The context value.




### tryFindChild(id) <a id=\\"aws-cdk-core-constructnode-tryfindchild\\"></a>

Return a direct child by id, or undefined.

\`\`\`ts
tryFindChild(id: string): IConstruct
\`\`\`

* **id** (<code>string</code>)  Identifier of direct child.

__Returns__:
* <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>

### tryGetContext(key) <a id=\\"aws-cdk-core-constructnode-trygetcontext\\"></a>

Retrieves a value from tree context.

Context is usually initialized at the root, but can be overridden at any point in the tree.

\`\`\`ts
tryGetContext(key: string): any
\`\`\`

* **key** (<code>string</code>)  The context key.

__Returns__:
* <code>any</code>

### tryRemoveChild(childName)🔹 <a id=\\"aws-cdk-core-constructnode-tryremovechild\\"></a>

Remove the child with the given name, if present.

\`\`\`ts
tryRemoveChild(childName: string): boolean
\`\`\`

* **childName** (<code>string</code>)  *No description*

__Returns__:
* <code>boolean</code>

### *static* prepare(node) <a id=\\"aws-cdk-core-constructnode-prepare\\"></a>

Invokes \\"prepare\\" on all constructs (depth-first, post-order) in the tree under \`node\`.

\`\`\`ts
static prepare(node: ConstructNode): void
\`\`\`

* **node** (<code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code>)  The root node.




### *static* synth(root, options?) <a id=\\"aws-cdk-core-constructnode-synth\\"></a>

Synthesizes a CloudAssembly from a construct tree.

\`\`\`ts
static synth(root: ConstructNode, options?: SynthesisOptions): CloudAssembly
\`\`\`

* **root** (<code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code>)  The root of the construct tree.
* **options** (<code>[SynthesisOptions](./@aws-cdk_core.SynthesisOptions.md)</code>)  Synthesis options.
  * **runtimeInfo** (<code>[RuntimeInfo](./@aws-cdk_cx-api.RuntimeInfo.md)</code>)  Include the specified runtime information (module versions) in manifest. __*Default*__: if this option is not specified, runtime info will not be included
  * **outdir** (<code>string</code>)  The output directory into which to synthesize the cloud assembly. __*Default*__: creates a temporary directory
  * **skipValidation** (<code>boolean</code>)  Whether synthesis should skip the validation phase. __*Default*__: false

__Returns__:
* <code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>

### *static* validate(node) <a id=\\"aws-cdk-core-constructnode-validate\\"></a>

Invokes \\"validate\\" on all constructs in the tree (depth-first, pre-order) and returns the list of all errors.

An empty list indicates that there are no errors.

\`\`\`ts
static validate(node: ConstructNode): Array<ValidationError>
\`\`\`

* **node** (<code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code>)  The root node.

__Returns__:
* <code>Array<[ValidationError](./@aws-cdk_core.ValidationError.md)></code>
",
  "@aws-cdk_core.ConstructOrder.md": "# enum ConstructOrder  <a id=\\"aws-cdk-core-constructorder\\"></a>

In what order to return constructs.

Name | Description
-----|-----
**PREORDER** |Depth-first, pre-order.
**POSTORDER** |Depth-first, post-order (leaf nodes first).",
  "@aws-cdk_core.ContextProvider.md": "# class ContextProvider 🔹 <a id=\\"aws-cdk-core-contextprovider\\"></a>

Base class for the model side of context providers.

Instances of this class communicate with context provider plugins in the 'cdk
toolkit' via context variables (input), outputting specialized queries for
more context variables (output).

ContextProvider needs access to a Construct to hook into the context mechanism.


## Methods


### *static* getKey(scope, options)🔹 <a id=\\"aws-cdk-core-contextprovider-getkey\\"></a>



\`\`\`ts
static getKey(scope: Construct, options: GetContextKeyOptions): GetContextKeyResult
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **options** (<code>[GetContextKeyOptions](./@aws-cdk_core.GetContextKeyOptions.md)</code>)  *No description*
  * **provider** (<code>string</code>)  The context provider to query. 
  * **props** (<code>Map<string, any></code>)  Provider-specific properties. __*Optional*__

__Returns__:
* <code>[GetContextKeyResult](./@aws-cdk_core.GetContextKeyResult.md)</code>

### *static* getValue(scope, options)🔹 <a id=\\"aws-cdk-core-contextprovider-getvalue\\"></a>



\`\`\`ts
static getValue(scope: Construct, options: GetContextValueOptions): GetContextValueResult
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **options** (<code>[GetContextValueOptions](./@aws-cdk_core.GetContextValueOptions.md)</code>)  *No description*
  * **provider** (<code>string</code>)  The context provider to query. 
  * **props** (<code>Map<string, any></code>)  Provider-specific properties. __*Optional*__
  * **dummyValue** (<code>any</code>)  The value to return if the context value was not found and a missing context is reported. 

__Returns__:
* <code>[GetContextValueResult](./@aws-cdk_core.GetContextValueResult.md)</code>
",
  "@aws-cdk_core.DefaultTokenResolver.md": "# class DefaultTokenResolver 🔹 <a id=\\"aws-cdk-core-defaulttokenresolver\\"></a>

Default resolver implementation.

__Implements__: [ITokenResolver](./@aws-cdk_core.ITokenResolver.md)

## Initializer




\`\`\`ts
new DefaultTokenResolver(concat: IFragmentConcatenator)
\`\`\`

* **concat** (<code>[IFragmentConcatenator](./@aws-cdk_core.IFragmentConcatenator.md)</code>)  *No description*


## Methods


### resolveList(xs, context)🔹 <a id=\\"aws-cdk-core-defaulttokenresolver-resolvelist\\"></a>

Resolve a tokenized list.

\`\`\`ts
resolveList(xs: Array<string>, context: IResolveContext): any
\`\`\`

* **xs** (<code>Array<string></code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### resolveString(fragments, context)🔹 <a id=\\"aws-cdk-core-defaulttokenresolver-resolvestring\\"></a>

Resolve string fragments to Tokens.

\`\`\`ts
resolveString(fragments: TokenizedStringFragments, context: IResolveContext): any
\`\`\`

* **fragments** (<code>[TokenizedStringFragments](./@aws-cdk_core.TokenizedStringFragments.md)</code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### resolveToken(t, context, postProcessor)🔹 <a id=\\"aws-cdk-core-defaulttokenresolver-resolvetoken\\"></a>

Default Token resolution.

Resolve the Token, recurse into whatever it returns,
then finally post-process it.

\`\`\`ts
resolveToken(t: IResolvable, context: IResolveContext, postProcessor: IPostProcessor): any
\`\`\`

* **t** (<code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*
* **postProcessor** (<code>[IPostProcessor](./@aws-cdk_core.IPostProcessor.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.DependableTrait.md": "# class DependableTrait 🔹 <a id=\\"aws-cdk-core-dependabletrait\\"></a>

Trait for IDependable.

Traits are interfaces that are privately implemented by objects. Instead of
showing up in the public interface of a class, they need to be queried
explicitly. This is used to implement certain framework features that are
not intended to be used by Construct consumers, and so should be hidden
from accidental use.


## Initializer




\`\`\`ts
new DependableTrait()
\`\`\`




## Properties


Name | Type | Description 
-----|------|-------------
**dependencyRoots**🔹 | <code>Array<[IConstruct](./@aws-cdk_core.IConstruct.md)></code> | The set of constructs that form the root of this dependable.

## Methods


### *static* get(instance)🔹 <a id=\\"aws-cdk-core-dependabletrait-get\\"></a>

Return the matching DependableTrait for the given class instance.

\`\`\`ts
static get(instance: IDependable): DependableTrait
\`\`\`

* **instance** (<code>[IDependable](./@aws-cdk_core.IDependable.md)</code>)  *No description*

__Returns__:
* <code>[DependableTrait](./@aws-cdk_core.DependableTrait.md)</code>

### *static* implement(instance, trait)🔹 <a id=\\"aws-cdk-core-dependabletrait-implement\\"></a>

Register \`instance\` to have the given DependableTrait.

Should be called in the class constructor.

\`\`\`ts
static implement(instance: IDependable, trait: DependableTrait): void
\`\`\`

* **instance** (<code>[IDependable](./@aws-cdk_core.IDependable.md)</code>)  *No description*
* **trait** (<code>[DependableTrait](./@aws-cdk_core.DependableTrait.md)</code>)  *No description*



",
  "@aws-cdk_core.Dependency.md": "# struct Dependency  <a id=\\"aws-cdk-core-dependency\\"></a>


A single dependency.



Name | Type | Description 
-----|------|-------------
**source** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | Source the dependency.
**target** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | Target of the dependency.
",
  "@aws-cdk_core.DockerImageAssetLocation.md": "# struct DockerImageAssetLocation  <a id=\\"aws-cdk-core-dockerimageassetlocation\\"></a>

__Obtainable from__: [Stack](./@aws-cdk_core.Stack.md).[addDockerImageAsset](./@aws-cdk_core.Stack.md#aws-cdk-core-stack-adddockerimageasset)()

The location of the published docker image.

This is where the image can be
consumed at runtime.



Name | Type | Description 
-----|------|-------------
**imageUri** | <code>string</code> | The URI of the image in Amazon ECR.
**repositoryName** | <code>string</code> | The name of the ECR repository.
",
  "@aws-cdk_core.DockerImageAssetSource.md": "# struct DockerImageAssetSource  <a id=\\"aws-cdk-core-dockerimageassetsource\\"></a>






Name | Type | Description 
-----|------|-------------
**directoryName** | <code>string</code> | The directory where the Dockerfile is stored, must be relative to the cloud assembly root.
**sourceHash** | <code>string</code> | The hash of the contents of the docker build context.
**dockerBuildArgs**? | <code>Map<string, string></code> | Build args to pass to the \`docker build\` command.<br/>__*Default*__: no build args are passed
**dockerBuildTarget**? | <code>string</code> | Docker target to build to.<br/>__*Default*__: no target
**dockerFile**? | <code>string</code> | Path to the Dockerfile (relative to the directory).<br/>__*Default*__: no file
**repositoryName**?⚠️ | <code>string</code> | ECR repository name.<br/>__*Default*__: automatically derived from the asset's ID.
",
  "@aws-cdk_core.Duration.md": "# class Duration  <a id=\\"aws-cdk-core-duration\\"></a>

Represents a length of time.

The amount can be specified either as a literal value (e.g: \`10\`) which
cannot be negative, or as an unresolved number token.

When the amount is passed as a token, unit conversion is not possible.


## Methods


### toDays(opts?) <a id=\\"aws-cdk-core-duration-todays\\"></a>

Return the total number of days in this Duration.

\`\`\`ts
toDays(opts?: TimeConversionOptions): number
\`\`\`

* **opts** (<code>[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)</code>)  *No description*
  * **integral** (<code>boolean</code>)  If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer. __*Default*__: true

__Returns__:
* <code>number</code>

### toHours(opts?) <a id=\\"aws-cdk-core-duration-tohours\\"></a>

Return the total number of hours in this Duration.

\`\`\`ts
toHours(opts?: TimeConversionOptions): number
\`\`\`

* **opts** (<code>[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)</code>)  *No description*
  * **integral** (<code>boolean</code>)  If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer. __*Default*__: true

__Returns__:
* <code>number</code>

### toHumanString() <a id=\\"aws-cdk-core-duration-tohumanstring\\"></a>

Turn this duration into a human-readable string.

\`\`\`ts
toHumanString(): string
\`\`\`


__Returns__:
* <code>string</code>

### toISOString()⚠️ <a id=\\"aws-cdk-core-duration-toisostring\\"></a>

Return an ISO 8601 representation of this period.

\`\`\`ts
toISOString(): string
\`\`\`


__Returns__:
* <code>string</code>

### toIsoString() <a id=\\"aws-cdk-core-duration-toisostring\\"></a>

Return an ISO 8601 representation of this period.

\`\`\`ts
toIsoString(): string
\`\`\`


__Returns__:
* <code>string</code>

### toMilliseconds(opts?) <a id=\\"aws-cdk-core-duration-tomilliseconds\\"></a>

Return the total number of milliseconds in this Duration.

\`\`\`ts
toMilliseconds(opts?: TimeConversionOptions): number
\`\`\`

* **opts** (<code>[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)</code>)  *No description*
  * **integral** (<code>boolean</code>)  If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer. __*Default*__: true

__Returns__:
* <code>number</code>

### toMinutes(opts?) <a id=\\"aws-cdk-core-duration-tominutes\\"></a>

Return the total number of minutes in this Duration.

\`\`\`ts
toMinutes(opts?: TimeConversionOptions): number
\`\`\`

* **opts** (<code>[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)</code>)  *No description*
  * **integral** (<code>boolean</code>)  If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer. __*Default*__: true

__Returns__:
* <code>number</code>

### toSeconds(opts?) <a id=\\"aws-cdk-core-duration-toseconds\\"></a>

Return the total number of seconds in this Duration.

\`\`\`ts
toSeconds(opts?: TimeConversionOptions): number
\`\`\`

* **opts** (<code>[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)</code>)  *No description*
  * **integral** (<code>boolean</code>)  If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer. __*Default*__: true

__Returns__:
* <code>number</code>

### toString() <a id=\\"aws-cdk-core-duration-tostring\\"></a>

Returns a string representation of this \`Duration\` that is also a Token that cannot be successfully resolved.

This
protects users against inadvertently stringifying a \`Duration\` object, when they should have called one of the
\`to*\` methods instead.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>

### *static* days(amount) <a id=\\"aws-cdk-core-duration-days\\"></a>

Create a Duration representing an amount of days.

\`\`\`ts
static days(amount: number): Duration
\`\`\`

* **amount** (<code>number</code>)  the amount of Days the \`Duration\` will represent.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>

### *static* hours(amount) <a id=\\"aws-cdk-core-duration-hours\\"></a>

Create a Duration representing an amount of hours.

\`\`\`ts
static hours(amount: number): Duration
\`\`\`

* **amount** (<code>number</code>)  the amount of Hours the \`Duration\` will represent.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>

### *static* millis(amount) <a id=\\"aws-cdk-core-duration-millis\\"></a>

Create a Duration representing an amount of milliseconds.

\`\`\`ts
static millis(amount: number): Duration
\`\`\`

* **amount** (<code>number</code>)  the amount of Milliseconds the \`Duration\` will represent.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>

### *static* minutes(amount) <a id=\\"aws-cdk-core-duration-minutes\\"></a>

Create a Duration representing an amount of minutes.

\`\`\`ts
static minutes(amount: number): Duration
\`\`\`

* **amount** (<code>number</code>)  the amount of Minutes the \`Duration\` will represent.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>

### *static* parse(duration) <a id=\\"aws-cdk-core-duration-parse\\"></a>

Parse a period formatted according to the ISO 8601 standard.

\`\`\`ts
static parse(duration: string): Duration
\`\`\`

* **duration** (<code>string</code>)  an ISO-formtted duration to be parsed.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>

### *static* seconds(amount) <a id=\\"aws-cdk-core-duration-seconds\\"></a>

Create a Duration representing an amount of seconds.

\`\`\`ts
static seconds(amount: number): Duration
\`\`\`

* **amount** (<code>number</code>)  the amount of Seconds the \`Duration\` will represent.

__Returns__:
* <code>[Duration](./@aws-cdk_core.Duration.md)</code>
",
  "@aws-cdk_core.EncodingOptions.md": "# struct EncodingOptions  <a id=\\"aws-cdk-core-encodingoptions\\"></a>


Properties to string encodings.



Name | Type | Description 
-----|------|-------------
**displayHint**? | <code>string</code> | A hint for the Token's purpose when stringifying it.<br/>__*Optional*__
",
  "@aws-cdk_core.Environment.md": "# struct Environment  <a id=\\"aws-cdk-core-environment\\"></a>


The deployment environment for a stack.



Name | Type | Description 
-----|------|-------------
**account**? | <code>string</code> | The AWS account ID for this environment.<br/>__*Default*__: Aws.accountId which means that the stack will be account-agnostic.
**region**? | <code>string</code> | The AWS region for this environment.<br/>__*Default*__: Aws.region which means that the stack will be region-agnostic.
",
  "@aws-cdk_core.FileAssetLocation.md": "# struct FileAssetLocation  <a id=\\"aws-cdk-core-fileassetlocation\\"></a>

__Obtainable from__: [Stack](./@aws-cdk_core.Stack.md).[addFileAsset](./@aws-cdk_core.Stack.md#aws-cdk-core-stack-addfileasset)()

The location of the published file asset.

This is where the asset
can be consumed at runtime.



Name | Type | Description 
-----|------|-------------
**bucketName** | <code>string</code> | The name of the Amazon S3 bucket.
**objectKey** | <code>string</code> | The Amazon S3 object key.
**s3Url** | <code>string</code> | The HTTP URL of this asset on Amazon S3.
",
  "@aws-cdk_core.FileAssetPackaging.md": "# enum FileAssetPackaging  <a id=\\"aws-cdk-core-fileassetpackaging\\"></a>

Packaging modes for file assets.

Name | Description
-----|-----
**ZIP_DIRECTORY** |The asset source path points to a directory, which should be archived using zip and and then uploaded to Amazon S3.
**FILE** |The asset source path points to a single file, which should be uploaded to Amazon S3.",
  "@aws-cdk_core.FileAssetSource.md": "# struct FileAssetSource  <a id=\\"aws-cdk-core-fileassetsource\\"></a>


Represents the source for a file asset.



Name | Type | Description 
-----|------|-------------
**fileName** | <code>string</code> | The path, relative to the root of the cloud assembly, in which this asset source resides.
**packaging** | <code>[FileAssetPackaging](./@aws-cdk_core.FileAssetPackaging.md)</code> | Which type of packaging to perform.
**sourceHash** | <code>string</code> | A hash on the content source.
",
  "@aws-cdk_core.Fn.md": "# class Fn  <a id=\\"aws-cdk-core-fn\\"></a>

CloudFormation intrinsic functions.

http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html


## Methods


### *static* base64(data) <a id=\\"aws-cdk-core-fn-base64\\"></a>

The intrinsic function \`\`Fn::Base64\`\` returns the Base64 representation of the input string.

This function is typically used to pass encoded data to
Amazon EC2 instances by way of the UserData property.

\`\`\`ts
static base64(data: string): string
\`\`\`

* **data** (<code>string</code>)  The string value you want to convert to Base64.

__Returns__:
* <code>string</code>

### *static* cidr(ipBlock, count, sizeMask?) <a id=\\"aws-cdk-core-fn-cidr\\"></a>

The intrinsic function \`\`Fn::Cidr\`\` returns the specified Cidr address block.

\`\`\`ts
static cidr(ipBlock: string, count: number, sizeMask?: string): Array<string>
\`\`\`

* **ipBlock** (<code>string</code>)  The user-specified default Cidr address block.
* **count** (<code>number</code>)  The number of subnets' Cidr block wanted.
* **sizeMask** (<code>string</code>)  The digit covered in the subnet.

__Returns__:
* <code>Array<string></code>

### *static* conditionAnd(...conditions) <a id=\\"aws-cdk-core-fn-conditionand\\"></a>

Returns true if all the specified conditions evaluate to true, or returns false if any one of the conditions evaluates to false.

\`\`Fn::And\`\` acts as
an AND operator. The minimum number of conditions that you can include is
2, and the maximum is 10.

\`\`\`ts
static conditionAnd(...conditions: ICfnConditionExpression[]): ICfnConditionExpression
\`\`\`

* **conditions** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  conditions to AND.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionContains(listOfStrings, value) <a id=\\"aws-cdk-core-fn-conditioncontains\\"></a>

Returns true if a specified string matches at least one value in a list of strings.

\`\`\`ts
static conditionContains(listOfStrings: Array<string>, value: string): ICfnConditionExpression
\`\`\`

* **listOfStrings** (<code>Array<string></code>)  A list of strings, such as \\"A\\", \\"B\\", \\"C\\".
* **value** (<code>string</code>)  A string, such as \\"A\\", that you want to compare against a list of strings.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionEachMemberEquals(listOfStrings, value) <a id=\\"aws-cdk-core-fn-conditioneachmemberequals\\"></a>

Returns true if a specified string matches all values in a list.

\`\`\`ts
static conditionEachMemberEquals(listOfStrings: Array<string>, value: string): ICfnConditionExpression
\`\`\`

* **listOfStrings** (<code>Array<string></code>)  A list of strings, such as \\"A\\", \\"B\\", \\"C\\".
* **value** (<code>string</code>)  A string, such as \\"A\\", that you want to compare against a list of strings.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionEachMemberIn(stringsToCheck, stringsToMatch) <a id=\\"aws-cdk-core-fn-conditioneachmemberin\\"></a>

Returns true if each member in a list of strings matches at least one value in a second list of strings.

\`\`\`ts
static conditionEachMemberIn(stringsToCheck: Array<string>, stringsToMatch: Array<string>): ICfnConditionExpression
\`\`\`

* **stringsToCheck** (<code>Array<string></code>)  A list of strings, such as \\"A\\", \\"B\\", \\"C\\".
* **stringsToMatch** (<code>Array<string></code>)  A list of strings, such as \\"A\\", \\"B\\", \\"C\\".

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionEquals(lhs, rhs) <a id=\\"aws-cdk-core-fn-conditionequals\\"></a>

Compares if two values are equal.

Returns true if the two values are equal
or false if they aren't.

\`\`\`ts
static conditionEquals(lhs: any, rhs: any): ICfnConditionExpression
\`\`\`

* **lhs** (<code>any</code>)  A value of any type that you want to compare.
* **rhs** (<code>any</code>)  A value of any type that you want to compare.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionIf(conditionId, valueIfTrue, valueIfFalse) <a id=\\"aws-cdk-core-fn-conditionif\\"></a>

Returns one value if the specified condition evaluates to true and another value if the specified condition evaluates to false.

Currently, AWS
CloudFormation supports the \`\`Fn::If\`\` intrinsic function in the metadata
attribute, update policy attribute, and property values in the Resources
section and Outputs sections of a template. You can use the AWS::NoValue
pseudo parameter as a return value to remove the corresponding property.

\`\`\`ts
static conditionIf(conditionId: string, valueIfTrue: any, valueIfFalse: any): ICfnConditionExpression
\`\`\`

* **conditionId** (<code>string</code>)  A reference to a condition in the Conditions section.
* **valueIfTrue** (<code>any</code>)  A value to be returned if the specified condition evaluates to true.
* **valueIfFalse** (<code>any</code>)  A value to be returned if the specified condition evaluates to false.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionNot(condition) <a id=\\"aws-cdk-core-fn-conditionnot\\"></a>

Returns true for a condition that evaluates to false or returns false for a condition that evaluates to true.

\`\`Fn::Not\`\` acts as a NOT operator.

\`\`\`ts
static conditionNot(condition: ICfnConditionExpression): ICfnConditionExpression
\`\`\`

* **condition** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  A condition such as \`\`Fn::Equals\`\` that evaluates to true or false.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* conditionOr(...conditions) <a id=\\"aws-cdk-core-fn-conditionor\\"></a>

Returns true if any one of the specified conditions evaluate to true, or returns false if all of the conditions evaluates to false.

\`\`Fn::Or\`\` acts
as an OR operator. The minimum number of conditions that you can include is
2, and the maximum is 10.

\`\`\`ts
static conditionOr(...conditions: ICfnConditionExpression[]): ICfnConditionExpression
\`\`\`

* **conditions** (<code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>)  conditions that evaluates to true or false.

__Returns__:
* <code>[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)</code>

### *static* findInMap(mapName, topLevelKey, secondLevelKey) <a id=\\"aws-cdk-core-fn-findinmap\\"></a>

The intrinsic function \`\`Fn::FindInMap\`\` returns the value corresponding to keys in a two-level map that is declared in the Mappings section.

\`\`\`ts
static findInMap(mapName: string, topLevelKey: string, secondLevelKey: string): string
\`\`\`

* **mapName** (<code>string</code>)  *No description*
* **topLevelKey** (<code>string</code>)  *No description*
* **secondLevelKey** (<code>string</code>)  *No description*

__Returns__:
* <code>string</code>

### *static* getAtt(logicalNameOfResource, attributeName) <a id=\\"aws-cdk-core-fn-getatt\\"></a>

The \`\`Fn::GetAtt\`\` intrinsic function returns the value of an attribute from a resource in the template.

\`\`\`ts
static getAtt(logicalNameOfResource: string, attributeName: string): IResolvable
\`\`\`

* **logicalNameOfResource** (<code>string</code>)  The logical name (also called logical ID) of the resource that contains the attribute that you want.
* **attributeName** (<code>string</code>)  The name of the resource-specific attribute whose value you want.

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### *static* getAzs(region?) <a id=\\"aws-cdk-core-fn-getazs\\"></a>

The intrinsic function \`\`Fn::GetAZs\`\` returns an array that lists Availability Zones for a specified region.

Because customers have access to
different Availability Zones, the intrinsic function \`\`Fn::GetAZs\`\` enables
template authors to write templates that adapt to the calling user's
access. That way you don't have to hard-code a full list of Availability
Zones for a specified region.

\`\`\`ts
static getAzs(region?: string): Array<string>
\`\`\`

* **region** (<code>string</code>)  The name of the region for which you want to get the Availability Zones.

__Returns__:
* <code>Array<string></code>

### *static* importValue(sharedValueToImport) <a id=\\"aws-cdk-core-fn-importvalue\\"></a>

The intrinsic function \`\`Fn::ImportValue\`\` returns the value of an output exported by another stack.

You typically use this function to create
cross-stack references. In the following example template snippets, Stack A
exports VPC security group values and Stack B imports them.

\`\`\`ts
static importValue(sharedValueToImport: string): string
\`\`\`

* **sharedValueToImport** (<code>string</code>)  The stack output value that you want to import.

__Returns__:
* <code>string</code>

### *static* join(delimiter, listOfValues) <a id=\\"aws-cdk-core-fn-join\\"></a>

The intrinsic function \`\`Fn::Join\`\` appends a set of values into a single value, separated by the specified delimiter.

If a delimiter is the empty
string, the set of values are concatenated with no delimiter.

\`\`\`ts
static join(delimiter: string, listOfValues: Array<string>): string
\`\`\`

* **delimiter** (<code>string</code>)  The value you want to occur between fragments.
* **listOfValues** (<code>Array<string></code>)  The list of values you want combined.

__Returns__:
* <code>string</code>

### *static* ref(logicalName) <a id=\\"aws-cdk-core-fn-ref\\"></a>

The \`\`Ref\`\` intrinsic function returns the value of the specified parameter or resource.

Note that it doesn't validate the logicalName, it mainly serves paremeter/resource reference defined in a \`\`CfnInclude\`\` template.

\`\`\`ts
static ref(logicalName: string): string
\`\`\`

* **logicalName** (<code>string</code>)  The logical name of a parameter/resource for which you want to retrieve its value.

__Returns__:
* <code>string</code>

### *static* refAll(parameterType) <a id=\\"aws-cdk-core-fn-refall\\"></a>

Returns all values for a specified parameter type.

\`\`\`ts
static refAll(parameterType: string): Array<string>
\`\`\`

* **parameterType** (<code>string</code>)  An AWS-specific parameter type, such as AWS::EC2::SecurityGroup::Id or AWS::EC2::VPC::Id.

__Returns__:
* <code>Array<string></code>

### *static* select(index, array) <a id=\\"aws-cdk-core-fn-select\\"></a>

The intrinsic function \`\`Fn::Select\`\` returns a single object from a list of objects by index.

\`\`\`ts
static select(index: number, array: Array<string>): string
\`\`\`

* **index** (<code>number</code>)  The index of the object to retrieve.
* **array** (<code>Array<string></code>)  The list of objects to select from.

__Returns__:
* <code>string</code>

### *static* split(delimiter, source) <a id=\\"aws-cdk-core-fn-split\\"></a>

To split a string into a list of string values so that you can select an element from the resulting string list, use the \`\`Fn::Split\`\` intrinsic function.

Specify the location of splits
with a delimiter, such as , (a comma). After you split a string, use the \`\`Fn::Select\`\` function
to pick a specific element.

\`\`\`ts
static split(delimiter: string, source: string): Array<string>
\`\`\`

* **delimiter** (<code>string</code>)  A string value that determines where the source string is divided.
* **source** (<code>string</code>)  The string value that you want to split.

__Returns__:
* <code>Array<string></code>

### *static* sub(body, variables?) <a id=\\"aws-cdk-core-fn-sub\\"></a>

The intrinsic function \`\`Fn::Sub\`\` substitutes variables in an input string with values that you specify.

In your templates, you can use this function
to construct commands or outputs that include values that aren't available
until you create or update a stack.

\`\`\`ts
static sub(body: string, variables?: Map<string, string>): string
\`\`\`

* **body** (<code>string</code>)  A string with variables that AWS CloudFormation substitutes with their associated values at runtime.
* **variables** (<code>Map<string, string></code>)  The name of a variable that you included in the String parameter.

__Returns__:
* <code>string</code>

### *static* valueOf(parameterOrLogicalId, attribute) <a id=\\"aws-cdk-core-fn-valueof\\"></a>

Returns an attribute value or list of values for a specific parameter and attribute.

\`\`\`ts
static valueOf(parameterOrLogicalId: string, attribute: string): string
\`\`\`

* **parameterOrLogicalId** (<code>string</code>)  The name of a parameter for which you want to retrieve attribute values.
* **attribute** (<code>string</code>)  The name of an attribute from which you want to retrieve a value.

__Returns__:
* <code>string</code>

### *static* valueOfAll(parameterType, attribute) <a id=\\"aws-cdk-core-fn-valueofall\\"></a>

Returns a list of all attribute values for a given parameter type and attribute.

\`\`\`ts
static valueOfAll(parameterType: string, attribute: string): Array<string>
\`\`\`

* **parameterType** (<code>string</code>)  An AWS-specific parameter type, such as AWS::EC2::SecurityGroup::Id or AWS::EC2::VPC::Id.
* **attribute** (<code>string</code>)  The name of an attribute from which you want to retrieve a value.

__Returns__:
* <code>Array<string></code>
",
  "@aws-cdk_core.GetContextKeyOptions.md": "# struct GetContextKeyOptions 🔹 <a id=\\"aws-cdk-core-getcontextkeyoptions\\"></a>






Name | Type | Description 
-----|------|-------------
**provider**🔹 | <code>string</code> | The context provider to query.
**props**?🔹 | <code>Map<string, any></code> | Provider-specific properties.<br/>__*Optional*__
",
  "@aws-cdk_core.GetContextKeyResult.md": "# struct GetContextKeyResult 🔹 <a id=\\"aws-cdk-core-getcontextkeyresult\\"></a>

__Obtainable from__: [ContextProvider](./@aws-cdk_core.ContextProvider.md).[getKey](./@aws-cdk_core.ContextProvider.md#aws-cdk-core-contextprovider-getkey)()





Name | Type | Description 
-----|------|-------------
**key**🔹 | <code>string</code> | <span></span>
**props**🔹 | <code>Map<string, any></code> | <span></span>
",
  "@aws-cdk_core.GetContextValueOptions.md": "# struct GetContextValueOptions 🔹 <a id=\\"aws-cdk-core-getcontextvalueoptions\\"></a>






Name | Type | Description 
-----|------|-------------
**dummyValue**🔹 | <code>any</code> | The value to return if the context value was not found and a missing context is reported.
**provider**🔹 | <code>string</code> | The context provider to query.
**props**?🔹 | <code>Map<string, any></code> | Provider-specific properties.<br/>__*Optional*__
",
  "@aws-cdk_core.GetContextValueResult.md": "# struct GetContextValueResult 🔹 <a id=\\"aws-cdk-core-getcontextvalueresult\\"></a>

__Obtainable from__: [ContextProvider](./@aws-cdk_core.ContextProvider.md).[getValue](./@aws-cdk_core.ContextProvider.md#aws-cdk-core-contextprovider-getvalue)()





Name | Type | Description 
-----|------|-------------
**value**?🔹 | <code>any</code> | __*Optional*__
",
  "@aws-cdk_core.IAnyProducer.md": "# interface IAnyProducer  <a id=\\"aws-cdk-core-ianyproducer\\"></a>


Interface for lazy untyped value producers.
## Methods


### produce(context) <a id=\\"aws-cdk-core-ianyproducer-produce\\"></a>

Produce the value.

\`\`\`ts
produce(context: IResolveContext): any
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.IAspect.md": "# interface IAspect  <a id=\\"aws-cdk-core-iaspect\\"></a>

__Implemented by__: [RemoveTag](./@aws-cdk_core.RemoveTag.md), [Tag](./@aws-cdk_core.Tag.md)

Represents an Aspect.
## Methods


### visit(node) <a id=\\"aws-cdk-core-iaspect-visit\\"></a>

All aspects can visit an IConstruct.

\`\`\`ts
visit(node: IConstruct): void
\`\`\`

* **node** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*



",
  "@aws-cdk_core.ICfnConditionExpression.md": "# interface ICfnConditionExpression  <a id=\\"aws-cdk-core-icfnconditionexpression\\"></a>

__Implemented by__: [CfnCondition](./@aws-cdk_core.CfnCondition.md)
__Obtainable from__: [Fn](./@aws-cdk_core.Fn.md).[conditionAnd](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditionand)(), [Fn](./@aws-cdk_core.Fn.md).[conditionContains](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditioncontains)(), [Fn](./@aws-cdk_core.Fn.md).[conditionEachMemberEquals](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditioneachmemberequals)(), [Fn](./@aws-cdk_core.Fn.md).[conditionEachMemberIn](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditioneachmemberin)(), [Fn](./@aws-cdk_core.Fn.md).[conditionEquals](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditionequals)(), [Fn](./@aws-cdk_core.Fn.md).[conditionIf](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditionif)(), [Fn](./@aws-cdk_core.Fn.md).[conditionNot](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditionnot)(), [Fn](./@aws-cdk_core.Fn.md).[conditionOr](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-conditionor)()

Represents a CloudFormation element that can be used within a Condition.

You can use intrinsic functions, such as \`\`Fn.conditionIf\`\`,
\`\`Fn.conditionEquals\`\`, and \`\`Fn.conditionNot\`\`, to conditionally create
stack resources. These conditions are evaluated based on input parameters
that you declare when you create or update a stack. After you define all your
conditions, you can associate them with resources or resource properties in
the Resources and Outputs sections of a template.

You define all conditions in the Conditions section of a template except for
\`\`Fn.conditionIf\`\` conditions. You can use the \`\`Fn.conditionIf\`\` condition
in the metadata attribute, update policy attribute, and property values in
the Resources section and Outputs sections of a template.

You might use conditions when you want to reuse a template that can create
resources in different contexts, such as a test environment versus a
production environment. In your template, you can add an EnvironmentType
input parameter, which accepts either prod or test as inputs. For the
production environment, you might include Amazon EC2 instances with certain
capabilities; however, for the test environment, you want to use less
capabilities to save costs. With conditions, you can define which resources
are created and how they're configured for each environment type.

You can use \`toString\` when you wish to embed a condition expression
in a property value that accepts a \`string\`. For example:

\`\`\`ts
new sqs.Queue(this, 'MyQueue', {
   queueName: Fn.conditionIf('Condition', 'Hello', 'World').toString()
});
\`\`\`

## Properties


Name | Type | Description 
-----|------|-------------
**creationStack** | <code>Array<string></code> | The creation stack of this resolvable which will be appended to errors thrown during resolution.

## Methods


### resolve(context) <a id=\\"aws-cdk-core-icfnconditionexpression-resolve\\"></a>

Produce the Token's value at resolution time.

\`\`\`ts
resolve(context: IResolveContext): any
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### toString() <a id=\\"aws-cdk-core-icfnconditionexpression-tostring\\"></a>

Return a string representation of this resolvable object.

Returns a reversible string representation.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.ICfnResourceOptions.md": "# interface ICfnResourceOptions  <a id=\\"aws-cdk-core-icfnresourceoptions\\"></a>




## Properties


Name | Type | Description 
-----|------|-------------
**condition**? | <code>[CfnCondition](./@aws-cdk_core.CfnCondition.md)</code> | A condition to associate with this resource.<br/>__*Optional*__
**creationPolicy**? | <code>[CfnCreationPolicy](./@aws-cdk_core.CfnCreationPolicy.md)</code> | Associate the CreationPolicy attribute with a resource to prevent its status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.<br/>__*Optional*__
**deletionPolicy**? | <code>[CfnDeletionPolicy](./@aws-cdk_core.CfnDeletionPolicy.md)</code> | With the DeletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted.<br/>__*Optional*__
**metadata**? | <code>Map<string, any></code> | Metadata associated with the CloudFormation resource.<br/>__*Optional*__
**updatePolicy**? | <code>[CfnUpdatePolicy](./@aws-cdk_core.CfnUpdatePolicy.md)</code> | Use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource.<br/>__*Optional*__
**updateReplacePolicy**? | <code>[CfnDeletionPolicy](./@aws-cdk_core.CfnDeletionPolicy.md)</code> | Use the UpdateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.<br/>__*Optional*__
",
  "@aws-cdk_core.IConstruct.md": "# interface IConstruct  <a id=\\"aws-cdk-core-iconstruct\\"></a>

__Implemented by__: [App](./@aws-cdk_core.App.md), [CfnCondition](./@aws-cdk_core.CfnCondition.md), [CfnInclude](./@aws-cdk_core.CfnInclude.md), [CfnMapping](./@aws-cdk_core.CfnMapping.md), [CfnOutput](./@aws-cdk_core.CfnOutput.md), [CfnParameter](./@aws-cdk_core.CfnParameter.md), [CfnResource](./@aws-cdk_core.CfnResource.md), [CfnRule](./@aws-cdk_core.CfnRule.md), [Construct](./@aws-cdk_core.Construct.md), [Stack](./@aws-cdk_core.Stack.md)
__Obtainable from__: [ConstructNode](./@aws-cdk_core.ConstructNode.md).[findChild](./@aws-cdk_core.ConstructNode.md#aws-cdk-core-constructnode-findchild)(), [ConstructNode](./@aws-cdk_core.ConstructNode.md).[tryFindChild](./@aws-cdk_core.ConstructNode.md#aws-cdk-core-constructnode-tryfindchild)()

Represents a construct.

## Properties


Name | Type | Description 
-----|------|-------------
**node** | <code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code> | The construct tree node for this construct.
",
  "@aws-cdk_core.IDependable.md": "# interface IDependable  <a id=\\"aws-cdk-core-idependable\\"></a>

__Implemented by__: [App](./@aws-cdk_core.App.md), [CfnCondition](./@aws-cdk_core.CfnCondition.md), [CfnInclude](./@aws-cdk_core.CfnInclude.md), [CfnMapping](./@aws-cdk_core.CfnMapping.md), [CfnOutput](./@aws-cdk_core.CfnOutput.md), [CfnParameter](./@aws-cdk_core.CfnParameter.md), [CfnResource](./@aws-cdk_core.CfnResource.md), [CfnRule](./@aws-cdk_core.CfnRule.md), [ConcreteDependable](./@aws-cdk_core.ConcreteDependable.md), [Construct](./@aws-cdk_core.Construct.md), [Stack](./@aws-cdk_core.Stack.md)

Trait marker for classes that can be depended upon.

The presence of this interface indicates that an object has
an \`IDependableTrait\` implementation.

This interface can be used to take an (ordering) dependency on a set of
constructs. An ordering dependency implies that the resources represented by
those constructs are deployed before the resources depending ON them are
deployed.",
  "@aws-cdk_core.IFragmentConcatenator.md": "# interface IFragmentConcatenator 🔹 <a id=\\"aws-cdk-core-ifragmentconcatenator\\"></a>

__Implemented by__: [StringConcat](./@aws-cdk_core.StringConcat.md)

Function used to concatenate symbols in the target document language.

Interface so it could potentially be exposed over jsii.
## Methods


### join(left, right)🔹 <a id=\\"aws-cdk-core-ifragmentconcatenator-join\\"></a>

Join the fragment on the left and on the right.

\`\`\`ts
join(left: any, right: any): any
\`\`\`

* **left** (<code>any</code>)  *No description*
* **right** (<code>any</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.IInspectable.md": "# interface IInspectable  <a id=\\"aws-cdk-core-iinspectable\\"></a>


Interface for examining a construct and exposing metadata.
## Methods


### inspect(inspector) <a id=\\"aws-cdk-core-iinspectable-inspect\\"></a>

Examines construct.

\`\`\`ts
inspect(inspector: TreeInspector): void
\`\`\`

* **inspector** (<code>[TreeInspector](./@aws-cdk_core.TreeInspector.md)</code>)  - tree inspector to collect and process attributes.



",
  "@aws-cdk_core.IListProducer.md": "# interface IListProducer  <a id=\\"aws-cdk-core-ilistproducer\\"></a>


Interface for lazy list producers.
## Methods


### produce(context) <a id=\\"aws-cdk-core-ilistproducer-produce\\"></a>

Produce the list value.

\`\`\`ts
produce(context: IResolveContext): Array<string>
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>Array<string></code>
",
  "@aws-cdk_core.INumberProducer.md": "# interface INumberProducer  <a id=\\"aws-cdk-core-inumberproducer\\"></a>


Interface for lazy number producers.
## Methods


### produce(context) <a id=\\"aws-cdk-core-inumberproducer-produce\\"></a>

Produce the number value.

\`\`\`ts
produce(context: IResolveContext): number
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>number</code>
",
  "@aws-cdk_core.IPostProcessor.md": "# interface IPostProcessor  <a id=\\"aws-cdk-core-ipostprocessor\\"></a>


A Token that can post-process the complete resolved value, after resolve() has recursed over it.
## Methods


### postProcess(input, context) <a id=\\"aws-cdk-core-ipostprocessor-postprocess\\"></a>

Process the completely resolved value, after full recursion/resolution has happened.

\`\`\`ts
postProcess(input: any, context: IResolveContext): any
\`\`\`

* **input** (<code>any</code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.IResolvable.md": "# interface IResolvable  <a id=\\"aws-cdk-core-iresolvable\\"></a>

__Implemented by__: [CfnCondition](./@aws-cdk_core.CfnCondition.md), [CfnDynamicReference](./@aws-cdk_core.CfnDynamicReference.md), [Intrinsic](./@aws-cdk_core.Intrinsic.md), [SecretValue](./@aws-cdk_core.SecretValue.md)
__Obtainable from__: [Fn](./@aws-cdk_core.Fn.md).[getAtt](./@aws-cdk_core.Fn.md#aws-cdk-core-fn-getatt)(), [Lazy](./@aws-cdk_core.Lazy.md).[anyValue](./@aws-cdk_core.Lazy.md#aws-cdk-core-lazy-anyvalue)(), [Stack](./@aws-cdk_core.Stack.md).[prepareCrossReference](./@aws-cdk_core.Stack.md#aws-cdk-core-stack-preparecrossreference)(), [Token](./@aws-cdk_core.Token.md).[asAny](./@aws-cdk_core.Token.md#aws-cdk-core-token-asany)(), [Tokenization](./@aws-cdk_core.Tokenization.md).[reverseList](./@aws-cdk_core.Tokenization.md#aws-cdk-core-tokenization-reverselist)(), [Tokenization](./@aws-cdk_core.Tokenization.md).[reverseNumber](./@aws-cdk_core.Tokenization.md#aws-cdk-core-tokenization-reversenumber)()

Interface for values that can be resolvable later.

Tokens are special objects that participate in synthesis.

## Properties


Name | Type | Description 
-----|------|-------------
**creationStack** | <code>Array<string></code> | The creation stack of this resolvable which will be appended to errors thrown during resolution.

## Methods


### resolve(context) <a id=\\"aws-cdk-core-iresolvable-resolve\\"></a>

Produce the Token's value at resolution time.

\`\`\`ts
resolve(context: IResolveContext): any
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### toString() <a id=\\"aws-cdk-core-iresolvable-tostring\\"></a>

Return a string representation of this resolvable object.

Returns a reversible string representation.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.IResolveContext.md": "# interface IResolveContext  <a id=\\"aws-cdk-core-iresolvecontext\\"></a>


Current resolution context for tokens.

## Properties


Name | Type | Description 
-----|------|-------------
**preparing** | <code>boolean</code> | True when we are still preparing, false if we're rendering the final output.
**scope** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | The scope from which resolution has been initiated.

## Methods


### registerPostProcessor(postProcessor) <a id=\\"aws-cdk-core-iresolvecontext-registerpostprocessor\\"></a>

Use this postprocessor after the entire token structure has been resolved.

\`\`\`ts
registerPostProcessor(postProcessor: IPostProcessor): void
\`\`\`

* **postProcessor** (<code>[IPostProcessor](./@aws-cdk_core.IPostProcessor.md)</code>)  *No description*




### resolve(x) <a id=\\"aws-cdk-core-iresolvecontext-resolve\\"></a>

Resolve an inner object.

\`\`\`ts
resolve(x: any): any
\`\`\`

* **x** (<code>any</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.IResource.md": "# interface IResource  <a id=\\"aws-cdk-core-iresource\\"></a>


Interface for the Resource construct.

## Properties


Name | Type | Description 
-----|------|-------------
**node** | <code>[ConstructNode](./@aws-cdk_core.ConstructNode.md)</code> | The construct tree node for this construct.
**stack** | <code>[Stack](./@aws-cdk_core.Stack.md)</code> | The stack in which this resource is defined.
",
  "@aws-cdk_core.IStringProducer.md": "# interface IStringProducer  <a id=\\"aws-cdk-core-istringproducer\\"></a>


Interface for lazy string producers.
## Methods


### produce(context) <a id=\\"aws-cdk-core-istringproducer-produce\\"></a>

Produce the string value.

\`\`\`ts
produce(context: IResolveContext): string
\`\`\`

* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.ISynthesisSession.md": "# interface ISynthesisSession  <a id=\\"aws-cdk-core-isynthesissession\\"></a>


Represents a single session of synthesis.

Passed into \`Construct.synthesize()\` methods.

## Properties


Name | Type | Description 
-----|------|-------------
**assembly** | <code>[CloudAssemblyBuilder](./@aws-cdk_cx-api.CloudAssemblyBuilder.md)</code> | Cloud assembly builder.
**outdir** | <code>string</code> | The output directory for this synthesis session.
",
  "@aws-cdk_core.ITaggable.md": "# interface ITaggable  <a id=\\"aws-cdk-core-itaggable\\"></a>

__Implemented by__: [Stack](./@aws-cdk_core.Stack.md)

Interface to implement tags.

## Properties


Name | Type | Description 
-----|------|-------------
**tags** | <code>[TagManager](./@aws-cdk_core.TagManager.md)</code> | TagManager to set, remove and format tags.
",
  "@aws-cdk_core.ITemplateOptions.md": "# interface ITemplateOptions  <a id=\\"aws-cdk-core-itemplateoptions\\"></a>


CloudFormation template options for a stack.

## Properties


Name | Type | Description 
-----|------|-------------
**description**? | <code>string</code> | Gets or sets the description of this stack.<br/>__*Optional*__
**metadata**? | <code>Map<string, any></code> | Metadata associated with the CloudFormation template.<br/>__*Optional*__
**templateFormatVersion**? | <code>string</code> | Gets or sets the AWSTemplateFormatVersion field of the CloudFormation template.<br/>__*Optional*__
**transform**?⚠️ | <code>string</code> | Gets or sets the top-level template transform for this stack (e.g. \\"AWS::Serverless-2016-10-31\\").<br/>__*Optional*__
**transforms**? | <code>Array<string></code> | Gets or sets the top-level template transform(s) for this stack (e.g. \`[\\"AWS::Serverless-2016-10-31\\"]\`).<br/>__*Optional*__
",
  "@aws-cdk_core.ITokenMapper.md": "# interface ITokenMapper  <a id=\\"aws-cdk-core-itokenmapper\\"></a>


Interface to apply operation to tokens in a string.

Interface so it can be exported via jsii.
## Methods


### mapToken(t) <a id=\\"aws-cdk-core-itokenmapper-maptoken\\"></a>

Replace a single token.

\`\`\`ts
mapToken(t: IResolvable): any
\`\`\`

* **t** (<code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.ITokenResolver.md": "# interface ITokenResolver  <a id=\\"aws-cdk-core-itokenresolver\\"></a>

__Implemented by__: [DefaultTokenResolver](./@aws-cdk_core.DefaultTokenResolver.md)

How to resolve tokens.
## Methods


### resolveList(l, context) <a id=\\"aws-cdk-core-itokenresolver-resolvelist\\"></a>

Resolve a tokenized list.

\`\`\`ts
resolveList(l: Array<string>, context: IResolveContext): any
\`\`\`

* **l** (<code>Array<string></code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### resolveString(s, context) <a id=\\"aws-cdk-core-itokenresolver-resolvestring\\"></a>

Resolve a string with at least one stringified token in it.

(May use concatenation)

\`\`\`ts
resolveString(s: TokenizedStringFragments, context: IResolveContext): any
\`\`\`

* **s** (<code>[TokenizedStringFragments](./@aws-cdk_core.TokenizedStringFragments.md)</code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### resolveToken(t, context, postProcessor) <a id=\\"aws-cdk-core-itokenresolver-resolvetoken\\"></a>

Resolve a single token.

\`\`\`ts
resolveToken(t: IResolvable, context: IResolveContext, postProcessor: IPostProcessor): any
\`\`\`

* **t** (<code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>)  *No description*
* **context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*
* **postProcessor** (<code>[IPostProcessor](./@aws-cdk_core.IPostProcessor.md)</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.Intrinsic.md": "# class Intrinsic 🔹 <a id=\\"aws-cdk-core-intrinsic\\"></a>

Token subclass that represents values intrinsic to the target document language.

WARNING: this class should not be externally exposed, but is currently visible
because of a limitation of jsii (https://github.com/aws/jsii/issues/524).

This class will disappear in a future release and should not be used.

__Implements__: [IResolvable](./@aws-cdk_core.IResolvable.md)

## Initializer




\`\`\`ts
new Intrinsic(value: any)
\`\`\`

* **value** (<code>any</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**creationStack**🔹 | <code>Array<string></code> | The captured stack trace which represents the location in which this token was created.

## Methods


### resolve(_context)🔹 <a id=\\"aws-cdk-core-intrinsic-resolve\\"></a>

Produce the Token's value at resolution time.

\`\`\`ts
resolve(_context: IResolveContext): any
\`\`\`

* **_context** (<code>[IResolveContext](./@aws-cdk_core.IResolveContext.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### toJSON()🔹 <a id=\\"aws-cdk-core-intrinsic-tojson\\"></a>

Turn this Token into JSON.

Called automatically when JSON.stringify() is called on a Token.

\`\`\`ts
toJSON(): any
\`\`\`


__Returns__:
* <code>any</code>

### toString()🔹 <a id=\\"aws-cdk-core-intrinsic-tostring\\"></a>

Convert an instance of this Token to a string.

This method will be called implicitly by language runtimes if the object
is embedded into a string. We treat it the same as an explicit
stringification.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>

### protected newError(message)🔹 <a id=\\"aws-cdk-core-intrinsic-newerror\\"></a>

Creates a throwable Error object that contains the token creation stack trace.

\`\`\`ts
protected newError(message: string): any
\`\`\`

* **message** (<code>string</code>)  Error message.

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.Lazy.md": "# class Lazy  <a id=\\"aws-cdk-core-lazy\\"></a>

Lazily produce a value.

Can be used to return a string, list or numeric value whose actual value
will only be calculated later, during synthesis.


## Methods


### *static* anyValue(producer, options?) <a id=\\"aws-cdk-core-lazy-anyvalue\\"></a>



\`\`\`ts
static anyValue(producer: IAnyProducer, options?: LazyAnyValueOptions): IResolvable
\`\`\`

* **producer** (<code>[IAnyProducer](./@aws-cdk_core.IAnyProducer.md)</code>)  *No description*
* **options** (<code>[LazyAnyValueOptions](./@aws-cdk_core.LazyAnyValueOptions.md)</code>)  *No description*
  * **displayHint** (<code>string</code>)  Use the given name as a display hint. __*Default*__: No hint
  * **omitEmptyArray** (<code>boolean</code>)  If the produced value is an array and it is empty, return 'undefined' instead. __*Default*__: false

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### *static* listValue(producer, options?) <a id=\\"aws-cdk-core-lazy-listvalue\\"></a>



\`\`\`ts
static listValue(producer: IListProducer, options?: LazyListValueOptions): Array<string>
\`\`\`

* **producer** (<code>[IListProducer](./@aws-cdk_core.IListProducer.md)</code>)  *No description*
* **options** (<code>[LazyListValueOptions](./@aws-cdk_core.LazyListValueOptions.md)</code>)  *No description*
  * **displayHint** (<code>string</code>)  Use the given name as a display hint. __*Default*__: No hint
  * **omitEmpty** (<code>boolean</code>)  If the produced list is empty, return 'undefined' instead. __*Default*__: false

__Returns__:
* <code>Array<string></code>

### *static* numberValue(producer) <a id=\\"aws-cdk-core-lazy-numbervalue\\"></a>



\`\`\`ts
static numberValue(producer: INumberProducer): number
\`\`\`

* **producer** (<code>[INumberProducer](./@aws-cdk_core.INumberProducer.md)</code>)  *No description*

__Returns__:
* <code>number</code>

### *static* stringValue(producer, options?) <a id=\\"aws-cdk-core-lazy-stringvalue\\"></a>



\`\`\`ts
static stringValue(producer: IStringProducer, options?: LazyStringValueOptions): string
\`\`\`

* **producer** (<code>[IStringProducer](./@aws-cdk_core.IStringProducer.md)</code>)  *No description*
* **options** (<code>[LazyStringValueOptions](./@aws-cdk_core.LazyStringValueOptions.md)</code>)  *No description*
  * **displayHint** (<code>string</code>)  Use the given name as a display hint. __*Default*__: No hint

__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.LazyAnyValueOptions.md": "# struct LazyAnyValueOptions  <a id=\\"aws-cdk-core-lazyanyvalueoptions\\"></a>


Options for creating lazy untyped tokens.



Name | Type | Description 
-----|------|-------------
**displayHint**? | <code>string</code> | Use the given name as a display hint.<br/>__*Default*__: No hint
**omitEmptyArray**? | <code>boolean</code> | If the produced value is an array and it is empty, return 'undefined' instead.<br/>__*Default*__: false
",
  "@aws-cdk_core.LazyListValueOptions.md": "# struct LazyListValueOptions  <a id=\\"aws-cdk-core-lazylistvalueoptions\\"></a>


Options for creating a lazy list token.



Name | Type | Description 
-----|------|-------------
**displayHint**? | <code>string</code> | Use the given name as a display hint.<br/>__*Default*__: No hint
**omitEmpty**? | <code>boolean</code> | If the produced list is empty, return 'undefined' instead.<br/>__*Default*__: false
",
  "@aws-cdk_core.LazyStringValueOptions.md": "# struct LazyStringValueOptions  <a id=\\"aws-cdk-core-lazystringvalueoptions\\"></a>


Options for creating a lazy string token.



Name | Type | Description 
-----|------|-------------
**displayHint**? | <code>string</code> | Use the given name as a display hint.<br/>__*Default*__: No hint
",
  "@aws-cdk_core.PhysicalName.md": "# class PhysicalName  <a id=\\"aws-cdk-core-physicalname\\"></a>

Includes special markers for automatic generation of physical names.



## Properties


Name | Type | Description 
-----|------|-------------
*static* **GENERATE_IF_NEEDED** | <code>string</code> | Use this to automatically generate a physical name for an AWS resource only if the resource is referenced across environments (account/region).
",
  "@aws-cdk_core.Reference.md": "# class Reference  <a id=\\"aws-cdk-core-reference\\"></a>

An intrinsic Token that represents a reference to a construct.

References are recorded.

__Implements__: [IResolvable](./@aws-cdk_core.IResolvable.md)
__Extends__: [Intrinsic](./@aws-cdk_core.Intrinsic.md)
__Obtainable from__: [CfnResource](./@aws-cdk_core.CfnResource.md).[getAtt](./@aws-cdk_core.CfnResource.md#aws-cdk-core-cfnresource-getatt)()

## Initializer




\`\`\`ts
new Reference(value: any, target: IConstruct, displayName?: string)
\`\`\`

* **value** (<code>any</code>)  *No description*
* **target** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*
* **displayName** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**displayName** | <code>string</code> | <span></span>
**target** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | <span></span>

## Methods


### *static* isReference(x) <a id=\\"aws-cdk-core-reference-isreference\\"></a>

Check whether this is actually a Reference.

\`\`\`ts
static isReference(x: any): boolean
\`\`\`

* **x** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.RemovalPolicy.md": "# enum RemovalPolicy  <a id=\\"aws-cdk-core-removalpolicy\\"></a>



Name | Description
-----|-----
**DESTROY** |This is the default removal policy.
**RETAIN** |This uses the 'Retain' DeletionPolicy, which will cause the resource to be retained in the account, but orphaned from the stack.",
  "@aws-cdk_core.RemovalPolicyOptions.md": "# struct RemovalPolicyOptions  <a id=\\"aws-cdk-core-removalpolicyoptions\\"></a>






Name | Type | Description 
-----|------|-------------
**applyToUpdateReplacePolicy**? | <code>boolean</code> | Apply the same deletion policy to the resource's \\"UpdateReplacePolicy\\".<br/>__*Default*__: true
**default**? | <code>[RemovalPolicy](./@aws-cdk_core.RemovalPolicy.md)</code> | The default policy to apply in case the removal policy is not defined.<br/>__*Default*__: Default value is resource specific. To determine the default value for a resoure, please consult that specific resource's documentation.
",
  "@aws-cdk_core.RemoveTag.md": "# class RemoveTag  <a id=\\"aws-cdk-core-removetag\\"></a>

The RemoveTag Aspect will handle removing tags from this node and children.

__Implements__: [IAspect](./@aws-cdk_core.IAspect.md)

## Initializer




\`\`\`ts
new RemoveTag(key: string, props?: TagProps)
\`\`\`

* **key** (<code>string</code>)  *No description*
* **props** (<code>[TagProps](./@aws-cdk_core.TagProps.md)</code>)  *No description*
  * **applyToLaunchedInstances** (<code>boolean</code>)  Whether the tag should be applied to instances in an AutoScalingGroup. __*Default*__: true
  * **excludeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will not receive this tag. __*Default*__: []
  * **includeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will receive this tag. __*Default*__: []
  * **priority** (<code>number</code>)  Priority of the tag operation. __*Default*__: Default priorities:  - 100 for {@link SetTag} - 200 for {@link RemoveTag} - 50 for tags added directly to CloudFormation resources



## Properties


Name | Type | Description 
-----|------|-------------
**key** | <code>string</code> | The string key for the tag.
**props** | <code>[TagProps](./@aws-cdk_core.TagProps.md)</code> | <span></span>

## Methods


### visit(construct) <a id=\\"aws-cdk-core-removetag-visit\\"></a>

All aspects can visit an IConstruct.

\`\`\`ts
visit(construct: IConstruct): void
\`\`\`

* **construct** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*




### protected applyTag(resource) <a id=\\"aws-cdk-core-removetag-applytag\\"></a>



\`\`\`ts
protected applyTag(resource: ITaggable): void
\`\`\`

* **resource** (<code>[ITaggable](./@aws-cdk_core.ITaggable.md)</code>)  *No description*



",
  "@aws-cdk_core.ResolveOptions.md": "# struct ResolveOptions  <a id=\\"aws-cdk-core-resolveoptions\\"></a>


Options to the resolve() operation.

NOT the same as the ResolveContext; ResolveContext is exposed to Token
implementors and resolution hooks, whereas this struct is just to bundle
a number of things that would otherwise be arguments to resolve() in a
readable way.



Name | Type | Description 
-----|------|-------------
**resolver** | <code>[ITokenResolver](./@aws-cdk_core.ITokenResolver.md)</code> | The resolver to apply to any resolvable tokens found.
**scope** | <code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code> | The scope from which resolution is performed.
**preparing**? | <code>boolean</code> | Whether the resolution is being executed during the prepare phase or not.<br/>__*Default*__: false
",
  "@aws-cdk_core.Resource.md": "# class Resource  <a id=\\"aws-cdk-core-resource\\"></a>

A construct which represents an AWS resource.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md), [IResource](./@aws-cdk_core.IResource.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md), [IConstruct](./@aws-cdk_core.IConstruct.md)
__Extends__: [Construct](./@aws-cdk_core.Construct.md)

## Initializer




\`\`\`ts
new Resource(scope: Construct, id: string, props?: ResourceProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*
* **props** (<code>[ResourceProps](./@aws-cdk_core.ResourceProps.md)</code>)  *No description*
  * **physicalName** (<code>string</code>)  The value passed in by users to the physical name prop of the resource. __*Default*__: The physical name will be allocated by CloudFormation at deployment time



## Properties


Name | Type | Description 
-----|------|-------------
**physicalName**🔹 | <code>string</code> | Returns a string-encoded token that resolves to the physical name that should be passed to the CloudFormation resource.
**stack** | <code>[Stack](./@aws-cdk_core.Stack.md)</code> | The stack in which this resource is defined.

## Methods


### protected generatePhysicalName() <a id=\\"aws-cdk-core-resource-generatephysicalname\\"></a>



\`\`\`ts
protected generatePhysicalName(): string
\`\`\`


__Returns__:
* <code>string</code>

### protected getResourceArnAttribute(arnAttr, arnComponents)🔹 <a id=\\"aws-cdk-core-resource-getresourcearnattribute\\"></a>

Returns an environment-sensitive token that should be used for the resource's \\"ARN\\" attribute (e.g. \`bucket.bucketArn\`).

Normally, this token will resolve to \`arnAttr\`, but if the resource is
referenced across environments, \`arnComponents\` will be used to synthesize
a concrete ARN with the resource's physical name. Make sure to reference
\`this.physicalName\` in \`arnComponents\`.

\`\`\`ts
protected getResourceArnAttribute(arnAttr: string, arnComponents: ArnComponents): string
\`\`\`

* **arnAttr** (<code>string</code>)  The CFN attribute which resolves to the ARN of the resource.
* **arnComponents** (<code>[ArnComponents](./@aws-cdk_core.ArnComponents.md)</code>)  The format of the ARN of this resource.
  * **resource** (<code>string</code>)  Resource type (e.g. \\"table\\", \\"autoScalingGroup\\", \\"certificate\\"). For some resource types, e.g. S3 buckets, this field defines the bucket name. 
  * **service** (<code>string</code>)  The service namespace that identifies the AWS product (for example, 's3', 'iam', 'codepipline'). 
  * **account** (<code>string</code>)  The ID of the AWS account that owns the resource, without the hyphens. __*Default*__: The account the stack is deployed to.
  * **partition** (<code>string</code>)  The partition that the resource is in. __*Default*__: The AWS partition the stack is deployed to.
  * **region** (<code>string</code>)  The region the resource resides in. __*Default*__: The region the stack is deployed to.
  * **resourceName** (<code>string</code>)  Resource name or path within the resource (i.e. S3 bucket object key) or a wildcard such as \`\`\\"*\\"\`\`. This is service-dependent. __*Optional*__
  * **sep** (<code>string</code>)  Separator between resource type and the resource. __*Default*__: '/'

__Returns__:
* <code>string</code>

### protected getResourceNameAttribute(nameAttr)🔹 <a id=\\"aws-cdk-core-resource-getresourcenameattribute\\"></a>

Returns an environment-sensitive token that should be used for the resource's \\"name\\" attribute (e.g. \`bucket.bucketName\`).

Normally, this token will resolve to \`nameAttr\`, but if the resource is
referenced across environments, it will be resolved to \`this.physicalName\`,
which will be a concrete name.

\`\`\`ts
protected getResourceNameAttribute(nameAttr: string): string
\`\`\`

* **nameAttr** (<code>string</code>)  The CFN attribute which resolves to the resource's name.

__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.ResourceProps.md": "# struct ResourceProps  <a id=\\"aws-cdk-core-resourceprops\\"></a>


Construction properties for {@link Resource}.



Name | Type | Description 
-----|------|-------------
**physicalName**? | <code>string</code> | The value passed in by users to the physical name prop of the resource.<br/>__*Default*__: The physical name will be allocated by CloudFormation at deployment time
",
  "@aws-cdk_core.ScopedAws.md": "# class ScopedAws  <a id=\\"aws-cdk-core-scopedaws\\"></a>

Accessor for scoped pseudo parameters.

These pseudo parameters are anchored to a stack somewhere in the construct
tree, and their values will be exported automatically.


## Initializer




\`\`\`ts
new ScopedAws(scope: Construct)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**accountId** | <code>string</code> | <span></span>
**notificationArns** | <code>Array<string></code> | <span></span>
**partition** | <code>string</code> | <span></span>
**region** | <code>string</code> | <span></span>
**stackId** | <code>string</code> | <span></span>
**stackName** | <code>string</code> | <span></span>
**urlSuffix** | <code>string</code> | <span></span>
",
  "@aws-cdk_core.SecretValue.md": "# class SecretValue  <a id=\\"aws-cdk-core-secretvalue\\"></a>

Work with secret values in the CDK.

Secret values in the CDK (such as those retrieved from SecretsManager) are
represented as regular strings, just like other values that are only
available at deployment time.

To help you avoid accidental mistakes which would lead to you putting your
secret values directly into a CloudFormation template, constructs that take
secret values will not allow you to pass in a literal secret value. They do
so by calling \`Secret.assertSafeSecret()\`.

You can escape the check by calling \`Secret.plainText()\`, but doing
so is highly discouraged.

__Implements__: [IResolvable](./@aws-cdk_core.IResolvable.md)
__Extends__: [Intrinsic](./@aws-cdk_core.Intrinsic.md)

## Initializer




\`\`\`ts
new SecretValue(value: any)
\`\`\`

* **value** (<code>any</code>)  *No description*


## Methods


### *static* cfnDynamicReference(ref) <a id=\\"aws-cdk-core-secretvalue-cfndynamicreference\\"></a>

Obtain the secret value through a CloudFormation dynamic reference.

If possible, use \`SecretValue.ssmSecure\` or \`SecretValue.secretsManager\` directly.

\`\`\`ts
static cfnDynamicReference(ref: CfnDynamicReference): SecretValue
\`\`\`

* **ref** (<code>[CfnDynamicReference](./@aws-cdk_core.CfnDynamicReference.md)</code>)  The dynamic reference to use.

__Returns__:
* <code>[SecretValue](./@aws-cdk_core.SecretValue.md)</code>

### *static* cfnParameter(param) <a id=\\"aws-cdk-core-secretvalue-cfnparameter\\"></a>

Obtain the secret value through a CloudFormation parameter.

Generally, this is not a recommended approach. AWS Secrets Manager is the
recommended way to reference secrets.

\`\`\`ts
static cfnParameter(param: CfnParameter): SecretValue
\`\`\`

* **param** (<code>[CfnParameter](./@aws-cdk_core.CfnParameter.md)</code>)  The CloudFormation parameter to use.

__Returns__:
* <code>[SecretValue](./@aws-cdk_core.SecretValue.md)</code>

### *static* plainText(secret) <a id=\\"aws-cdk-core-secretvalue-plaintext\\"></a>

Construct a literal secret value for use with secret-aware constructs.

*Do not use this method for any secrets that you care about.*

The only reasonable use case for using this method is when you are testing.

\`\`\`ts
static plainText(secret: string): SecretValue
\`\`\`

* **secret** (<code>string</code>)  *No description*

__Returns__:
* <code>[SecretValue](./@aws-cdk_core.SecretValue.md)</code>

### *static* secretsManager(secretId, options?) <a id=\\"aws-cdk-core-secretvalue-secretsmanager\\"></a>

Creates a \`SecretValue\` with a value which is dynamically loaded from AWS Secrets Manager.

\`\`\`ts
static secretsManager(secretId: string, options?: SecretsManagerSecretOptions): SecretValue
\`\`\`

* **secretId** (<code>string</code>)  The ID or ARN of the secret.
* **options** (<code>[SecretsManagerSecretOptions](./@aws-cdk_core.SecretsManagerSecretOptions.md)</code>)  Options.
  * **jsonField** (<code>string</code>)  The key of a JSON field to retrieve. __*Default*__: returns all the content stored in the Secrets Manager secret.
  * **versionId** (<code>string</code>)  Specifies the unique identifier of the version of the secret you want to use. __*Default*__: AWSCURRENT
  * **versionStage** (<code>string</code>)  Specified the secret version that you want to retrieve by the staging label attached to the version. __*Default*__: AWSCURRENT

__Returns__:
* <code>[SecretValue](./@aws-cdk_core.SecretValue.md)</code>

### *static* ssmSecure(parameterName, version) <a id=\\"aws-cdk-core-secretvalue-ssmsecure\\"></a>

Use a secret value stored from a Systems Manager (SSM) parameter.

\`\`\`ts
static ssmSecure(parameterName: string, version: string): SecretValue
\`\`\`

* **parameterName** (<code>string</code>)  The name of the parameter in the Systems Manager Parameter Store.
* **version** (<code>string</code>)  An integer that specifies the version of the parameter to use.

__Returns__:
* <code>[SecretValue](./@aws-cdk_core.SecretValue.md)</code>
",
  "@aws-cdk_core.SecretsManagerSecretOptions.md": "# struct SecretsManagerSecretOptions  <a id=\\"aws-cdk-core-secretsmanagersecretoptions\\"></a>


Options for referencing a secret value from Secrets Manager.



Name | Type | Description 
-----|------|-------------
**jsonField**? | <code>string</code> | The key of a JSON field to retrieve.<br/>__*Default*__: returns all the content stored in the Secrets Manager secret.
**versionId**? | <code>string</code> | Specifies the unique identifier of the version of the secret you want to use.<br/>__*Default*__: AWSCURRENT
**versionStage**? | <code>string</code> | Specified the secret version that you want to retrieve by the staging label attached to the version.<br/>__*Default*__: AWSCURRENT
",
  "@aws-cdk_core.Size.md": "# class Size  <a id=\\"aws-cdk-core-size\\"></a>

Represents the amount of digital storage.

The amount can be specified either as a literal value (e.g: \`10\`) which
cannot be negative, or as an unresolved number token.

When the amount is passed as a token, unit conversion is not possible.


## Methods


### toGibibytes(opts?) <a id=\\"aws-cdk-core-size-togibibytes\\"></a>

Return this storage as a total number of gibibytes.

\`\`\`ts
toGibibytes(opts?: SizeConversionOptions): number
\`\`\`

* **opts** (<code>[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)</code>)  *No description*
  * **rounding** (<code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code>)  How conversions should behave when it encounters a non-integer result. __*Default*__: SizeRoundingBehavior.FAIL

__Returns__:
* <code>number</code>

### toKibibytes(opts?) <a id=\\"aws-cdk-core-size-tokibibytes\\"></a>

Return this storage as a total number of kibibytes.

\`\`\`ts
toKibibytes(opts?: SizeConversionOptions): number
\`\`\`

* **opts** (<code>[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)</code>)  *No description*
  * **rounding** (<code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code>)  How conversions should behave when it encounters a non-integer result. __*Default*__: SizeRoundingBehavior.FAIL

__Returns__:
* <code>number</code>

### toMebibytes(opts?) <a id=\\"aws-cdk-core-size-tomebibytes\\"></a>

Return this storage as a total number of mebibytes.

\`\`\`ts
toMebibytes(opts?: SizeConversionOptions): number
\`\`\`

* **opts** (<code>[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)</code>)  *No description*
  * **rounding** (<code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code>)  How conversions should behave when it encounters a non-integer result. __*Default*__: SizeRoundingBehavior.FAIL

__Returns__:
* <code>number</code>

### toPebibytes(opts?) <a id=\\"aws-cdk-core-size-topebibytes\\"></a>

Return this storage as a total number of pebibytes.

\`\`\`ts
toPebibytes(opts?: SizeConversionOptions): number
\`\`\`

* **opts** (<code>[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)</code>)  *No description*
  * **rounding** (<code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code>)  How conversions should behave when it encounters a non-integer result. __*Default*__: SizeRoundingBehavior.FAIL

__Returns__:
* <code>number</code>

### toTebibytes(opts?) <a id=\\"aws-cdk-core-size-totebibytes\\"></a>

Return this storage as a total number of tebibytes.

\`\`\`ts
toTebibytes(opts?: SizeConversionOptions): number
\`\`\`

* **opts** (<code>[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)</code>)  *No description*
  * **rounding** (<code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code>)  How conversions should behave when it encounters a non-integer result. __*Default*__: SizeRoundingBehavior.FAIL

__Returns__:
* <code>number</code>

### *static* gibibytes(amount) <a id=\\"aws-cdk-core-size-gibibytes\\"></a>

Create a Storage representing an amount mebibytes.

1 GiB = 1024 MiB

\`\`\`ts
static gibibytes(amount: number): Size
\`\`\`

* **amount** (<code>number</code>)  *No description*

__Returns__:
* <code>[Size](./@aws-cdk_core.Size.md)</code>

### *static* kibibytes(amount) <a id=\\"aws-cdk-core-size-kibibytes\\"></a>

Create a Storage representing an amount kibibytes.

1 KiB = 1024 bytes

\`\`\`ts
static kibibytes(amount: number): Size
\`\`\`

* **amount** (<code>number</code>)  *No description*

__Returns__:
* <code>[Size](./@aws-cdk_core.Size.md)</code>

### *static* mebibytes(amount) <a id=\\"aws-cdk-core-size-mebibytes\\"></a>

Create a Storage representing an amount mebibytes.

1 MiB = 1024 KiB

\`\`\`ts
static mebibytes(amount: number): Size
\`\`\`

* **amount** (<code>number</code>)  *No description*

__Returns__:
* <code>[Size](./@aws-cdk_core.Size.md)</code>

### *static* pebibyte(amount) <a id=\\"aws-cdk-core-size-pebibyte\\"></a>

Create a Storage representing an amount pebibytes.

1 PiB = 1024 TiB

\`\`\`ts
static pebibyte(amount: number): Size
\`\`\`

* **amount** (<code>number</code>)  *No description*

__Returns__:
* <code>[Size](./@aws-cdk_core.Size.md)</code>

### *static* tebibytes(amount) <a id=\\"aws-cdk-core-size-tebibytes\\"></a>

Create a Storage representing an amount tebibytes.

1 TiB = 1024 GiB

\`\`\`ts
static tebibytes(amount: number): Size
\`\`\`

* **amount** (<code>number</code>)  *No description*

__Returns__:
* <code>[Size](./@aws-cdk_core.Size.md)</code>
",
  "@aws-cdk_core.SizeConversionOptions.md": "# struct SizeConversionOptions  <a id=\\"aws-cdk-core-sizeconversionoptions\\"></a>


Options for how to convert time to a different unit.



Name | Type | Description 
-----|------|-------------
**rounding**? | <code>[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)</code> | How conversions should behave when it encounters a non-integer result.<br/>__*Default*__: SizeRoundingBehavior.FAIL
",
  "@aws-cdk_core.SizeRoundingBehavior.md": "# enum SizeRoundingBehavior  <a id=\\"aws-cdk-core-sizeroundingbehavior\\"></a>

Rouding behaviour when converting between units of \`Size\`.

Name | Description
-----|-----
**FAIL** |Fail the conversion if the result is not an integer.
**FLOOR** |If the result is not an integer, round it to the closest integer less than the result.
**NONE** |Don't round.",
  "@aws-cdk_core.Stack.md": "# class Stack  <a id=\\"aws-cdk-core-stack\\"></a>

A root construct which represents a single CloudFormation stack.

__Implements__: [IConstruct](./constructs.IConstruct.md), [IConstruct](./@aws-cdk_core.IConstruct.md), [IConstruct](./constructs.IConstruct.md), [IDependable](./@aws-cdk_core.IDependable.md), [ITaggable](./@aws-cdk_core.ITaggable.md)
__Extends__: [Construct](./@aws-cdk_core.Construct.md)

## Initializer


Creates a new stack.

\`\`\`ts
new Stack(scope?: Construct, id?: string, props?: StackProps)
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  Parent of this stack, usually a Program instance.
* **id** (<code>string</code>)  The construct ID of this stack.
* **props** (<code>[StackProps](./@aws-cdk_core.StackProps.md)</code>)  Stack properties.
  * **description** (<code>string</code>)  A description of the stack. __*Default*__: No description.
  * **env** (<code>[Environment](./@aws-cdk_core.Environment.md)</code>)  The AWS environment (account/region) where this stack will be deployed. __*Default*__: The \`default-account\` and \`default-region\` context parameters will be used. If they are undefined, it will not be possible to deploy the stack.
  * **stackName** (<code>string</code>)  Name to deploy the stack with. __*Default*__: Derived from construct path.
  * **tags** (<code>Map<string, string></code>)  Stack tags that will be applied to all the taggable resources and the stack itself. __*Default*__: {}



## Properties


Name | Type | Description 
-----|------|-------------
**account** | <code>string</code> | The AWS account into which this stack will be deployed.
**artifactId** | <code>string</code> | The ID of the cloud assembly artifact for this stack.
**availabilityZones** | <code>Array<string></code> | Returnst the list of AZs that are availability in the AWS environment (account/region) associated with this stack.
**dependencies** | <code>Array<[Stack](./@aws-cdk_core.Stack.md)></code> | Return the stacks this stack depends on.
**environment** | <code>string</code> | The environment coordinates in which this stack is deployed.
**nested** | <code>boolean</code> | Indicates if this is a nested stack, in which case \`parentStack\` will include a reference to it's parent.
**notificationArns** | <code>Array<string></code> | Returns the list of notification Amazon Resource Names (ARNs) for the current stack.
**partition** | <code>string</code> | The partition in which this stack is defined.
**region** | <code>string</code> | The AWS region into which this stack will be deployed (e.g. \`us-west-2\`).
**stackId** | <code>string</code> | The ID of the stack.
**stackName** | <code>string</code> | The concrete CloudFormation physical stack name.
**tags** | <code>[TagManager](./@aws-cdk_core.TagManager.md)</code> | Tags to be applied to the stack.
**templateFile** | <code>string</code> | The name of the CloudFormation template file emitted to the output directory during synthesis.
**templateOptions** | <code>[ITemplateOptions](./@aws-cdk_core.ITemplateOptions.md)</code> | Options for CloudFormation template (like version, transform, description).
**urlSuffix** | <code>string</code> | The Amazon domain suffix for the region in which this stack is defined.
**nestedStackParent**? | <code>[Stack](./@aws-cdk_core.Stack.md)</code> | If this is a nested stack, returns it's parent stack.<br/>__*Optional*__
**nestedStackResource**?🔹 | <code>[CfnResource](./@aws-cdk_core.CfnResource.md)</code> | If this is a nested stack, this represents its \`AWS::CloudFormation::Stack\` resource.<br/>__*Optional*__
**parentStack**?⚠️ | <code>[Stack](./@aws-cdk_core.Stack.md)</code> | Returns the parent of a nested stack.<br/>__*Optional*__

## Methods


### addDependency(target, reason?) <a id=\\"aws-cdk-core-stack-adddependency\\"></a>

Add a dependency between this stack and another stack.

This can be used to define dependencies between any two stacks within an
app, and also supports nested stacks.

\`\`\`ts
addDependency(target: Stack, reason?: string): void
\`\`\`

* **target** (<code>[Stack](./@aws-cdk_core.Stack.md)</code>)  *No description*
* **reason** (<code>string</code>)  *No description*




### addDockerImageAsset(asset) <a id=\\"aws-cdk-core-stack-adddockerimageasset\\"></a>



\`\`\`ts
addDockerImageAsset(asset: DockerImageAssetSource): DockerImageAssetLocation
\`\`\`

* **asset** (<code>[DockerImageAssetSource](./@aws-cdk_core.DockerImageAssetSource.md)</code>)  *No description*
  * **directoryName** (<code>string</code>)  The directory where the Dockerfile is stored, must be relative to the cloud assembly root. 
  * **sourceHash** (<code>string</code>)  The hash of the contents of the docker build context. 
  * **dockerBuildArgs** (<code>Map<string, string></code>)  Build args to pass to the \`docker build\` command. __*Default*__: no build args are passed
  * **dockerBuildTarget** (<code>string</code>)  Docker target to build to. __*Default*__: no target
  * **dockerFile** (<code>string</code>)  Path to the Dockerfile (relative to the directory). __*Default*__: no file
  * **repositoryName** (<code>string</code>)  ECR repository name. __*Default*__: automatically derived from the asset's ID.

__Returns__:
* <code>[DockerImageAssetLocation](./@aws-cdk_core.DockerImageAssetLocation.md)</code>

### addFileAsset(asset) <a id=\\"aws-cdk-core-stack-addfileasset\\"></a>



\`\`\`ts
addFileAsset(asset: FileAssetSource): FileAssetLocation
\`\`\`

* **asset** (<code>[FileAssetSource](./@aws-cdk_core.FileAssetSource.md)</code>)  *No description*
  * **fileName** (<code>string</code>)  The path, relative to the root of the cloud assembly, in which this asset source resides. 
  * **packaging** (<code>[FileAssetPackaging](./@aws-cdk_core.FileAssetPackaging.md)</code>)  Which type of packaging to perform. 
  * **sourceHash** (<code>string</code>)  A hash on the content source. 

__Returns__:
* <code>[FileAssetLocation](./@aws-cdk_core.FileAssetLocation.md)</code>

### addTransform(transform) <a id=\\"aws-cdk-core-stack-addtransform\\"></a>

Add a Transform to this stack. A Transform is a macro that AWS CloudFormation uses to process your template.

Duplicate values are removed when stack is synthesized.

\`\`\`ts
addTransform(transform: string): void
\`\`\`

* **transform** (<code>string</code>)  The transform to add.




### formatArn(components) <a id=\\"aws-cdk-core-stack-formatarn\\"></a>

Creates an ARN from components.

If \`partition\`, \`region\` or \`account\` are not specified, the stack's
partition, region and account will be used.

If any component is the empty string, an empty string will be inserted
into the generated ARN at the location that component corresponds to.

The ARN will be formatted as follows:

   arn:{partition}:{service}:{region}:{account}:{resource}{sep}}{resource-name}

The required ARN pieces that are omitted will be taken from the stack that
the 'scope' is attached to. If all ARN pieces are supplied, the supplied scope
can be 'undefined'.

\`\`\`ts
formatArn(components: ArnComponents): string
\`\`\`

* **components** (<code>[ArnComponents](./@aws-cdk_core.ArnComponents.md)</code>)  *No description*
  * **resource** (<code>string</code>)  Resource type (e.g. \\"table\\", \\"autoScalingGroup\\", \\"certificate\\"). For some resource types, e.g. S3 buckets, this field defines the bucket name. 
  * **service** (<code>string</code>)  The service namespace that identifies the AWS product (for example, 's3', 'iam', 'codepipline'). 
  * **account** (<code>string</code>)  The ID of the AWS account that owns the resource, without the hyphens. __*Default*__: The account the stack is deployed to.
  * **partition** (<code>string</code>)  The partition that the resource is in. __*Default*__: The AWS partition the stack is deployed to.
  * **region** (<code>string</code>)  The region the resource resides in. __*Default*__: The region the stack is deployed to.
  * **resourceName** (<code>string</code>)  Resource name or path within the resource (i.e. S3 bucket object key) or a wildcard such as \`\`\\"*\\"\`\`. This is service-dependent. __*Optional*__
  * **sep** (<code>string</code>)  Separator between resource type and the resource. __*Default*__: '/'

__Returns__:
* <code>string</code>

### getLogicalId(element) <a id=\\"aws-cdk-core-stack-getlogicalid\\"></a>

Allocates a stack-unique CloudFormation-compatible logical identity for a specific resource.

This method is called when a \`CfnElement\` is created and used to render the
initial logical identity of resources. Logical ID renames are applied at
this stage.

This method uses the protected method \`allocateLogicalId\` to render the
logical ID for an element. To modify the naming scheme, extend the \`Stack\`
class and override this method.

\`\`\`ts
getLogicalId(element: CfnElement): string
\`\`\`

* **element** (<code>[CfnElement](./@aws-cdk_core.CfnElement.md)</code>)  The CloudFormation element for which a logical identity is needed.

__Returns__:
* <code>string</code>

### parseArn(arn, sepIfToken?, hasName?) <a id=\\"aws-cdk-core-stack-parsearn\\"></a>

Given an ARN, parses it and returns components.

If the ARN is a concrete string, it will be parsed and validated. The
separator (\`sep\`) will be set to '/' if the 6th component includes a '/',
in which case, \`resource\` will be set to the value before the '/' and
\`resourceName\` will be the rest. In case there is no '/', \`resource\` will
be set to the 6th components and \`resourceName\` will be set to the rest
of the string.

If the ARN includes tokens (or is a token), the ARN cannot be validated,
since we don't have the actual value yet at the time of this function
call. You will have to know the separator and the type of ARN. The
resulting \`ArnComponents\` object will contain tokens for the
subexpressions of the ARN, not string literals. In this case this
function cannot properly parse the complete final resourceName (path) out
of ARNs that use '/' to both separate the 'resource' from the
'resourceName' AND to subdivide the resourceName further. For example, in
S3 ARNs:

    arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png

After parsing the resourceName will not contain
'path/to/exampleobject.png' but simply 'path'. This is a limitation
because there is no slicing functionality in CloudFormation templates.

\`\`\`ts
parseArn(arn: string, sepIfToken?: string, hasName?: boolean): ArnComponents
\`\`\`

* **arn** (<code>string</code>)  The ARN string to parse.
* **sepIfToken** (<code>string</code>)  The separator used to separate resource from resourceName.
* **hasName** (<code>boolean</code>)  Whether there is a name component in the ARN at all.

__Returns__:
* <code>[ArnComponents](./@aws-cdk_core.ArnComponents.md)</code>

### renameLogicalId(oldId, newId) <a id=\\"aws-cdk-core-stack-renamelogicalid\\"></a>

Rename a generated logical identities.

To modify the naming scheme strategy, extend the \`Stack\` class and
override the \`createNamingScheme\` method.

\`\`\`ts
renameLogicalId(oldId: string, newId: string): void
\`\`\`

* **oldId** (<code>string</code>)  *No description*
* **newId** (<code>string</code>)  *No description*




### reportMissingContext(report) <a id=\\"aws-cdk-core-stack-reportmissingcontext\\"></a>

Indicate that a context key was expected.

Contains instructions which will be emitted into the cloud assembly on how
the key should be supplied.

\`\`\`ts
reportMissingContext(report: MissingContext): void
\`\`\`

* **report** (<code>[MissingContext](./@aws-cdk_cx-api.MissingContext.md)</code>)  The set of parameters needed to obtain the context.
  * **key** (<code>string</code>)  The missing context key. 
  * **props** (<code>Map<string, any></code>)  A set of provider-specific options. 
  * **provider** (<code>string</code>)  The provider from which we expect this context key to be obtained. 




### resolve(obj) <a id=\\"aws-cdk-core-stack-resolve\\"></a>

Resolve a tokenized value in the context of the current stack.

\`\`\`ts
resolve(obj: any): any
\`\`\`

* **obj** (<code>any</code>)  *No description*

__Returns__:
* <code>any</code>

### toJsonString(obj, space?) <a id=\\"aws-cdk-core-stack-tojsonstring\\"></a>

Convert an object, potentially containing tokens, to a JSON string.

\`\`\`ts
toJsonString(obj: any, space?: number): string
\`\`\`

* **obj** (<code>any</code>)  *No description*
* **space** (<code>number</code>)  *No description*

__Returns__:
* <code>string</code>

### protected allocateLogicalId(cfnElement) <a id=\\"aws-cdk-core-stack-allocatelogicalid\\"></a>

Returns the naming scheme used to allocate logical IDs.

By default, uses
the \`HashedAddressingScheme\` but this method can be overridden to customize
this behavior.

In order to make sure logical IDs are unique and stable, we hash the resource
construct tree path (i.e. toplevel/secondlevel/.../myresource) and add it as
a suffix to the path components joined without a separator (CloudFormation
IDs only allow alphanumeric characters).

The result will be:

   <path.join('')><md5(path.join('/')>
     \\"human\\"      \\"hash\\"

If the \\"human\\" part of the ID exceeds 240 characters, we simply trim it so
the total ID doesn't exceed CloudFormation's 255 character limit.

We only take 8 characters from the md5 hash (0.000005 chance of collision).

Special cases:

- If the path only contains a single component (i.e. it's a top-level
   resource), we won't add the hash to it. The hash is not needed for
   disamiguation and also, it allows for a more straightforward migration an
   existing CloudFormation template to a CDK stack without logical ID changes
   (or renames).
- For aesthetic reasons, if the last components of the path are the same
   (i.e. \`L1/L2/Pipeline/Pipeline\`), they will be de-duplicated to make the
   resulting human portion of the ID more pleasing: \`L1L2Pipeline<HASH>\`
   instead of \`L1L2PipelinePipeline<HASH>\`
- If a component is named \\"Default\\" it will be omitted from the path. This
   allows refactoring higher level abstractions around constructs without affecting
   the IDs of already deployed resources.
- If a component is named \\"Resource\\" it will be omitted from the user-visible
   path, but included in the hash. This reduces visual noise in the human readable
   part of the identifier.

\`\`\`ts
protected allocateLogicalId(cfnElement: CfnElement): string
\`\`\`

* **cfnElement** (<code>[CfnElement](./@aws-cdk_core.CfnElement.md)</code>)  The element for which the logical ID is allocated.

__Returns__:
* <code>string</code>

### protected prepare() <a id=\\"aws-cdk-core-stack-prepare\\"></a>

Prepare stack.

Find all CloudFormation references and tell them we're consuming them.

Find all dependencies as well and add the appropriate DependsOn fields.

\`\`\`ts
protected prepare(): void
\`\`\`





### protected prepareCrossReference(_sourceStack, reference)⚠️ <a id=\\"aws-cdk-core-stack-preparecrossreference\\"></a>

Deprecated.

\`\`\`ts
protected prepareCrossReference(_sourceStack: Stack, reference: Reference): IResolvable
\`\`\`

* **_sourceStack** (<code>[Stack](./@aws-cdk_core.Stack.md)</code>)  *No description*
* **reference** (<code>[Reference](./@aws-cdk_core.Reference.md)</code>)  *No description*

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### protected synthesize(session) <a id=\\"aws-cdk-core-stack-synthesize\\"></a>

Allows this construct to emit artifacts into the cloud assembly during synthesis.

This method is usually implemented by framework-level constructs such as \`Stack\` and \`Asset\`
as they participate in synthesizing the cloud assembly.

\`\`\`ts
protected synthesize(session: ISynthesisSession): void
\`\`\`

* **session** (<code>[ISynthesisSession](./@aws-cdk_core.ISynthesisSession.md)</code>)  *No description*




### *static* isStack(x) <a id=\\"aws-cdk-core-stack-isstack\\"></a>

Return whether the given object is a Stack.

We do attribute detection since we can't reliably use 'instanceof'.

\`\`\`ts
static isStack(x: any): boolean
\`\`\`

* **x** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>

### *static* of(construct) <a id=\\"aws-cdk-core-stack-of\\"></a>

Looks up the first stack scope in which \`construct\` is defined.

Fails if there is no stack up the tree.

\`\`\`ts
static of(construct: IConstruct): Stack
\`\`\`

* **construct** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  The construct to start the search from.

__Returns__:
* <code>[Stack](./@aws-cdk_core.Stack.md)</code>
",
  "@aws-cdk_core.StackProps.md": "# struct StackProps  <a id=\\"aws-cdk-core-stackprops\\"></a>






Name | Type | Description 
-----|------|-------------
**description**? | <code>string</code> | A description of the stack.<br/>__*Default*__: No description.
**env**? | <code>[Environment](./@aws-cdk_core.Environment.md)</code> | The AWS environment (account/region) where this stack will be deployed.<br/>__*Default*__: The \`default-account\` and \`default-region\` context parameters will be used. If they are undefined, it will not be possible to deploy the stack.
**stackName**? | <code>string</code> | Name to deploy the stack with.<br/>__*Default*__: Derived from construct path.
**tags**? | <code>Map<string, string></code> | Stack tags that will be applied to all the taggable resources and the stack itself.<br/>__*Default*__: {}
",
  "@aws-cdk_core.StringConcat.md": "# class StringConcat  <a id=\\"aws-cdk-core-stringconcat\\"></a>

Converts all fragments to strings and concats those.

Drops 'undefined's.

__Implements__: [IFragmentConcatenator](./@aws-cdk_core.IFragmentConcatenator.md)

## Initializer




\`\`\`ts
new StringConcat()
\`\`\`



## Methods


### join(left, right) <a id=\\"aws-cdk-core-stringconcat-join\\"></a>

Join the fragment on the left and on the right.

\`\`\`ts
join(left: any, right: any): any
\`\`\`

* **left** (<code>any</code>)  *No description*
* **right** (<code>any</code>)  *No description*

__Returns__:
* <code>any</code>
",
  "@aws-cdk_core.SynthesisOptions.md": "# struct SynthesisOptions  <a id=\\"aws-cdk-core-synthesisoptions\\"></a>


Options for synthesis.



Name | Type | Description 
-----|------|-------------
**outdir**? | <code>string</code> | The output directory into which to synthesize the cloud assembly.<br/>__*Default*__: creates a temporary directory
**runtimeInfo**?🔹 | <code>[RuntimeInfo](./@aws-cdk_cx-api.RuntimeInfo.md)</code> | Include the specified runtime information (module versions) in manifest.<br/>__*Default*__: if this option is not specified, runtime info will not be included
**skipValidation**? | <code>boolean</code> | Whether synthesis should skip the validation phase.<br/>__*Default*__: false
",
  "@aws-cdk_core.Tag.md": "# class Tag  <a id=\\"aws-cdk-core-tag\\"></a>

The Tag Aspect will handle adding a tag to this node and cascading tags to children.

__Implements__: [IAspect](./@aws-cdk_core.IAspect.md)

## Initializer




\`\`\`ts
new Tag(key: string, value: string, props?: TagProps)
\`\`\`

* **key** (<code>string</code>)  *No description*
* **value** (<code>string</code>)  *No description*
* **props** (<code>[TagProps](./@aws-cdk_core.TagProps.md)</code>)  *No description*
  * **applyToLaunchedInstances** (<code>boolean</code>)  Whether the tag should be applied to instances in an AutoScalingGroup. __*Default*__: true
  * **excludeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will not receive this tag. __*Default*__: []
  * **includeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will receive this tag. __*Default*__: []
  * **priority** (<code>number</code>)  Priority of the tag operation. __*Default*__: Default priorities:  - 100 for {@link SetTag} - 200 for {@link RemoveTag} - 50 for tags added directly to CloudFormation resources



## Properties


Name | Type | Description 
-----|------|-------------
**key** | <code>string</code> | The string key for the tag.
**props** | <code>[TagProps](./@aws-cdk_core.TagProps.md)</code> | <span></span>
**value** | <code>string</code> | The string value of the tag.

## Methods


### visit(construct) <a id=\\"aws-cdk-core-tag-visit\\"></a>

All aspects can visit an IConstruct.

\`\`\`ts
visit(construct: IConstruct): void
\`\`\`

* **construct** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  *No description*




### protected applyTag(resource) <a id=\\"aws-cdk-core-tag-applytag\\"></a>



\`\`\`ts
protected applyTag(resource: ITaggable): void
\`\`\`

* **resource** (<code>[ITaggable](./@aws-cdk_core.ITaggable.md)</code>)  *No description*




### *static* add(scope, key, value, props?) <a id=\\"aws-cdk-core-tag-add\\"></a>

add tags to the node of a construct and all its the taggable children.

\`\`\`ts
static add(scope: Construct, key: string, value: string, props?: TagProps): void
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **key** (<code>string</code>)  *No description*
* **value** (<code>string</code>)  *No description*
* **props** (<code>[TagProps](./@aws-cdk_core.TagProps.md)</code>)  *No description*
  * **applyToLaunchedInstances** (<code>boolean</code>)  Whether the tag should be applied to instances in an AutoScalingGroup. __*Default*__: true
  * **excludeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will not receive this tag. __*Default*__: []
  * **includeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will receive this tag. __*Default*__: []
  * **priority** (<code>number</code>)  Priority of the tag operation. __*Default*__: Default priorities:  - 100 for {@link SetTag} - 200 for {@link RemoveTag} - 50 for tags added directly to CloudFormation resources




### *static* remove(scope, key, props?) <a id=\\"aws-cdk-core-tag-remove\\"></a>

remove tags to the node of a construct and all its the taggable children.

\`\`\`ts
static remove(scope: Construct, key: string, props?: TagProps): void
\`\`\`

* **scope** (<code>[Construct](./@aws-cdk_core.Construct.md)</code>)  *No description*
* **key** (<code>string</code>)  *No description*
* **props** (<code>[TagProps](./@aws-cdk_core.TagProps.md)</code>)  *No description*
  * **applyToLaunchedInstances** (<code>boolean</code>)  Whether the tag should be applied to instances in an AutoScalingGroup. __*Default*__: true
  * **excludeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will not receive this tag. __*Default*__: []
  * **includeResourceTypes** (<code>Array<string></code>)  An array of Resource Types that will receive this tag. __*Default*__: []
  * **priority** (<code>number</code>)  Priority of the tag operation. __*Default*__: Default priorities:  - 100 for {@link SetTag} - 200 for {@link RemoveTag} - 50 for tags added directly to CloudFormation resources



",
  "@aws-cdk_core.TagManager.md": "# class TagManager  <a id=\\"aws-cdk-core-tagmanager\\"></a>

TagManager facilitates a common implementation of tagging for Constructs.


## Initializer




\`\`\`ts
new TagManager(tagType: TagType, resourceTypeName: string, tagStructure?: any, options?: TagManagerOptions)
\`\`\`

* **tagType** (<code>[TagType](./@aws-cdk_core.TagType.md)</code>)  *No description*
* **resourceTypeName** (<code>string</code>)  *No description*
* **tagStructure** (<code>any</code>)  *No description*
* **options** (<code>[TagManagerOptions](./@aws-cdk_core.TagManagerOptions.md)</code>)  *No description*
  * **tagPropertyName** (<code>string</code>)  The name of the property in CloudFormation for these tags. __*Default*__: \\"tags\\"



## Properties


Name | Type | Description 
-----|------|-------------
**tagPropertyName** | <code>string</code> | The property name for tag values.

## Methods


### applyTagAspectHere(include?, exclude?) <a id=\\"aws-cdk-core-tagmanager-applytagaspecthere\\"></a>

Determine if the aspect applies here.

Looks at the include and exclude resourceTypeName arrays to determine if
the aspect applies here

\`\`\`ts
applyTagAspectHere(include?: Array<string>, exclude?: Array<string>): boolean
\`\`\`

* **include** (<code>Array<string></code>)  *No description*
* **exclude** (<code>Array<string></code>)  *No description*

__Returns__:
* <code>boolean</code>

### hasTags() <a id=\\"aws-cdk-core-tagmanager-hastags\\"></a>

Returns true if there are any tags defined.

\`\`\`ts
hasTags(): boolean
\`\`\`


__Returns__:
* <code>boolean</code>

### removeTag(key, priority) <a id=\\"aws-cdk-core-tagmanager-removetag\\"></a>

Removes the specified tag from the array if it exists.

\`\`\`ts
removeTag(key: string, priority: number): void
\`\`\`

* **key** (<code>string</code>)  The tag to remove.
* **priority** (<code>number</code>)  The priority of the remove operation.




### renderTags() <a id=\\"aws-cdk-core-tagmanager-rendertags\\"></a>

Renders tags into the proper format based on TagType.

\`\`\`ts
renderTags(): any
\`\`\`


__Returns__:
* <code>any</code>

### setTag(key, value, priority?, applyToLaunchedInstances?) <a id=\\"aws-cdk-core-tagmanager-settag\\"></a>

Adds the specified tag to the array of tags.

\`\`\`ts
setTag(key: string, value: string, priority?: number, applyToLaunchedInstances?: boolean): void
\`\`\`

* **key** (<code>string</code>)  *No description*
* **value** (<code>string</code>)  *No description*
* **priority** (<code>number</code>)  *No description*
* **applyToLaunchedInstances** (<code>boolean</code>)  *No description*




### *static* isTaggable(construct) <a id=\\"aws-cdk-core-tagmanager-istaggable\\"></a>

Check whether the given construct is Taggable.

\`\`\`ts
static isTaggable(construct: any): boolean
\`\`\`

* **construct** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.TagManagerOptions.md": "# struct TagManagerOptions  <a id=\\"aws-cdk-core-tagmanageroptions\\"></a>


Options to configure TagManager behavior.



Name | Type | Description 
-----|------|-------------
**tagPropertyName**? | <code>string</code> | The name of the property in CloudFormation for these tags.<br/>__*Default*__: \\"tags\\"
",
  "@aws-cdk_core.TagProps.md": "# struct TagProps  <a id=\\"aws-cdk-core-tagprops\\"></a>


Properties for a tag.



Name | Type | Description 
-----|------|-------------
**applyToLaunchedInstances**? | <code>boolean</code> | Whether the tag should be applied to instances in an AutoScalingGroup.<br/>__*Default*__: true
**excludeResourceTypes**? | <code>Array<string></code> | An array of Resource Types that will not receive this tag.<br/>__*Default*__: []
**includeResourceTypes**? | <code>Array<string></code> | An array of Resource Types that will receive this tag.<br/>__*Default*__: []
**priority**? | <code>number</code> | Priority of the tag operation.<br/>__*Default*__: Default priorities:  - 100 for {@link SetTag} - 200 for {@link RemoveTag} - 50 for tags added directly to CloudFormation resources
",
  "@aws-cdk_core.TagType.md": "# enum TagType  <a id=\\"aws-cdk-core-tagtype\\"></a>



Name | Description
-----|-----
**STANDARD** |
**AUTOSCALING_GROUP** |
**MAP** |
**KEY_VALUE** |
**NOT_TAGGABLE** |",
  "@aws-cdk_core.TimeConversionOptions.md": "# struct TimeConversionOptions  <a id=\\"aws-cdk-core-timeconversionoptions\\"></a>


Options for how to convert time to a different unit.



Name | Type | Description 
-----|------|-------------
**integral**? | <code>boolean</code> | If \`true\`, conversions into a larger time unit (e.g. \`Seconds\` to \`Minutes\`) will fail if the result is not an integer.<br/>__*Default*__: true
",
  "@aws-cdk_core.Token.md": "# class Token  <a id=\\"aws-cdk-core-token\\"></a>

Represents a special or lazily-evaluated value.

Can be used to delay evaluation of a certain value in case, for example,
that it requires some context or late-bound data. Can also be used to
mark values that need special processing at document rendering time.

Tokens can be embedded into strings while retaining their original
semantics.


## Methods


### *static* asAny(value) <a id=\\"aws-cdk-core-token-asany\\"></a>

Return a resolvable representation of the given value.

\`\`\`ts
static asAny(value: any): IResolvable
\`\`\`

* **value** (<code>any</code>)  *No description*

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### *static* asList(value, options?) <a id=\\"aws-cdk-core-token-aslist\\"></a>

Return a reversible list representation of this token.

\`\`\`ts
static asList(value: any, options?: EncodingOptions): Array<string>
\`\`\`

* **value** (<code>any</code>)  *No description*
* **options** (<code>[EncodingOptions](./@aws-cdk_core.EncodingOptions.md)</code>)  *No description*
  * **displayHint** (<code>string</code>)  A hint for the Token's purpose when stringifying it. __*Optional*__

__Returns__:
* <code>Array<string></code>

### *static* asNumber(value) <a id=\\"aws-cdk-core-token-asnumber\\"></a>

Return a reversible number representation of this token.

\`\`\`ts
static asNumber(value: any): number
\`\`\`

* **value** (<code>any</code>)  *No description*

__Returns__:
* <code>number</code>

### *static* asString(value, options?) <a id=\\"aws-cdk-core-token-asstring\\"></a>

Return a reversible string representation of this token.

If the Token is initialized with a literal, the stringified value of the
literal is returned. Otherwise, a special quoted string representation
of the Token is returned that can be embedded into other strings.

Strings with quoted Tokens in them can be restored back into
complex values with the Tokens restored by calling \`resolve()\`
on the string.

\`\`\`ts
static asString(value: any, options?: EncodingOptions): string
\`\`\`

* **value** (<code>any</code>)  *No description*
* **options** (<code>[EncodingOptions](./@aws-cdk_core.EncodingOptions.md)</code>)  *No description*
  * **displayHint** (<code>string</code>)  A hint for the Token's purpose when stringifying it. __*Optional*__

__Returns__:
* <code>string</code>

### *static* isUnresolved(obj) <a id=\\"aws-cdk-core-token-isunresolved\\"></a>

Returns true if obj represents an unresolved value.

One of these must be true:

- \`obj\` is an IResolvable
- \`obj\` is a string containing at least one encoded \`IResolvable\`
- \`obj\` is either an encoded number or list

This does NOT recurse into lists or objects to see if they
containing resolvables.

\`\`\`ts
static isUnresolved(obj: any): boolean
\`\`\`

* **obj** (<code>any</code>)  The object to test.

__Returns__:
* <code>boolean</code>
",
  "@aws-cdk_core.Tokenization.md": "# class Tokenization  <a id=\\"aws-cdk-core-tokenization\\"></a>

Less oft-needed functions to manipulate Tokens.


## Methods


### *static* isResolvable(obj) <a id=\\"aws-cdk-core-tokenization-isresolvable\\"></a>

Return whether the given object is an IResolvable object.

This is different from Token.isUnresolved() which will also check for
encoded Tokens, whereas this method will only do a type check on the given
object.

\`\`\`ts
static isResolvable(obj: any): boolean
\`\`\`

* **obj** (<code>any</code>)  *No description*

__Returns__:
* <code>boolean</code>

### *static* resolve(obj, options) <a id=\\"aws-cdk-core-tokenization-resolve\\"></a>

Resolves an object by evaluating all tokens and removing any undefined or empty objects or arrays.

Values can only be primitives, arrays or tokens. Other objects (i.e. with methods) will be rejected.

\`\`\`ts
static resolve(obj: any, options: ResolveOptions): any
\`\`\`

* **obj** (<code>any</code>)  The object to resolve.
* **options** (<code>[ResolveOptions](./@aws-cdk_core.ResolveOptions.md)</code>)  Prefix key path components for diagnostics.
  * **resolver** (<code>[ITokenResolver](./@aws-cdk_core.ITokenResolver.md)</code>)  The resolver to apply to any resolvable tokens found. 
  * **scope** (<code>[IConstruct](./@aws-cdk_core.IConstruct.md)</code>)  The scope from which resolution is performed. 
  * **preparing** (<code>boolean</code>)  Whether the resolution is being executed during the prepare phase or not. __*Default*__: false

__Returns__:
* <code>any</code>

### *static* reverseList(l) <a id=\\"aws-cdk-core-tokenization-reverselist\\"></a>

Un-encode a Tokenized value from a list.

\`\`\`ts
static reverseList(l: Array<string>): IResolvable
\`\`\`

* **l** (<code>Array<string></code>)  *No description*

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### *static* reverseNumber(n) <a id=\\"aws-cdk-core-tokenization-reversenumber\\"></a>

Un-encode a Tokenized value from a number.

\`\`\`ts
static reverseNumber(n: number): IResolvable
\`\`\`

* **n** (<code>number</code>)  *No description*

__Returns__:
* <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>

### *static* reverseString(s) <a id=\\"aws-cdk-core-tokenization-reversestring\\"></a>

Un-encode a string potentially containing encoded tokens.

\`\`\`ts
static reverseString(s: string): TokenizedStringFragments
\`\`\`

* **s** (<code>string</code>)  *No description*

__Returns__:
* <code>[TokenizedStringFragments](./@aws-cdk_core.TokenizedStringFragments.md)</code>

### *static* stringifyNumber(x) <a id=\\"aws-cdk-core-tokenization-stringifynumber\\"></a>

Stringify a number directly or lazily if it's a Token.

If it is an object (i.e., { Ref: 'SomeLogicalId' }), return it as-is.

\`\`\`ts
static stringifyNumber(x: number): string
\`\`\`

* **x** (<code>number</code>)  *No description*

__Returns__:
* <code>string</code>
",
  "@aws-cdk_core.TokenizedStringFragments.md": "# class TokenizedStringFragments  <a id=\\"aws-cdk-core-tokenizedstringfragments\\"></a>

Fragments of a concatenated string containing stringified Tokens.


## Initializer




\`\`\`ts
new TokenizedStringFragments()
\`\`\`




## Properties


Name | Type | Description 
-----|------|-------------
**firstValue** | <code>any</code> | <span></span>
**length** | <code>number</code> | <span></span>
**tokens** | <code>Array<[IResolvable](./@aws-cdk_core.IResolvable.md)></code> | Return all Tokens from this string.
**firstToken**? | <code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code> | __*Optional*__

## Methods


### addIntrinsic(value) <a id=\\"aws-cdk-core-tokenizedstringfragments-addintrinsic\\"></a>



\`\`\`ts
addIntrinsic(value: any): void
\`\`\`

* **value** (<code>any</code>)  *No description*




### addLiteral(lit) <a id=\\"aws-cdk-core-tokenizedstringfragments-addliteral\\"></a>



\`\`\`ts
addLiteral(lit: any): void
\`\`\`

* **lit** (<code>any</code>)  *No description*




### addToken(token) <a id=\\"aws-cdk-core-tokenizedstringfragments-addtoken\\"></a>



\`\`\`ts
addToken(token: IResolvable): void
\`\`\`

* **token** (<code>[IResolvable](./@aws-cdk_core.IResolvable.md)</code>)  *No description*




### join(concat) <a id=\\"aws-cdk-core-tokenizedstringfragments-join\\"></a>

Combine the string fragments using the given joiner.

If there are any

\`\`\`ts
join(concat: IFragmentConcatenator): any
\`\`\`

* **concat** (<code>[IFragmentConcatenator](./@aws-cdk_core.IFragmentConcatenator.md)</code>)  *No description*

__Returns__:
* <code>any</code>

### mapTokens(mapper) <a id=\\"aws-cdk-core-tokenizedstringfragments-maptokens\\"></a>

Apply a transformation function to all tokens in the string.

\`\`\`ts
mapTokens(mapper: ITokenMapper): TokenizedStringFragments
\`\`\`

* **mapper** (<code>[ITokenMapper](./@aws-cdk_core.ITokenMapper.md)</code>)  *No description*

__Returns__:
* <code>[TokenizedStringFragments](./@aws-cdk_core.TokenizedStringFragments.md)</code>
",
  "@aws-cdk_core.TreeInspector.md": "# class TreeInspector  <a id=\\"aws-cdk-core-treeinspector\\"></a>

Inspector that maintains an attribute bag.


## Initializer




\`\`\`ts
new TreeInspector()
\`\`\`




## Properties


Name | Type | Description 
-----|------|-------------
**attributes** | <code>Map<string, any></code> | Represents the bag of attributes as key-value pairs.

## Methods


### addAttribute(key, value) <a id=\\"aws-cdk-core-treeinspector-addattribute\\"></a>

Adds attribute to bag.

Keys should be added by convention to prevent conflicts
i.e. L1 constructs will contain attributes with keys prefixed with aws:cdk:cloudformation

\`\`\`ts
addAttribute(key: string, value: any): void
\`\`\`

* **key** (<code>string</code>)  - key for metadata.
* **value** (<code>any</code>)  - value of metadata.



",
  "@aws-cdk_core.ValidationError.md": "# struct ValidationError  <a id=\\"aws-cdk-core-validationerror\\"></a>


An error returned during the validation phase.



Name | Type | Description 
-----|------|-------------
**message** | <code>string</code> | The error message.
**source** | <code>[Construct](./@aws-cdk_core.Construct.md)</code> | The construct which emitted the error.
",
  "@aws-cdk_core.ValidationResult.md": "# class ValidationResult  <a id=\\"aws-cdk-core-validationresult\\"></a>

Representation of validation results.

Models a tree of validation errors so that we have as much information as possible
about the failure that occurred.


## Initializer




\`\`\`ts
new ValidationResult(errorMessage?: string, results?: ValidationResults)
\`\`\`

* **errorMessage** (<code>string</code>)  *No description*
* **results** (<code>[ValidationResults](./@aws-cdk_core.ValidationResults.md)</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**errorMessage** | <code>string</code> | <span></span>
**isSuccess** | <code>boolean</code> | <span></span>
**results** | <code>[ValidationResults](./@aws-cdk_core.ValidationResults.md)</code> | <span></span>

## Methods


### assertSuccess() <a id=\\"aws-cdk-core-validationresult-assertsuccess\\"></a>

Turn a failed validation into an exception.

\`\`\`ts
assertSuccess(): void
\`\`\`





### errorTree() <a id=\\"aws-cdk-core-validationresult-errortree\\"></a>

Return a string rendering of the tree of validation failures.

\`\`\`ts
errorTree(): string
\`\`\`


__Returns__:
* <code>string</code>

### prefix(message) <a id=\\"aws-cdk-core-validationresult-prefix\\"></a>

Wrap this result with an error message, if it concerns an error.

\`\`\`ts
prefix(message: string): ValidationResult
\`\`\`

* **message** (<code>string</code>)  *No description*

__Returns__:
* <code>[ValidationResult](./@aws-cdk_core.ValidationResult.md)</code>
",
  "@aws-cdk_core.ValidationResults.md": "# class ValidationResults  <a id=\\"aws-cdk-core-validationresults\\"></a>

A collection of validation results.


## Initializer




\`\`\`ts
new ValidationResults(results?: Array<ValidationResult>)
\`\`\`

* **results** (<code>Array<[ValidationResult](./@aws-cdk_core.ValidationResult.md)></code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**isSuccess** | <code>boolean</code> | <span></span>
**results** | <code>Array<[ValidationResult](./@aws-cdk_core.ValidationResult.md)></code> | <span></span>

## Methods


### collect(result) <a id=\\"aws-cdk-core-validationresults-collect\\"></a>



\`\`\`ts
collect(result: ValidationResult): void
\`\`\`

* **result** (<code>[ValidationResult](./@aws-cdk_core.ValidationResult.md)</code>)  *No description*




### errorTreeList() <a id=\\"aws-cdk-core-validationresults-errortreelist\\"></a>



\`\`\`ts
errorTreeList(): string
\`\`\`


__Returns__:
* <code>string</code>

### wrap(message) <a id=\\"aws-cdk-core-validationresults-wrap\\"></a>

Wrap up all validation results into a single tree node.

If there are failures in the collection, add a message, otherwise
return a success.

\`\`\`ts
wrap(message: string): ValidationResult
\`\`\`

* **message** (<code>string</code>)  *No description*

__Returns__:
* <code>[ValidationResult](./@aws-cdk_core.ValidationResult.md)</code>
",
  "@aws-cdk_core.md": "## AWS Cloud Development Kit Core Library
<!--BEGIN STABILITY BANNER-->
---

![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)

---
<!--END STABILITY BANNER-->

This library includes the basic building blocks of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) (AWS CDK). It defines the core classes that are used in the rest of the
AWS Construct Library.

See the [AWS CDK Developer
Guide](https://docs.aws.amazon.com/cdk/latest/guide/home.html) for
information of most of the capabilities of this library. The rest of this
README will only cover topics not already covered in the Developer Guide.

## Durations

To make specifications of time intervals unambiguous, a single class called
\`Duration\` is used throughout the AWS Construct Library by all constructs
that that take a time interval as a parameter (be it for a timeout, a
rate, or something else).

An instance of Duration is constructed by using one of the static factory
methods on it:

\`\`\`ts
Duration.seconds(300)   // 5 minutes
Duration.minutes(5)     // 5 minutes
Duration.hours(1)       // 1 hour
Duration.days(7)        // 7 days
Duration.parse('PT5M')  // 5 minutes
\`\`\`

## Size (Digital Information Quantity)

To make specification of digital storage quantities unambiguous, a class called
\`Size\` is available.

An instance of \`Size\` is initialized through one of its static factory methods:

\`\`\`ts
Size.kibibytes(200) // 200 KiB
Size.mebibytes(5)   // 5 MiB
Size.gibibytes(40)  // 40 GiB
Size.tebibytes(200) // 200 TiB
Size.pebibytes(3)   // 3 PiB
\`\`\`

Instances of \`Size\` created with one of the units can be converted into others.
By default, conversion to a higher unit will fail if the conversion does not produce
a whole number. This can be overridden by unsetting \`integral\` property.

\`\`\`ts
Size.mebibytes(2).toKibibytes()                      // yields 2048
Size.kibibytes(2050).toMebibyte({ integral: false }) // yields 2
\`\`\`

## Secrets

To help avoid accidental storage of secrets as plain text, we use the \`SecretValue\` type to
represent secrets. Any construct that takes a value that should be a secret (such as
a password or an access key) will take a parameter of type \`SecretValue\`.

The best practice is to store secrets in AWS Secrets Manager and reference them using \`SecretValue.secretsManager\`:

\`\`\`ts
const secret = SecretValue.secretsManager('secretId', {
  jsonField: 'password' // optional: key of a JSON field to retrieve (defaults to all content),
  versionId: 'id'       // optional: id of the version (default AWSCURRENT)
  versionStage: 'stage' // optional: version stage name (default AWSCURRENT)
});
\`\`\`

Using AWS Secrets Manager is the recommended way to reference secrets in a CDK app.
\`SecretValue\` also supports the following secret sources:

 * \`SecretValue.plainText(secret)\`: stores the secret as plain text in your app and the resulting template (not recommended).
 * \`SecretValue.ssmSecure(param, version)\`: refers to a secret stored as a SecureString in the SSM Parameter Store.
 * \`SecretValue.cfnParameter(param)\`: refers to a secret passed through a CloudFormation parameter (must have \`NoEcho: true\`).
 * \`SecretValue.cfnDynamicReference(dynref)\`: refers to a secret described by a CloudFormation dynamic reference (used by \`ssmSecure\` and \`secretsManager\`).

## ARN manipulation

Sometimes you will need to put together or pick apart Amazon Resource Names
(ARNs). The functions \`stack.formatArn()\` and \`stack.parseArn()\` exist for
this purpose.

\`formatArn()\` can be used to build an ARN from components. It will automatically
use the region and account of the stack you're calling it on:

\`\`\`ts
// Builds \\"arn:<PARTITION>:lambda:<REGION>:<ACCOUNT>:function:MyFunction\\"
stack.formatArn({
  service: 'lambda',
  resource: 'function',
  sep: ':',
  resourceName: 'MyFunction'
});
\`\`\`

\`parseArn()\` can be used to get a single component from an ARN. \`parseArn()\`
will correctly deal with both literal ARNs and deploy-time values (tokens),
but in case of a deploy-time value be aware that the result will be another
deploy-time value which cannot be inspected in the CDK application.

\`\`\`ts
// Extracts the function name out of an AWS Lambda Function ARN
const arnComponents = stack.parseArn(arn, ':');
const functionName = arnComponents.resourceName;
\`\`\`

Note that depending on the service, the resource separator can be either
\`:\` or \`/\`, and the resource name can be either the 6th or 7th
component in the ARN. When using these functions, you will need to know
the format of the ARN you are dealing with.

For an exhaustive list of ARN formats used in AWS, see [AWS ARNs and
Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
in the AWS General Reference.

## Dependencies

### Construct Dependencies

Sometimes AWS resources depend on other resources, and the creation of one
resource must be completed before the next one can be started.

In general, CloudFormation will correctly infer the dependency relationship
between resources based on the property values that are used. In the cases where
it doesn't, the AWS Construct Library will add the dependency relationship for
you.

If you need to add an ordering dependency that is not automatically inferred,
you do so by adding a dependency relationship using
\`constructA.node.addDependency(constructB)\`. This will add a dependency
relationship between all resources in the scope of \`constructA\` and all
resources in the scope of \`constructB\`.

If you want a single object to represent a set of constructs that are not
necessarily in the same scope, you can use a \`ConcreteDependable\`. The
following creates a single object that represents a dependency on two
construts, \`constructB\` and \`constructC\`:

\`\`\`ts
// Declare the dependable object
const bAndC = new ConcreteDependable();
bAndC.add(constructB);
bAndC.add(constructC);

// Take the dependency
constructA.node.addDependency(bAndC);
\`\`\`

### Stack Dependencies

Two different stack instances can have a dependency on one another. This
happens when an resource from one stack is referenced in another stack. In
that case, CDK records the cross-stack referencing of resources,
automatically produces the right CloudFormation primitives, and adds a
dependency between the two stacks. You can also manually add a dependency
between two stacks by using the \`stackA.addDependency(stackB)\` method.

A stack dependency has the following implications:

* Cyclic dependencies are not allowed, so if \`stackA\` is using resources from
  \`stackB\`, the reverse is not possible anymore.
* Stacks with dependencies between them are treated specially by the CDK
  toolkit:
  * If \`stackA\` depends on \`stackB\`, running \`cdk deploy stackA\` will also
    automatically deploy \`stackB\`.
  * \`stackB\`'s deployment will be performed *before* \`stackA\`'s deployment.

## AWS CloudFormation features

A CDK stack synthesizes to an AWS CloudFormation Template. This section
explains how this module allows users to access low-level CloudFormation
features when needed.

### Stack Outputs

CloudFormation [stack outputs][cfn-stack-output] and exports are created using
the \`CfnOutput\` class:

\`\`\`ts
new CfnOutput(this, 'OutputName', {
  value: bucket.bucketName,
  description: 'The name of an S3 bucket', // Optional
  exportName: 'TheAwesomeBucket', // Registers a CloudFormation export named \\"TheAwesomeBucket\\"
});
\`\`\`

[cfn-stack-output]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html

### Parameters

CloudFormation templates support the use of [Parameters][cfn-parameters] to
customize a template. They enable CloudFormation users to input custom values to
a template each time a stack is created or updated. While the CDK design
philosophy favors using build-time parameterization, users may need to use
CloudFormation in a number of cases (for example, when migrating an existing
stack to the AWS CDK).

Template parameters can be added to a stack by using the \`CfnParameter\` class:

\`\`\`ts
new CfnParameter(this, 'MyParameter', {
  type: 'Number',
  default: 1337,
  // See the API reference for more configuration props
});
\`\`\`

The value of parameters can then be obtained using one of the \`value\` methods.
As parameters are only resolved at deployment time, the values obtained are
placeholder tokens for the real value (\`Token.isUnresolved()\` would return \`true\`
for those):

\`\`\`ts
const param = new CfnParameter(this, 'ParameterName', { /* config */ });

// If the parameter is a String
param.valueAsString;

// If the parameter is a Number
param.valueAsNumber;

// If the parameter is a List
param.valueAsList;
\`\`\`

[cfn-parameters]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html

### Pseudo Parameters

CloudFormation supports a number of [pseudo parameters][cfn-pseudo-params],
which resolve to useful values at deployment time. CloudFormation pseudo
parameters can be obtained from static members of the \`Aws\` class.

It is generally recommended to access pseudo parameters from the scope's \`stack\`
instead, which guarantees the values produced are qualifying the designated
stack, which is essential in cases where resources are shared cross-stack:

\`\`\`ts
// \\"this\\" is the current construct
const stack = Stack.of(this);

stack.account; // Returns the AWS::AccountId for this stack (or the literal value if known)
stack.region;  // Returns the AWS::Region for this stack (or the literal value if known)
stack.partition;
\`\`\`

[cfn-pseudo-params]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/pseudo-parameter-reference.html

### Resource Options

CloudFormation resources can also specify [resource
attributes][cfn-resource-attributes]. The \`CfnResource\` class allows
accessing those through the \`cfnOptions\` property:

\`\`\`ts
const rawBucket = new s3.CfnBucket(this, 'Bucket', { /* ... */ });
// -or-
const rawBucket = bucket.node.defaultChild as s3.CfnBucket;

// then
rawBucket.cfnOptions.condition = new CfnCondition(this, 'EnableBucket', { /* ... */ });
rawBucket.cfnOptions.metadata = {
  metadataKey: 'MetadataValue',
};
\`\`\`

Resource dependencies (the \`DependsOn\` attribute) is modified using the
\`cfnResource.addDependsOn\` method:

\`\`\`ts
const resourceA = new CfnResource(this, 'ResourceA', { /* ... */ });
const resourceB = new CfnResource(this, 'ResourceB', { /* ... */ });

resourceB.addDependsOn(resourceA);
\`\`\`

[cfn-resource-attributes]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-product-attribute-reference.html

### Intrinsic Functions and Condition Expressions

CloudFormation supports [intrinsic functions][cfn-intrinsics]. These functions
can be accessed from the \`Fn\` class, which provides type-safe methods for each
intrinsic function as well as condition expressions:

\`\`\`ts
// To use Fn::Base64
Fn.base64('SGVsbG8gQ0RLIQo=');

// To compose condition expressions:
const environmentParameter = new CfnParameter(this, 'Environment');
Fn.conditionAnd(
  // The \\"Environment\\" CloudFormation template parameter evaluates to \\"Production\\"
  Fn.conditionEquals('Production', environmentParameter),
  // The AWS::Region pseudo-parameter value is NOT equal to \\"us-east-1\\"
  Fn.conditionNot(Fn.conditionEquals('us-east-1', Aws.REGION)),
);
\`\`\`

When working with deploy-time values (those for which \`Token.isUnresolved\`
returns \`true\`), idiomatic conditionals from the programming language cannot be
used (the value will not be known until deployment time). When conditional logic
needs to be expressed with un-resolved values, it is necessary to use
CloudFormation conditions by means of the \`CfnCondition\` class:

\`\`\`ts
const environmentParameter = new CfnParameter(this, 'Environment');
const isProd = new CfnCondition(this, 'IsProduction', {
  expression: Fn.conditionEquals('Production', environmentParameter),
});

// Configuration value that is a different string based on IsProduction
const stage = Fn.conditionIf(isProd.logicalId, 'Beta', 'Prod').toString();

// Make Bucket creation condition to IsProduction by accessing
// and overriding the CloudFormation resource
const bucket = new s3.Bucket(this, 'Bucket');
const cfnBucket = bucket.node.defaultChild as s3.CfnBucket;
cfnBucket.cfnOptions.condition = isProd;
\`\`\`

[cfn-intrinsics]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html

### Mappings

CloudFormation [mappings][cfn-mappings] are created and queried using the
\`CfnMappings\` class:

\`\`\`ts
const mapping = new CfnMapping(this, 'MappingTable', {
  mapping: {
    regionName: {
      'us-east-1': 'US East (N. Virginia)',
      'us-east-2': 'US East (Ohio)',
      // ...
    },
    // ...
  }
});

mapping.findInMap('regionName', Aws.REGION);
\`\`\`

[cfn-mappings]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html

### Dynamic References

CloudFormation supports [dynamically resolving][cfn-dynamic-references] values
for SSM parameters (including secure strings) and Secrets Manager. Encoding such
references is done using the \`CfnDynamicReference\` class:

\`\`\`ts
new CfnDynamicReference(this, 'SecureStringValue', {
  service: CfnDynamicReferenceService.SECRETS_MANAGER,
  referenceKey: 'secret-id:secret-string:json-key:version-stage:version-id',
});
\`\`\`

[cfn-dynamic-references]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html

### Template Options & Transform

CloudFormation templates support a number of options, including which Macros or
[Transforms][cfn-transform] to use when deploying the stack. Those can be
configured using the \`stack.templateOptions\` property:

\`\`\`ts
const stack = new Stack(app, 'StackName');

stack.templateOptions.description = 'This will appear in the AWS console';
stack.templateOptions.transforms = ['AWS::Serverless-2016-10-31'];
stack.templateOptions.metadata = {
  metadataKey: 'MetadataValue',
};
\`\`\`

[cfn-transform]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html

### Emitting Raw Resources

The \`CfnResource\` class allows emitting arbitrary entries in the
[Resources][cfn-resources] section of the CloudFormation template.

\`\`\`ts
new CfnResource(this, 'ResourceId', {
  type: 'AWS::S3::Bucket',
  properties: {
    BucketName: 'bucket-name'
  },
});
\`\`\`

As for any other resource, the logical ID in the CloudFormation template will be
generated by the AWS CDK, but the type and properties will be copied verbatim in
the synthesized template.

[cfn-resources]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html

### Including raw CloudFormation template fragments

When migrating a CloudFormation stack to the AWS CDK, it can be useful to
include fragments of an existing template verbatim in the synthesized template.
This can be achieved using the \`CfnInclude\` class.

\`\`\`ts
new CfnInclude(this, 'ID', {
  template: {
    Resources: {
      Bucket: {
        Type: 'AWS::S3::Bucket',
        Properties: {
          BucketName: 'my-shiny-bucket'
        }
      }
    }
  },
});
\`\`\`

## API Reference

**Classes**

Name|Description
----|-----------
[App](./@aws-cdk_core.App.md)|A construct which represents an entire CDK app. This construct is normally the root of the construct tree.
[Arn](./@aws-cdk_core.Arn.md)|*No description*
[Aws](./@aws-cdk_core.Aws.md)|Accessor for pseudo parameters.
[CfnCondition](./@aws-cdk_core.CfnCondition.md)|Represents a CloudFormation condition, for resources which must be conditionally created and the determination must be made at deploy time.
[CfnDynamicReference](./@aws-cdk_core.CfnDynamicReference.md)|References a dynamically retrieved value.
[CfnElement](./@aws-cdk_core.CfnElement.md)|An element of a CloudFormation stack.
[CfnInclude](./@aws-cdk_core.CfnInclude.md)|Includes a CloudFormation template into a stack.
[CfnMapping](./@aws-cdk_core.CfnMapping.md)|Represents a CloudFormation mapping.
[CfnOutput](./@aws-cdk_core.CfnOutput.md)|*No description*
[CfnParameter](./@aws-cdk_core.CfnParameter.md)|A CloudFormation parameter.
[CfnRefElement](./@aws-cdk_core.CfnRefElement.md)|Base class for referenceable CloudFormation constructs which are not Resources.
[CfnResource](./@aws-cdk_core.CfnResource.md)|Represents a CloudFormation resource.
[CfnRule](./@aws-cdk_core.CfnRule.md)|The Rules that define template constraints in an AWS Service Catalog portfolio describe when end users can use the template and which values they can specify for parameters that are declared in the AWS CloudFormation template used to create the product they are attempting to use.
[ConcreteDependable](./@aws-cdk_core.ConcreteDependable.md)|A set of constructs to be used as a dependable.
[Construct](./@aws-cdk_core.Construct.md)|Represents the building block of the construct graph.
[ConstructNode](./@aws-cdk_core.ConstructNode.md)|Represents the construct node in the scope tree.
[ContextProvider](./@aws-cdk_core.ContextProvider.md)|Base class for the model side of context providers.
[DefaultTokenResolver](./@aws-cdk_core.DefaultTokenResolver.md)|Default resolver implementation.
[DependableTrait](./@aws-cdk_core.DependableTrait.md)|Trait for IDependable.
[Duration](./@aws-cdk_core.Duration.md)|Represents a length of time.
[Fn](./@aws-cdk_core.Fn.md)|CloudFormation intrinsic functions.
[Intrinsic](./@aws-cdk_core.Intrinsic.md)|Token subclass that represents values intrinsic to the target document language.
[Lazy](./@aws-cdk_core.Lazy.md)|Lazily produce a value.
[PhysicalName](./@aws-cdk_core.PhysicalName.md)|Includes special markers for automatic generation of physical names.
[Reference](./@aws-cdk_core.Reference.md)|An intrinsic Token that represents a reference to a construct.
[RemoveTag](./@aws-cdk_core.RemoveTag.md)|The RemoveTag Aspect will handle removing tags from this node and children.
[Resource](./@aws-cdk_core.Resource.md)|A construct which represents an AWS resource.
[ScopedAws](./@aws-cdk_core.ScopedAws.md)|Accessor for scoped pseudo parameters.
[SecretValue](./@aws-cdk_core.SecretValue.md)|Work with secret values in the CDK.
[Size](./@aws-cdk_core.Size.md)|Represents the amount of digital storage.
[Stack](./@aws-cdk_core.Stack.md)|A root construct which represents a single CloudFormation stack.
[StringConcat](./@aws-cdk_core.StringConcat.md)|Converts all fragments to strings and concats those.
[Tag](./@aws-cdk_core.Tag.md)|The Tag Aspect will handle adding a tag to this node and cascading tags to children.
[TagManager](./@aws-cdk_core.TagManager.md)|TagManager facilitates a common implementation of tagging for Constructs.
[Token](./@aws-cdk_core.Token.md)|Represents a special or lazily-evaluated value.
[Tokenization](./@aws-cdk_core.Tokenization.md)|Less oft-needed functions to manipulate Tokens.
[TokenizedStringFragments](./@aws-cdk_core.TokenizedStringFragments.md)|Fragments of a concatenated string containing stringified Tokens.
[TreeInspector](./@aws-cdk_core.TreeInspector.md)|Inspector that maintains an attribute bag.
[ValidationResult](./@aws-cdk_core.ValidationResult.md)|Representation of validation results.
[ValidationResults](./@aws-cdk_core.ValidationResults.md)|A collection of validation results.


**Structs**

Name|Description
----|-----------
[AppProps](./@aws-cdk_core.AppProps.md)|Initialization props for apps.
[ArnComponents](./@aws-cdk_core.ArnComponents.md)|*No description*
[CfnAutoScalingReplacingUpdate](./@aws-cdk_core.CfnAutoScalingReplacingUpdate.md)|Specifies whether an Auto Scaling group and the instances it contains are replaced during an update.
[CfnAutoScalingRollingUpdate](./@aws-cdk_core.CfnAutoScalingRollingUpdate.md)|To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group, use the AutoScalingRollingUpdate policy.
[CfnAutoScalingScheduledAction](./@aws-cdk_core.CfnAutoScalingScheduledAction.md)|With scheduled actions, the group size properties of an Auto Scaling group can change at any time.
[CfnCodeDeployLambdaAliasUpdate](./@aws-cdk_core.CfnCodeDeployLambdaAliasUpdate.md)|To perform an AWS CodeDeploy deployment when the version changes on an AWS::Lambda::Alias resource, use the CodeDeployLambdaAliasUpdate update policy.
[CfnConditionProps](./@aws-cdk_core.CfnConditionProps.md)|*No description*
[CfnCreationPolicy](./@aws-cdk_core.CfnCreationPolicy.md)|Associate the CreationPolicy attribute with a resource to prevent its status from reaching create complete until AWS CloudFormation receives a specified number of success signals or the timeout period is exceeded.
[CfnDynamicReferenceProps](./@aws-cdk_core.CfnDynamicReferenceProps.md)|Properties for a Dynamic Reference.
[CfnIncludeProps](./@aws-cdk_core.CfnIncludeProps.md)|*No description*
[CfnMappingProps](./@aws-cdk_core.CfnMappingProps.md)|*No description*
[CfnOutputProps](./@aws-cdk_core.CfnOutputProps.md)|*No description*
[CfnParameterProps](./@aws-cdk_core.CfnParameterProps.md)|*No description*
[CfnResourceAutoScalingCreationPolicy](./@aws-cdk_core.CfnResourceAutoScalingCreationPolicy.md)|For an Auto Scaling group replacement update, specifies how many instances must signal success for the update to succeed.
[CfnResourceProps](./@aws-cdk_core.CfnResourceProps.md)|*No description*
[CfnResourceSignal](./@aws-cdk_core.CfnResourceSignal.md)|When AWS CloudFormation creates the associated resource, configures the number of required success signals and the length of time that AWS CloudFormation waits for those signals.
[CfnRuleAssertion](./@aws-cdk_core.CfnRuleAssertion.md)|A rule assertion.
[CfnRuleProps](./@aws-cdk_core.CfnRuleProps.md)|A rule can include a RuleCondition property and must include an Assertions property.
[CfnTag](./@aws-cdk_core.CfnTag.md)|*No description*
[CfnUpdatePolicy](./@aws-cdk_core.CfnUpdatePolicy.md)|Use the UpdatePolicy attribute to specify how AWS CloudFormation handles updates to the AWS::AutoScaling::AutoScalingGroup resource.
[Dependency](./@aws-cdk_core.Dependency.md)|A single dependency.
[DockerImageAssetLocation](./@aws-cdk_core.DockerImageAssetLocation.md)|The location of the published docker image.
[DockerImageAssetSource](./@aws-cdk_core.DockerImageAssetSource.md)|*No description*
[EncodingOptions](./@aws-cdk_core.EncodingOptions.md)|Properties to string encodings.
[Environment](./@aws-cdk_core.Environment.md)|The deployment environment for a stack.
[FileAssetLocation](./@aws-cdk_core.FileAssetLocation.md)|The location of the published file asset.
[FileAssetSource](./@aws-cdk_core.FileAssetSource.md)|Represents the source for a file asset.
[GetContextKeyOptions](./@aws-cdk_core.GetContextKeyOptions.md)|*No description*
[GetContextKeyResult](./@aws-cdk_core.GetContextKeyResult.md)|*No description*
[GetContextValueOptions](./@aws-cdk_core.GetContextValueOptions.md)|*No description*
[GetContextValueResult](./@aws-cdk_core.GetContextValueResult.md)|*No description*
[LazyAnyValueOptions](./@aws-cdk_core.LazyAnyValueOptions.md)|Options for creating lazy untyped tokens.
[LazyListValueOptions](./@aws-cdk_core.LazyListValueOptions.md)|Options for creating a lazy list token.
[LazyStringValueOptions](./@aws-cdk_core.LazyStringValueOptions.md)|Options for creating a lazy string token.
[RemovalPolicyOptions](./@aws-cdk_core.RemovalPolicyOptions.md)|*No description*
[ResolveOptions](./@aws-cdk_core.ResolveOptions.md)|Options to the resolve() operation.
[ResourceProps](./@aws-cdk_core.ResourceProps.md)|Construction properties for {@link Resource}.
[SecretsManagerSecretOptions](./@aws-cdk_core.SecretsManagerSecretOptions.md)|Options for referencing a secret value from Secrets Manager.
[SizeConversionOptions](./@aws-cdk_core.SizeConversionOptions.md)|Options for how to convert time to a different unit.
[StackProps](./@aws-cdk_core.StackProps.md)|*No description*
[SynthesisOptions](./@aws-cdk_core.SynthesisOptions.md)|Options for synthesis.
[TagManagerOptions](./@aws-cdk_core.TagManagerOptions.md)|Options to configure TagManager behavior.
[TagProps](./@aws-cdk_core.TagProps.md)|Properties for a tag.
[TimeConversionOptions](./@aws-cdk_core.TimeConversionOptions.md)|Options for how to convert time to a different unit.
[ValidationError](./@aws-cdk_core.ValidationError.md)|An error returned during the validation phase.


**Interfaces**

Name|Description
----|-----------
[IAnyProducer](./@aws-cdk_core.IAnyProducer.md)|Interface for lazy untyped value producers.
[IAspect](./@aws-cdk_core.IAspect.md)|Represents an Aspect.
[ICfnConditionExpression](./@aws-cdk_core.ICfnConditionExpression.md)|Represents a CloudFormation element that can be used within a Condition.
[ICfnResourceOptions](./@aws-cdk_core.ICfnResourceOptions.md)|*No description*
[IConstruct](./@aws-cdk_core.IConstruct.md)|Represents a construct.
[IDependable](./@aws-cdk_core.IDependable.md)|Trait marker for classes that can be depended upon.
[IFragmentConcatenator](./@aws-cdk_core.IFragmentConcatenator.md)|Function used to concatenate symbols in the target document language.
[IInspectable](./@aws-cdk_core.IInspectable.md)|Interface for examining a construct and exposing metadata.
[IListProducer](./@aws-cdk_core.IListProducer.md)|Interface for lazy list producers.
[INumberProducer](./@aws-cdk_core.INumberProducer.md)|Interface for lazy number producers.
[IPostProcessor](./@aws-cdk_core.IPostProcessor.md)|A Token that can post-process the complete resolved value, after resolve() has recursed over it.
[IResolvable](./@aws-cdk_core.IResolvable.md)|Interface for values that can be resolvable later.
[IResolveContext](./@aws-cdk_core.IResolveContext.md)|Current resolution context for tokens.
[IResource](./@aws-cdk_core.IResource.md)|Interface for the Resource construct.
[IStringProducer](./@aws-cdk_core.IStringProducer.md)|Interface for lazy string producers.
[ISynthesisSession](./@aws-cdk_core.ISynthesisSession.md)|Represents a single session of synthesis.
[ITaggable](./@aws-cdk_core.ITaggable.md)|Interface to implement tags.
[ITemplateOptions](./@aws-cdk_core.ITemplateOptions.md)|CloudFormation template options for a stack.
[ITokenMapper](./@aws-cdk_core.ITokenMapper.md)|Interface to apply operation to tokens in a string.
[ITokenResolver](./@aws-cdk_core.ITokenResolver.md)|How to resolve tokens.


**Enums**

Name|Description
----|-----------
[CfnDeletionPolicy](./@aws-cdk_core.CfnDeletionPolicy.md)|With the DeletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted.
[CfnDynamicReferenceService](./@aws-cdk_core.CfnDynamicReferenceService.md)|The service to retrieve the dynamic reference from.
[ConstructOrder](./@aws-cdk_core.ConstructOrder.md)|In what order to return constructs.
[FileAssetPackaging](./@aws-cdk_core.FileAssetPackaging.md)|Packaging modes for file assets.
[RemovalPolicy](./@aws-cdk_core.RemovalPolicy.md)|*No description*
[SizeRoundingBehavior](./@aws-cdk_core.SizeRoundingBehavior.md)|Rouding behaviour when converting between units of \`Size\`.
[TagType](./@aws-cdk_core.TagType.md)|*No description*
",
  "@aws-cdk_cx-api.AmiContextQuery.md": "# struct AmiContextQuery 🔹 <a id=\\"aws-cdk-cx-api-amicontextquery\\"></a>


Query to AMI context provider.



Name | Type | Description 
-----|------|-------------
**filters**🔹 | <code>Map<string, Array<string>></code> | Filters to DescribeImages call.
**owners**?🔹 | <code>Array<string></code> | Owners to DescribeImages call.<br/>__*Default*__: All owners
",
  "@aws-cdk_cx-api.AssemblyBuildOptions.md": "# struct AssemblyBuildOptions 🔹 <a id=\\"aws-cdk-cx-api-assemblybuildoptions\\"></a>






Name | Type | Description 
-----|------|-------------
**runtimeInfo**?🔹 | <code>[RuntimeInfo](./@aws-cdk_cx-api.RuntimeInfo.md)</code> | Include the specified runtime information (module versions) in manifest.<br/>__*Default*__: if this option is not specified, runtime info will not be included
",
  "@aws-cdk_cx-api.AvailabilityZonesContextQuery.md": "# struct AvailabilityZonesContextQuery 🔹 <a id=\\"aws-cdk-cx-api-availabilityzonescontextquery\\"></a>


Query to hosted zone context provider.



Name | Type | Description 
-----|------|-------------
**account**?🔹 | <code>string</code> | Query account.<br/>__*Optional*__
**region**?🔹 | <code>string</code> | Query region.<br/>__*Optional*__
",
  "@aws-cdk_cx-api.AwsCloudFormationStackProperties.md": "# struct AwsCloudFormationStackProperties 🔹 <a id=\\"aws-cdk-cx-api-awscloudformationstackproperties\\"></a>


Artifact properties for CloudFormation stacks.



Name | Type | Description 
-----|------|-------------
**templateFile**🔹 | <code>string</code> | A file relative to the assembly root which contains the CloudFormation template for this stack.
**parameters**?🔹 | <code>Map<string, string></code> | Values for CloudFormation stack parameters that should be passed when the stack is deployed.<br/>__*Optional*__
**stackName**?🔹 | <code>string</code> | The name to use for the CloudFormation stack.<br/>__*Default*__: name derived from artifact ID
",
  "@aws-cdk_cx-api.CloudArtifact.md": "# class CloudArtifact 🔹 <a id=\\"aws-cdk-cx-api-cloudartifact\\"></a>

Represents an artifact within a cloud assembly.


## Initializer




\`\`\`ts
new CloudArtifact(assembly: CloudAssembly, id: string, manifest: ArtifactManifest)
\`\`\`

* **assembly** (<code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*
* **manifest** (<code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code>)  *No description*
  * **type** (<code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code>)  The type of artifact. 
  * **dependencies** (<code>Array<string></code>)  IDs of artifacts that must be deployed before this artifact. __*Default*__: no dependencies.
  * **environment** (<code>string</code>)  The environment into which this artifact is deployed. __*Default*__: no envrionment.
  * **metadata** (<code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code>)  Associated metadata. __*Default*__: no metadata.
  * **properties** (<code>Map<string, any></code>)  The set of properties for this artifact (depends on type). __*Default*__: no properties.



## Properties


Name | Type | Description 
-----|------|-------------
**assembly**🔹 | <code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code> | <span></span>
**dependencies**🔹 | <code>Array<[CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)></code> | Returns all the artifacts that this artifact depends on.
**id**🔹 | <code>string</code> | <span></span>
**manifest**🔹 | <code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code> | The artifact's manifest.
**messages**🔹 | <code>Array<[SynthesisMessage](./@aws-cdk_cx-api.SynthesisMessage.md)></code> | The set of messages extracted from the artifact's metadata.

## Methods


### findMetadataByType(type)🔹 <a id=\\"aws-cdk-cx-api-cloudartifact-findmetadatabytype\\"></a>



\`\`\`ts
findMetadataByType(type: string): Array<MetadataEntryResult>
\`\`\`

* **type** (<code>string</code>)  *No description*

__Returns__:
* <code>Array<[MetadataEntryResult](./@aws-cdk_cx-api.MetadataEntryResult.md)></code>

### *static* fromManifest(assembly, id, artifact)🔹 <a id=\\"aws-cdk-cx-api-cloudartifact-frommanifest\\"></a>

Returns a subclass of \`CloudArtifact\` based on the artifact type defined in the artifact manifest.

\`\`\`ts
static fromManifest(assembly: CloudAssembly, id: string, artifact: ArtifactManifest): CloudArtifact
\`\`\`

* **assembly** (<code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>)  The cloud assembly from which to load the artifact.
* **id** (<code>string</code>)  The artifact ID.
* **artifact** (<code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code>)  The artifact manifest.
  * **type** (<code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code>)  The type of artifact. 
  * **dependencies** (<code>Array<string></code>)  IDs of artifacts that must be deployed before this artifact. __*Default*__: no dependencies.
  * **environment** (<code>string</code>)  The environment into which this artifact is deployed. __*Default*__: no envrionment.
  * **metadata** (<code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code>)  Associated metadata. __*Default*__: no metadata.
  * **properties** (<code>Map<string, any></code>)  The set of properties for this artifact (depends on type). __*Default*__: no properties.

__Returns__:
* <code>[CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)</code>
",
  "@aws-cdk_cx-api.CloudAssembly.md": "# class CloudAssembly 🔹 <a id=\\"aws-cdk-cx-api-cloudassembly\\"></a>

Represents a deployable cloud application.


## Initializer


Reads a cloud assembly from the specified directory.

\`\`\`ts
new CloudAssembly(directory: string)
\`\`\`

* **directory** (<code>string</code>)  The root directory of the assembly.



## Properties


Name | Type | Description 
-----|------|-------------
**artifacts**🔹 | <code>Array<[CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)></code> | All artifacts included in this assembly.
**directory**🔹 | <code>string</code> | The root directory of the cloud assembly.
**manifest**🔹 | <code>[AssemblyManifest](./@aws-cdk_cloud-assembly-schema.AssemblyManifest.md)</code> | The raw assembly manifest.
**runtime**🔹 | <code>[RuntimeInfo](./@aws-cdk_cloud-assembly-schema.RuntimeInfo.md)</code> | Runtime information such as module versions used to synthesize this assembly.
**stacks**🔹 | <code>Array<[CloudFormationStackArtifact](./@aws-cdk_cx-api.CloudFormationStackArtifact.md)></code> | <span></span>
**version**🔹 | <code>string</code> | The schema version of the assembly manifest.

## Methods


### getStack(stackName)⚠️ <a id=\\"aws-cdk-cx-api-cloudassembly-getstack\\"></a>

Returns a CloudFormation stack artifact by name from this assembly.

\`\`\`ts
getStack(stackName: string): CloudFormationStackArtifact
\`\`\`

* **stackName** (<code>string</code>)  *No description*

__Returns__:
* <code>[CloudFormationStackArtifact](./@aws-cdk_cx-api.CloudFormationStackArtifact.md)</code>

### getStackArtifact(artifactId)🔹 <a id=\\"aws-cdk-cx-api-cloudassembly-getstackartifact\\"></a>

Returns a CloudFormation stack artifact from this assembly.

\`\`\`ts
getStackArtifact(artifactId: string): CloudFormationStackArtifact
\`\`\`

* **artifactId** (<code>string</code>)  the artifact id of the stack (can be obtained through \`stack.artifactId\`).

__Returns__:
* <code>[CloudFormationStackArtifact](./@aws-cdk_cx-api.CloudFormationStackArtifact.md)</code>

### getStackByName(stackName)🔹 <a id=\\"aws-cdk-cx-api-cloudassembly-getstackbyname\\"></a>

Returns a CloudFormation stack artifact from this assembly.

\`\`\`ts
getStackByName(stackName: string): CloudFormationStackArtifact
\`\`\`

* **stackName** (<code>string</code>)  the name of the CloudFormation stack.

__Returns__:
* <code>[CloudFormationStackArtifact](./@aws-cdk_cx-api.CloudFormationStackArtifact.md)</code>

### tree()🔹 <a id=\\"aws-cdk-cx-api-cloudassembly-tree\\"></a>

Returns the tree metadata artifact from this assembly.

\`\`\`ts
tree(): TreeCloudArtifact
\`\`\`


__Returns__:
* <code>[TreeCloudArtifact](./@aws-cdk_cx-api.TreeCloudArtifact.md)</code>

### tryGetArtifact(id)🔹 <a id=\\"aws-cdk-cx-api-cloudassembly-trygetartifact\\"></a>

Attempts to find an artifact with a specific identity.

\`\`\`ts
tryGetArtifact(id: string): CloudArtifact
\`\`\`

* **id** (<code>string</code>)  The artifact ID.

__Returns__:
* <code>[CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)</code>
",
  "@aws-cdk_cx-api.CloudAssemblyBuilder.md": "# class CloudAssemblyBuilder 🔹 <a id=\\"aws-cdk-cx-api-cloudassemblybuilder\\"></a>

Can be used to build a cloud assembly.


## Initializer


Initializes a cloud assembly builder.

\`\`\`ts
new CloudAssemblyBuilder(outdir?: string)
\`\`\`

* **outdir** (<code>string</code>)  The output directory, uses temporary directory if undefined.



## Properties


Name | Type | Description 
-----|------|-------------
**outdir**🔹 | <code>string</code> | The root directory of the resulting cloud assembly.

## Methods


### addArtifact(id, manifest)🔹 <a id=\\"aws-cdk-cx-api-cloudassemblybuilder-addartifact\\"></a>

Adds an artifact into the cloud assembly.

\`\`\`ts
addArtifact(id: string, manifest: ArtifactManifest): void
\`\`\`

* **id** (<code>string</code>)  The ID of the artifact.
* **manifest** (<code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code>)  The artifact manifest.
  * **type** (<code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code>)  The type of artifact. 
  * **dependencies** (<code>Array<string></code>)  IDs of artifacts that must be deployed before this artifact. __*Default*__: no dependencies.
  * **environment** (<code>string</code>)  The environment into which this artifact is deployed. __*Default*__: no envrionment.
  * **metadata** (<code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code>)  Associated metadata. __*Default*__: no metadata.
  * **properties** (<code>Map<string, any></code>)  The set of properties for this artifact (depends on type). __*Default*__: no properties.




### addMissing(missing)🔹 <a id=\\"aws-cdk-cx-api-cloudassemblybuilder-addmissing\\"></a>

Reports that some context is missing in order for this cloud assembly to be fully synthesized.

\`\`\`ts
addMissing(missing: MissingContext): void
\`\`\`

* **missing** (<code>[MissingContext](./@aws-cdk_cloud-assembly-schema.MissingContext.md)</code>)  Missing context information.
  * **key** (<code>string</code>)  The missing context key. 
  * **props** (<code>Map<string, any></code>)  A set of provider-specific options. 
  * **provider** (<code>string</code>)  The provider from which we expect this context key to be obtained. 




### buildAssembly(options?)🔹 <a id=\\"aws-cdk-cx-api-cloudassemblybuilder-buildassembly\\"></a>

Finalizes the cloud assembly into the output directory returns a \`CloudAssembly\` object that can be used to inspect the assembly.

\`\`\`ts
buildAssembly(options?: AssemblyBuildOptions): CloudAssembly
\`\`\`

* **options** (<code>[AssemblyBuildOptions](./@aws-cdk_cx-api.AssemblyBuildOptions.md)</code>)  *No description*
  * **runtimeInfo** (<code>[RuntimeInfo](./@aws-cdk_cx-api.RuntimeInfo.md)</code>)  Include the specified runtime information (module versions) in manifest. __*Default*__: if this option is not specified, runtime info will not be included

__Returns__:
* <code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>
",
  "@aws-cdk_cx-api.CloudFormationStackArtifact.md": "# class CloudFormationStackArtifact 🔹 <a id=\\"aws-cdk-cx-api-cloudformationstackartifact\\"></a>



__Extends__: [CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)

## Initializer




\`\`\`ts
new CloudFormationStackArtifact(assembly: CloudAssembly, artifactId: string, artifact: ArtifactManifest)
\`\`\`

* **assembly** (<code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>)  *No description*
* **artifactId** (<code>string</code>)  *No description*
* **artifact** (<code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code>)  *No description*
  * **type** (<code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code>)  The type of artifact. 
  * **dependencies** (<code>Array<string></code>)  IDs of artifacts that must be deployed before this artifact. __*Default*__: no dependencies.
  * **environment** (<code>string</code>)  The environment into which this artifact is deployed. __*Default*__: no envrionment.
  * **metadata** (<code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code>)  Associated metadata. __*Default*__: no metadata.
  * **properties** (<code>Map<string, any></code>)  The set of properties for this artifact (depends on type). __*Default*__: no properties.



## Properties


Name | Type | Description 
-----|------|-------------
**assets**🔹 | <code>Array<[FileAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md) &#124; [ContainerImageAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md)></code> | Any assets associated with this stack.
**displayName**🔹 | <code>string</code> | A string that represents this stack.
**environment**🔹 | <code>[Environment](./@aws-cdk_cx-api.Environment.md)</code> | The environment into which to deploy this artifact.
**name**⚠️ | <code>string</code> | The physical name of this stack.
**originalName**🔹 | <code>string</code> | The original name as defined in the CDK app.
**parameters**🔹 | <code>Map<string, string></code> | CloudFormation parameters to pass to the stack.
**stackName**🔹 | <code>string</code> | The physical name of this stack.
**template**🔹 | <code>any</code> | The CloudFormation template for this stack.
**templateFile**🔹 | <code>string</code> | The file name of the template.
",
  "@aws-cdk_cx-api.Environment.md": "# struct Environment 🔹 <a id=\\"aws-cdk-cx-api-environment\\"></a>

__Obtainable from__: [EnvironmentUtils](./@aws-cdk_cx-api.EnvironmentUtils.md).[parse](./@aws-cdk_cx-api.EnvironmentUtils.md#aws-cdk-cx-api-environmentutils-parse)()

Models an AWS execution environment, for use within the CDK toolkit.



Name | Type | Description 
-----|------|-------------
**account**🔹 | <code>string</code> | The AWS account this environment deploys into.
**name**🔹 | <code>string</code> | The arbitrary name of this environment (user-set, or at least user-meaningful).
**region**🔹 | <code>string</code> | The AWS region name where this environment deploys into.
",
  "@aws-cdk_cx-api.EnvironmentUtils.md": "# class EnvironmentUtils 🔹 <a id=\\"aws-cdk-cx-api-environmentutils\\"></a>




## Initializer




\`\`\`ts
new EnvironmentUtils()
\`\`\`



## Methods


### *static* format(account, region)🔹 <a id=\\"aws-cdk-cx-api-environmentutils-format\\"></a>



\`\`\`ts
static format(account: string, region: string): string
\`\`\`

* **account** (<code>string</code>)  *No description*
* **region** (<code>string</code>)  *No description*

__Returns__:
* <code>string</code>

### *static* parse(environment)🔹 <a id=\\"aws-cdk-cx-api-environmentutils-parse\\"></a>



\`\`\`ts
static parse(environment: string): Environment
\`\`\`

* **environment** (<code>string</code>)  *No description*

__Returns__:
* <code>[Environment](./@aws-cdk_cx-api.Environment.md)</code>
",
  "@aws-cdk_cx-api.HostedZoneContextQuery.md": "# struct HostedZoneContextQuery 🔹 <a id=\\"aws-cdk-cx-api-hostedzonecontextquery\\"></a>


Query to hosted zone context provider.



Name | Type | Description 
-----|------|-------------
**domainName**🔹 | <code>string</code> | The domain name e.g. example.com to lookup.
**account**?🔹 | <code>string</code> | Query account.<br/>__*Optional*__
**privateZone**?🔹 | <code>boolean</code> | True if the zone you want to find is a private hosted zone.<br/>__*Optional*__
**region**?🔹 | <code>string</code> | Query region.<br/>__*Optional*__
**vpcId**?🔹 | <code>string</code> | The VPC ID to that the private zone must be associated with.<br/>__*Optional*__
",
  "@aws-cdk_cx-api.MetadataEntry.md": "# struct MetadataEntry ⚠️ <a id=\\"aws-cdk-cx-api-metadataentry\\"></a>


Backwards compatibility for when \`MetadataEntry\` was defined here.

This is necessary because its used as an input in the stable



Name | Type | Description 
-----|------|-------------
**type**⚠️ | <code>string</code> | The type of the metadata entry.
**data**?⚠️ | <code>string &#124; [FileAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md) &#124; [ContainerImageAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md) &#124; Array<[Tag](./@aws-cdk_cloud-assembly-schema.Tag.md)></code> | The data.<br/>__*Default*__: no data.
**trace**?⚠️ | <code>Array<string></code> | A stack trace for when the entry was created.<br/>__*Default*__: no trace.
",
  "@aws-cdk_cx-api.MetadataEntryResult.md": "# struct MetadataEntryResult 🔹 <a id=\\"aws-cdk-cx-api-metadataentryresult\\"></a>






Name | Type | Description 
-----|------|-------------
**path**🔹 | <code>string</code> | The path in which this entry was defined.
**type**🔹 | <code>string</code> | The type of the metadata entry.
**data**?🔹 | <code>string &#124; [FileAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.FileAssetMetadataEntry.md) &#124; [ContainerImageAssetMetadataEntry](./@aws-cdk_cloud-assembly-schema.ContainerImageAssetMetadataEntry.md) &#124; Array<[Tag](./@aws-cdk_cloud-assembly-schema.Tag.md)></code> | The data.<br/>__*Default*__: no data.
**trace**?🔹 | <code>Array<string></code> | A stack trace for when the entry was created.<br/>__*Default*__: no trace.
",
  "@aws-cdk_cx-api.MissingContext.md": "# struct MissingContext ⚠️ <a id=\\"aws-cdk-cx-api-missingcontext\\"></a>


Backwards compatibility for when \`MissingContext\` was defined here.

This is necessary because its used as an input in the stable



Name | Type | Description 
-----|------|-------------
**key**⚠️ | <code>string</code> | The missing context key.
**props**⚠️ | <code>Map<string, any></code> | A set of provider-specific options.
**provider**⚠️ | <code>string</code> | The provider from which we expect this context key to be obtained.
",
  "@aws-cdk_cx-api.RuntimeInfo.md": "# struct RuntimeInfo ⚠️ <a id=\\"aws-cdk-cx-api-runtimeinfo\\"></a>


Backwards compatibility for when \`RuntimeInfo\` was defined here.

This is necessary because its used as an input in the stable



Name | Type | Description 
-----|------|-------------
**libraries**⚠️ | <code>Map<string, string></code> | The list of libraries loaded in the application, associated with their versions.
",
  "@aws-cdk_cx-api.SSMParameterContextQuery.md": "# struct SSMParameterContextQuery 🔹 <a id=\\"aws-cdk-cx-api-ssmparametercontextquery\\"></a>


Query to hosted zone context provider.



Name | Type | Description 
-----|------|-------------
**account**?🔹 | <code>string</code> | Query account.<br/>__*Optional*__
**parameterName**?🔹 | <code>string</code> | Parameter name to query.<br/>__*Optional*__
**region**?🔹 | <code>string</code> | Query region.<br/>__*Optional*__
",
  "@aws-cdk_cx-api.SynthesisMessage.md": "# struct SynthesisMessage 🔹 <a id=\\"aws-cdk-cx-api-synthesismessage\\"></a>






Name | Type | Description 
-----|------|-------------
**entry**🔹 | <code>[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)</code> | <span></span>
**id**🔹 | <code>string</code> | <span></span>
**level**🔹 | <code>[SynthesisMessageLevel](./@aws-cdk_cx-api.SynthesisMessageLevel.md)</code> | <span></span>
",
  "@aws-cdk_cx-api.SynthesisMessageLevel.md": "# enum SynthesisMessageLevel 🔹 <a id=\\"aws-cdk-cx-api-synthesismessagelevel\\"></a>



Name | Description
-----|-----
**INFO** 🔹|
**WARNING** 🔹|
**ERROR** 🔹|",
  "@aws-cdk_cx-api.TreeCloudArtifact.md": "# class TreeCloudArtifact 🔹 <a id=\\"aws-cdk-cx-api-treecloudartifact\\"></a>



__Extends__: [CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)

## Initializer




\`\`\`ts
new TreeCloudArtifact(assembly: CloudAssembly, name: string, artifact: ArtifactManifest)
\`\`\`

* **assembly** (<code>[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)</code>)  *No description*
* **name** (<code>string</code>)  *No description*
* **artifact** (<code>[ArtifactManifest](./@aws-cdk_cloud-assembly-schema.ArtifactManifest.md)</code>)  *No description*
  * **type** (<code>[ArtifactType](./@aws-cdk_cloud-assembly-schema.ArtifactType.md)</code>)  The type of artifact. 
  * **dependencies** (<code>Array<string></code>)  IDs of artifacts that must be deployed before this artifact. __*Default*__: no dependencies.
  * **environment** (<code>string</code>)  The environment into which this artifact is deployed. __*Default*__: no envrionment.
  * **metadata** (<code>Map<string, Array<[MetadataEntry](./@aws-cdk_cloud-assembly-schema.MetadataEntry.md)>></code>)  Associated metadata. __*Default*__: no metadata.
  * **properties** (<code>Map<string, any></code>)  The set of properties for this artifact (depends on type). __*Default*__: no properties.



## Properties


Name | Type | Description 
-----|------|-------------
**file**🔹 | <code>string</code> | <span></span>
",
  "@aws-cdk_cx-api.VpcContextQuery.md": "# struct VpcContextQuery 🔹 <a id=\\"aws-cdk-cx-api-vpccontextquery\\"></a>


Query input for looking up a VPC.



Name | Type | Description 
-----|------|-------------
**filter**🔹 | <code>Map<string, string></code> | Filters to apply to the VPC.
**account**?🔹 | <code>string</code> | Query account.<br/>__*Optional*__
**region**?🔹 | <code>string</code> | Query region.<br/>__*Optional*__
**returnAsymmetricSubnets**?🔹 | <code>boolean</code> | Whether to populate the subnetGroups field of the {@link VpcContextResponse}, which contains potentially asymmetric subnet groups.<br/>__*Default*__: false
**subnetGroupNameTag**?🔹 | <code>string</code> | Optional tag for subnet group name.<br/>__*Default*__: 'aws-cdk:subnet-name'
",
  "@aws-cdk_cx-api.VpcContextResponse.md": "# struct VpcContextResponse 🔹 <a id=\\"aws-cdk-cx-api-vpccontextresponse\\"></a>


Properties of a discovered VPC.



Name | Type | Description 
-----|------|-------------
**availabilityZones**🔹 | <code>Array<string></code> | AZs.
**vpcId**🔹 | <code>string</code> | VPC id.
**isolatedSubnetIds**?🔹 | <code>Array<string></code> | IDs of all isolated subnets.<br/>__*Optional*__
**isolatedSubnetNames**?🔹 | <code>Array<string></code> | Name of isolated subnet groups.<br/>__*Optional*__
**isolatedSubnetRouteTableIds**?🔹 | <code>Array<string></code> | Route Table IDs of isolated subnet groups.<br/>__*Optional*__
**privateSubnetIds**?🔹 | <code>Array<string></code> | IDs of all private subnets.<br/>__*Optional*__
**privateSubnetNames**?🔹 | <code>Array<string></code> | Name of private subnet groups.<br/>__*Optional*__
**privateSubnetRouteTableIds**?🔹 | <code>Array<string></code> | Route Table IDs of private subnet groups.<br/>__*Optional*__
**publicSubnetIds**?🔹 | <code>Array<string></code> | IDs of all public subnets.<br/>__*Optional*__
**publicSubnetNames**?🔹 | <code>Array<string></code> | Name of public subnet groups.<br/>__*Optional*__
**publicSubnetRouteTableIds**?🔹 | <code>Array<string></code> | Route Table IDs of public subnet groups.<br/>__*Optional*__
**subnetGroups**?🔹 | <code>Array<[VpcSubnetGroup](./@aws-cdk_cx-api.VpcSubnetGroup.md)></code> | The subnet groups discovered for the given VPC.<br/>__*Default*__: no subnet groups will be returned unless {@link VpcContextQuery.returnAsymmetricSubnets} is true
**vpcCidrBlock**?🔹 | <code>string</code> | VPC cidr.<br/>__*Default*__: CIDR information not available
**vpnGatewayId**?🔹 | <code>string</code> | The VPN gateway ID.<br/>__*Optional*__
",
  "@aws-cdk_cx-api.VpcSubnet.md": "# struct VpcSubnet 🔹 <a id=\\"aws-cdk-cx-api-vpcsubnet\\"></a>


A subnet representation that the VPC provider uses.



Name | Type | Description 
-----|------|-------------
**availabilityZone**🔹 | <code>string</code> | The code of the availability zone this subnet is in (for example, 'us-west-2a').
**routeTableId**🔹 | <code>string</code> | The identifier of the route table for this subnet.
**subnetId**🔹 | <code>string</code> | The identifier of the subnet.
**cidr**?🔹 | <code>string</code> | CIDR range of the subnet.<br/>__*Default*__: CIDR information not available
",
  "@aws-cdk_cx-api.VpcSubnetGroup.md": "# struct VpcSubnetGroup 🔹 <a id=\\"aws-cdk-cx-api-vpcsubnetgroup\\"></a>


A group of subnets returned by the VPC provider.

The included subnets do NOT have to be symmetric!



Name | Type | Description 
-----|------|-------------
**name**🔹 | <code>string</code> | The name of the subnet group, determined by looking at the tags of of the subnets that belong to it.
**subnets**🔹 | <code>Array<[VpcSubnet](./@aws-cdk_cx-api.VpcSubnet.md)></code> | The subnets that are part of this group.
**type**🔹 | <code>[VpcSubnetGroupType](./@aws-cdk_cx-api.VpcSubnetGroupType.md)</code> | The type of the subnet group.
",
  "@aws-cdk_cx-api.VpcSubnetGroupType.md": "# enum VpcSubnetGroupType 🔹 <a id=\\"aws-cdk-cx-api-vpcsubnetgrouptype\\"></a>

The type of subnet group.

Same as SubnetType in the @aws-cdk/aws-ec2 package,
but we can't use that because of cyclical dependencies.

Name | Description
-----|-----
**PUBLIC** 🔹|Public subnet group type.
**PRIVATE** 🔹|Private subnet group type.
**ISOLATED** 🔹|Isolated subnet group type.",
  "@aws-cdk_cx-api.md": "## Cloud Executable API
<!--BEGIN STABILITY BANNER-->
---

![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)

> The APIs of higher level constructs in this module are experimental and under active development. They are subject to non-backward compatible changes or removal in any future version. These are not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be announced in the release notes. This means that while you may use them, you may need to update your source code when upgrading to a newer version of this package.

---
<!--END STABILITY BANNER-->

This module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.

## API Reference

**Classes**

Name|Description
----|-----------
[CloudArtifact](./@aws-cdk_cx-api.CloudArtifact.md)|Represents an artifact within a cloud assembly.
[CloudAssembly](./@aws-cdk_cx-api.CloudAssembly.md)|Represents a deployable cloud application.
[CloudAssemblyBuilder](./@aws-cdk_cx-api.CloudAssemblyBuilder.md)|Can be used to build a cloud assembly.
[CloudFormationStackArtifact](./@aws-cdk_cx-api.CloudFormationStackArtifact.md)|*No description*
[EnvironmentUtils](./@aws-cdk_cx-api.EnvironmentUtils.md)|*No description*
[TreeCloudArtifact](./@aws-cdk_cx-api.TreeCloudArtifact.md)|*No description*


**Structs**

Name|Description
----|-----------
[AmiContextQuery](./@aws-cdk_cx-api.AmiContextQuery.md)|Query to AMI context provider.
[AssemblyBuildOptions](./@aws-cdk_cx-api.AssemblyBuildOptions.md)|*No description*
[AvailabilityZonesContextQuery](./@aws-cdk_cx-api.AvailabilityZonesContextQuery.md)|Query to hosted zone context provider.
[AwsCloudFormationStackProperties](./@aws-cdk_cx-api.AwsCloudFormationStackProperties.md)|Artifact properties for CloudFormation stacks.
[Environment](./@aws-cdk_cx-api.Environment.md)|Models an AWS execution environment, for use within the CDK toolkit.
[HostedZoneContextQuery](./@aws-cdk_cx-api.HostedZoneContextQuery.md)|Query to hosted zone context provider.
[MetadataEntry](./@aws-cdk_cx-api.MetadataEntry.md)|Backwards compatibility for when \`MetadataEntry\` was defined here.
[MetadataEntryResult](./@aws-cdk_cx-api.MetadataEntryResult.md)|*No description*
[MissingContext](./@aws-cdk_cx-api.MissingContext.md)|Backwards compatibility for when \`MissingContext\` was defined here.
[RuntimeInfo](./@aws-cdk_cx-api.RuntimeInfo.md)|Backwards compatibility for when \`RuntimeInfo\` was defined here.
[SSMParameterContextQuery](./@aws-cdk_cx-api.SSMParameterContextQuery.md)|Query to hosted zone context provider.
[SynthesisMessage](./@aws-cdk_cx-api.SynthesisMessage.md)|*No description*
[VpcContextQuery](./@aws-cdk_cx-api.VpcContextQuery.md)|Query input for looking up a VPC.
[VpcContextResponse](./@aws-cdk_cx-api.VpcContextResponse.md)|Properties of a discovered VPC.
[VpcSubnet](./@aws-cdk_cx-api.VpcSubnet.md)|A subnet representation that the VPC provider uses.
[VpcSubnetGroup](./@aws-cdk_cx-api.VpcSubnetGroup.md)|A group of subnets returned by the VPC provider.


**Enums**

Name|Description
----|-----------
[SynthesisMessageLevel](./@aws-cdk_cx-api.SynthesisMessageLevel.md)|*No description*
[VpcSubnetGroupType](./@aws-cdk_cx-api.VpcSubnetGroupType.md)|The type of subnet group.
",
  "constructs.Construct.md": "# class Construct  <a id=\\"constructs-construct\\"></a>

Represents the building block of the construct graph.

All constructs besides the root construct must be created within the scope of
another construct.

__Implements__: [IConstruct](./constructs.IConstruct.md)

## Initializer


Creates a new construct node.

\`\`\`ts
new Construct(scope: Construct, id: string, options?: ConstructOptions)
\`\`\`

* **scope** (<code>[Construct](./constructs.Construct.md)</code>)  The scope in which to define this construct.
* **id** (<code>string</code>)  The scoped construct ID.
* **options** (<code>[ConstructOptions](./constructs.ConstructOptions.md)</code>)  Options.
  * **nodeFactory** (<code>[INodeFactory](./constructs.INodeFactory.md)</code>)  A factory for attaching \`Node\`s to the construct. __*Default*__: the default \`Node\` is associated


## Methods


### toString() <a id=\\"constructs-construct-tostring\\"></a>

Returns a string representation of this construct.

\`\`\`ts
toString(): string
\`\`\`


__Returns__:
* <code>string</code>

### protected onPrepare() <a id=\\"constructs-construct-onprepare\\"></a>

Perform final modifications before synthesis.

This method can be implemented by derived constructs in order to perform
final changes before synthesis. prepare() will be called after child
constructs have been prepared.

This is an advanced framework feature. Only use this if you
understand the implications.

\`\`\`ts
protected onPrepare(): void
\`\`\`





### protected onSynthesize(session) <a id=\\"constructs-construct-onsynthesize\\"></a>

Allows this construct to emit artifacts into the cloud assembly during synthesis.

This method is usually implemented by framework-level constructs such as \`Stack\` and \`Asset\`
as they participate in synthesizing the cloud assembly.

\`\`\`ts
protected onSynthesize(session: ISynthesisSession): void
\`\`\`

* **session** (<code>[ISynthesisSession](./constructs.ISynthesisSession.md)</code>)  The synthesis session.




### protected onValidate()⚠️ <a id=\\"constructs-construct-onvalidate\\"></a>

Validate the current construct.

This method can be implemented by derived constructs in order to perform
validation logic. It is called on all constructs before synthesis.

\`\`\`ts
protected onValidate(): Array<string>
\`\`\`


__Returns__:
* <code>Array<string></code>
",
  "constructs.ConstructMetadata.md": "# class ConstructMetadata  <a id=\\"constructs-constructmetadata\\"></a>

Metadata keys used by constructs.



## Properties


Name | Type | Description 
-----|------|-------------
*static* **DISABLE_STACK_TRACE_IN_METADATA** | <code>string</code> | If set in the construct's context, omits stack traces from metadata entries.
*static* **ERROR_METADATA_KEY** | <code>string</code> | Context type for error level messages.
*static* **INFO_METADATA_KEY** | <code>string</code> | Context type for info level messages.
*static* **WARNING_METADATA_KEY** | <code>string</code> | Context type for warning level messages.
",
  "constructs.ConstructOptions.md": "# struct ConstructOptions  <a id=\\"constructs-constructoptions\\"></a>


Options for creating constructs.



Name | Type | Description 
-----|------|-------------
**nodeFactory**? | <code>[INodeFactory](./constructs.INodeFactory.md)</code> | A factory for attaching \`Node\`s to the construct.<br/>__*Default*__: the default \`Node\` is associated
",
  "constructs.ConstructOrder.md": "# enum ConstructOrder  <a id=\\"constructs-constructorder\\"></a>

In what order to return constructs.

Name | Description
-----|-----
**PREORDER** |Depth-first, pre-order.
**POSTORDER** |Depth-first, post-order (leaf nodes first).",
  "constructs.Dependency.md": "# struct Dependency  <a id=\\"constructs-dependency\\"></a>


A single dependency.



Name | Type | Description 
-----|------|-------------
**source** | <code>[IConstruct](./constructs.IConstruct.md)</code> | Source the dependency.
**target** | <code>[IConstruct](./constructs.IConstruct.md)</code> | Target of the dependency.
",
  "constructs.IAspect.md": "# interface IAspect  <a id=\\"constructs-iaspect\\"></a>


Represents an Aspect.
## Methods


### visit(node) <a id=\\"constructs-iaspect-visit\\"></a>

All aspects can visit an IConstruct.

\`\`\`ts
visit(node: IConstruct): void
\`\`\`

* **node** (<code>[IConstruct](./constructs.IConstruct.md)</code>)  *No description*



",
  "constructs.IConstruct.md": "# interface IConstruct  <a id=\\"constructs-iconstruct\\"></a>

__Implemented by__: [App](./@aws-cdk_core.App.md), [CfnCondition](./@aws-cdk_core.CfnCondition.md), [CfnInclude](./@aws-cdk_core.CfnInclude.md), [CfnMapping](./@aws-cdk_core.CfnMapping.md), [CfnOutput](./@aws-cdk_core.CfnOutput.md), [CfnParameter](./@aws-cdk_core.CfnParameter.md), [CfnResource](./@aws-cdk_core.CfnResource.md), [CfnRule](./@aws-cdk_core.CfnRule.md), [Construct](./@aws-cdk_core.Construct.md), [Stack](./@aws-cdk_core.Stack.md), [Construct](./constructs.Construct.md)
__Obtainable from__: [Node](./constructs.Node.md).[findChild](./constructs.Node.md#constructs-node-findchild)(), [Node](./constructs.Node.md).[tryFindChild](./constructs.Node.md#constructs-node-tryfindchild)()

Represents a construct.",
  "constructs.INodeFactory.md": "# interface INodeFactory  <a id=\\"constructs-inodefactory\\"></a>


A factory for attaching \`Node\`s to the construct.
## Methods


### createNode(host, scope, id) <a id=\\"constructs-inodefactory-createnode\\"></a>

Returns a new \`Node\` associated with \`host\`.

\`\`\`ts
createNode(host: Construct, scope: IConstruct, id: string): Node
\`\`\`

* **host** (<code>[Construct](./constructs.Construct.md)</code>)  the associated construct.
* **scope** (<code>[IConstruct](./constructs.IConstruct.md)</code>)  the construct's scope (parent).
* **id** (<code>string</code>)  the construct id.

__Returns__:
* <code>[Node](./constructs.Node.md)</code>
",
  "constructs.ISynthesisSession.md": "# interface ISynthesisSession  <a id=\\"constructs-isynthesissession\\"></a>


Represents a single session of synthesis.

Passed into \`construct.onSynthesize()\` methods.

## Properties


Name | Type | Description 
-----|------|-------------
**outdir** | <code>string</code> | The output directory for this synthesis session.
",
  "constructs.IValidation.md": "# interface IValidation  <a id=\\"constructs-ivalidation\\"></a>


Implement this interface in order for the construct to be able to validate itself.
## Methods


### validate() <a id=\\"constructs-ivalidation-validate\\"></a>

Validate the current construct.

This method can be implemented by derived constructs in order to perform
validation logic. It is called on all constructs before synthesis.

\`\`\`ts
validate(): Array<string>
\`\`\`


__Returns__:
* <code>Array<string></code>
",
  "constructs.MetadataEntry.md": "# struct MetadataEntry  <a id=\\"constructs-metadataentry\\"></a>


An entry in the construct metadata table.



Name | Type | Description 
-----|------|-------------
**data** | <code>any</code> | The data.
**type** | <code>string</code> | The metadata entry type.
**trace**? | <code>Array<string></code> | Stack trace.<br/>__*Default*__: no trace information
",
  "constructs.Node.md": "# class Node  <a id=\\"constructs-node\\"></a>

Represents the construct node in the scope tree.


## Initializer




\`\`\`ts
new Node(host: Construct, scope: IConstruct, id: string)
\`\`\`

* **host** (<code>[Construct](./constructs.Construct.md)</code>)  *No description*
* **scope** (<code>[IConstruct](./constructs.IConstruct.md)</code>)  *No description*
* **id** (<code>string</code>)  *No description*



## Properties


Name | Type | Description 
-----|------|-------------
**addr** | <code>string</code> | Returns an opaque tree-unique address for this construct.
**children** | <code>Array<[IConstruct](./constructs.IConstruct.md)></code> | All direct children of this construct.
**dependencies** | <code>Array<[Dependency](./constructs.Dependency.md)></code> | Return all dependencies registered on this node or any of its children.
**id** | <code>string</code> | The id of this construct within the current scope.
**locked** | <code>boolean</code> | Returns true if this construct or the scopes in which it is defined are locked.
**metadata** | <code>Array<[MetadataEntry](./constructs.MetadataEntry.md)></code> | An immutable array of metadata objects associated with this construct.
**path** | <code>string</code> | The full, absolute path of this construct in the tree.
**root** | <code>[IConstruct](./constructs.IConstruct.md)</code> | Returns the root of the construct tree.
**scopes** | <code>Array<[IConstruct](./constructs.IConstruct.md)></code> | All parent scopes of this construct.
**uniqueId**⚠️ | <code>string</code> | A tree-global unique alphanumeric identifier for this construct.
**defaultChild**? | <code>[IConstruct](./constructs.IConstruct.md)</code> | Returns the child construct that has the id \`Default\` or \`Resource\\"\`.<br/>__*Optional*__
**scope**? | <code>[IConstruct](./constructs.IConstruct.md)</code> | Returns the scope in which this construct is defined.<br/>__*Optional*__
*static* **PATH_SEP** | <code>string</code> | Separator used to delimit construct path components.

## Methods


### addDependency(...dependencies) <a id=\\"constructs-node-adddependency\\"></a>

Add an ordering dependency on another Construct.

All constructs in the dependency's scope will be deployed before any
construct in this construct's scope.

\`\`\`ts
addDependency(...dependencies: IConstruct[]): void
\`\`\`

* **dependencies** (<code>[IConstruct](./constructs.IConstruct.md)</code>)  *No description*




### addError(message) <a id=\\"constructs-node-adderror\\"></a>

Adds an { \\"error\\": <message> } metadata entry to this construct.

The toolkit will fail synthesis when errors are reported.

\`\`\`ts
addError(message: string): void
\`\`\`

* **message** (<code>string</code>)  The error message.




### addInfo(message) <a id=\\"constructs-node-addinfo\\"></a>

Adds a { \\"info\\": <message> } metadata entry to this construct.

The toolkit will display the info message when apps are synthesized.

\`\`\`ts
addInfo(message: string): void
\`\`\`

* **message** (<code>string</code>)  The info message.




### addMetadata(type, data, fromFunction?) <a id=\\"constructs-node-addmetadata\\"></a>

Adds a metadata entry to this construct.

Entries are arbitrary values and will also include a stack trace to allow tracing back to
the code location for when the entry was added. It can be used, for example, to include source
mapping in CloudFormation templates to improve diagnostics.

\`\`\`ts
addMetadata(type: string, data: any, fromFunction?: any): void
\`\`\`

* **type** (<code>string</code>)  a string denoting the type of metadata.
* **data** (<code>any</code>)  the value of the metadata (can be a Token).
* **fromFunction** (<code>any</code>)  a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata).




### addValidation(validation) <a id=\\"constructs-node-addvalidation\\"></a>

Adds a validation to this construct.

When \`node.validate()\` is called, the \`validate()\` method will be called on
all validations and all errors will be returned.

\`\`\`ts
addValidation(validation: IValidation): void
\`\`\`

* **validation** (<code>[IValidation](./constructs.IValidation.md)</code>)  *No description*




### addWarning(message) <a id=\\"constructs-node-addwarning\\"></a>

Adds a { \\"warning\\": <message> } metadata entry to this construct.

The toolkit will display the warning when an app is synthesized, or fail
if run in --strict mode.

\`\`\`ts
addWarning(message: string): void
\`\`\`

* **message** (<code>string</code>)  The warning message.




### applyAspect(aspect) <a id=\\"constructs-node-applyaspect\\"></a>

Applies the aspect to this Constructs node.

\`\`\`ts
applyAspect(aspect: IAspect): void
\`\`\`

* **aspect** (<code>[IAspect](./constructs.IAspect.md)</code>)  *No description*




### findAll(order?) <a id=\\"constructs-node-findall\\"></a>

Return this construct and all of its children in the given order.

\`\`\`ts
findAll(order?: ConstructOrder): Array<IConstruct>
\`\`\`

* **order** (<code>[ConstructOrder](./constructs.ConstructOrder.md)</code>)  *No description*

__Returns__:
* <code>Array<[IConstruct](./constructs.IConstruct.md)></code>

### findChild(id) <a id=\\"constructs-node-findchild\\"></a>

Return a direct child by id.

Throws an error if the child is not found.

\`\`\`ts
findChild(id: string): IConstruct
\`\`\`

* **id** (<code>string</code>)  Identifier of direct child.

__Returns__:
* <code>[IConstruct](./constructs.IConstruct.md)</code>

### prepare() <a id=\\"constructs-node-prepare\\"></a>

Invokes \\"prepare\\" on all constructs (depth-first, post-order) in the tree under \`node\`.

\`\`\`ts
prepare(): void
\`\`\`





### setContext(key, value) <a id=\\"constructs-node-setcontext\\"></a>

This can be used to set contextual values.

Context must be set before any children are added, since children may consult context info during construction.
If the key already exists, it will be overridden.

\`\`\`ts
setContext(key: string, value: any): void
\`\`\`

* **key** (<code>string</code>)  The context key.
* **value** (<code>any</code>)  The context value.




### synthesize(options) <a id=\\"constructs-node-synthesize\\"></a>

Synthesizes a CloudAssembly from a construct tree.

\`\`\`ts
synthesize(options: SynthesisOptions): void
\`\`\`

* **options** (<code>[SynthesisOptions](./constructs.SynthesisOptions.md)</code>)  Synthesis options.
  * **outdir** (<code>string</code>)  The output directory into which to synthesize the cloud assembly. 
  * **sessionContext** (<code>Map<string, any></code>)  Additional context passed into the synthesis session object when \`construct.synth\` is called. __*Default*__: no additional context is passed to \`onSynthesize\`
  * **skipValidation** (<code>boolean</code>)  Whether synthesis should skip the validation phase. __*Default*__: false




### tryFindChild(id) <a id=\\"constructs-node-tryfindchild\\"></a>

Return a direct child by id, or undefined.

\`\`\`ts
tryFindChild(id: string): IConstruct
\`\`\`

* **id** (<code>string</code>)  Identifier of direct child.

__Returns__:
* <code>[IConstruct](./constructs.IConstruct.md)</code>

### tryGetContext(key) <a id=\\"constructs-node-trygetcontext\\"></a>

Retrieves a value from tree context.

Context is usually initialized at the root, but can be overridden at any point in the tree.

\`\`\`ts
tryGetContext(key: string): any
\`\`\`

* **key** (<code>string</code>)  The context key.

__Returns__:
* <code>any</code>

### tryRemoveChild(childName)🔹 <a id=\\"constructs-node-tryremovechild\\"></a>

Remove the child with the given name, if present.

\`\`\`ts
tryRemoveChild(childName: string): boolean
\`\`\`

* **childName** (<code>string</code>)  *No description*

__Returns__:
* <code>boolean</code>

### validate() <a id=\\"constructs-node-validate\\"></a>

Validates tree (depth-first, pre-order) and returns the list of all errors.

An empty list indicates that there are no errors.

\`\`\`ts
validate(): Array<ValidationError>
\`\`\`


__Returns__:
* <code>Array<[ValidationError](./constructs.ValidationError.md)></code>

### *static* of(construct) <a id=\\"constructs-node-of\\"></a>

Returns the node associated with a construct.

\`\`\`ts
static of(construct: IConstruct): Node
\`\`\`

* **construct** (<code>[IConstruct](./constructs.IConstruct.md)</code>)  the construct.

__Returns__:
* <code>[Node](./constructs.Node.md)</code>
",
  "constructs.SynthesisOptions.md": "# struct SynthesisOptions  <a id=\\"constructs-synthesisoptions\\"></a>


Options for synthesis.



Name | Type | Description 
-----|------|-------------
**outdir** | <code>string</code> | The output directory into which to synthesize the cloud assembly.
**sessionContext**? | <code>Map<string, any></code> | Additional context passed into the synthesis session object when \`construct.synth\` is called.<br/>__*Default*__: no additional context is passed to \`onSynthesize\`
**skipValidation**? | <code>boolean</code> | Whether synthesis should skip the validation phase.<br/>__*Default*__: false
",
  "constructs.ValidationError.md": "# struct ValidationError  <a id=\\"constructs-validationerror\\"></a>


An error returned during the validation phase.



Name | Type | Description 
-----|------|-------------
**message** | <code>string</code> | The error message.
**source** | <code>[Construct](./constructs.Construct.md)</code> | The construct which emitted the error.
",
  "constructs.md": "# Constructs Programming Model

> Software-defined state

![Release](https://github.com/aws/constructs/workflows/Release/badge.svg)
[![npm version](https://badge.fury.io/js/constructs.svg)](https://badge.fury.io/js/constructs)
[![PyPI version](https://badge.fury.io/py/constructs.svg)](https://badge.fury.io/py/constructs)
[![NuGet version](https://badge.fury.io/nu/Constructs.svg)](https://badge.fury.io/nu/Constructs)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/software.constructs/constructs/badge.svg?style=plastic)](https://maven-badges.herokuapp.com/maven-central/software.constructs/constructs)

## What are constructs?

Constructs are classes which define a \\"piece of system state\\". Constructs can be composed together to form higher-level building blocks which represent more complex state.

Constructs are often used to represent the _desired state_ of cloud applications. For example, in the AWS CDK, which is used to define the desired state for AWS infrastructure using CloudFormation, the lowest-level construct represents a _resource definition_ in a CloudFormation template. These resources are composed to represent higher-level logical units of a cloud application, etc.

## Contributing

This project has adopted the [Amazon Open Source Code of
Conduct](https://aws.github.io/code-of-conduct).

We welcome community contributions and pull requests. See our [contribution
guide](./CONTRIBUTING.md) for more information on how to report issues, set up a
development environment and submit code.

## License

This project is distributed under the [Apache License, Version 2.0](./LICENSE).

## API Reference

**Classes**

Name|Description
----|-----------
[Construct](./constructs.Construct.md)|Represents the building block of the construct graph.
[ConstructMetadata](./constructs.ConstructMetadata.md)|Metadata keys used by constructs.
[Node](./constructs.Node.md)|Represents the construct node in the scope tree.


**Structs**

Name|Description
----|-----------
[ConstructOptions](./constructs.ConstructOptions.md)|Options for creating constructs.
[Dependency](./constructs.Dependency.md)|A single dependency.
[MetadataEntry](./constructs.MetadataEntry.md)|An entry in the construct metadata table.
[SynthesisOptions](./constructs.SynthesisOptions.md)|Options for synthesis.
[ValidationError](./constructs.ValidationError.md)|An error returned during the validation phase.


**Interfaces**

Name|Description
----|-----------
[IAspect](./constructs.IAspect.md)|Represents an Aspect.
[IConstruct](./constructs.IConstruct.md)|Represents a construct.
[INodeFactory](./constructs.INodeFactory.md)|A factory for attaching \`Node\`s to the construct.
[ISynthesisSession](./constructs.ISynthesisSession.md)|Represents a single session of synthesis.
[IValidation](./constructs.IValidation.md)|Implement this interface in order for the construct to be able to validate itself.


**Enums**

Name|Description
----|-----------
[ConstructOrder](./constructs.ConstructOrder.md)|In what order to return constructs.
",
}
`;
